var Ow=Object.defineProperty,Uw=Object.defineProperties;var kw=Object.getOwnPropertyDescriptors;var sm=Object.getOwnPropertySymbols;var Hw=Object.prototype.hasOwnProperty,Vw=Object.prototype.propertyIsEnumerable;var rm=(s,e,t)=>e in s?Ow(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,Lt=(s,e)=>{for(var t in e||(e={}))Hw.call(e,t)&&rm(s,t,e[t]);if(sm)for(var t of sm(e))Vw.call(e,t)&&rm(s,t,e[t]);return s},yi=(s,e)=>Uw(s,kw(e));function Cd(s,e){const t=Object.create(null),n=s.split(",");for(let i=0;i<n.length;i++)t[n[i]]=!0;return e?i=>!!t[i.toLowerCase()]:i=>!!t[i]}const Gw="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Ww=Cd(Gw);function ay(s){return!!s||s===""}function Su(s){if(ke(s)){const e={};for(let t=0;t<s.length;t++){const n=s[t],i=Vt(n)?Xw(n):Su(n);if(i)for(const r in i)e[r]=i[r]}return e}else{if(Vt(s))return s;if(Gt(s))return s}}const qw=/;(?![^(]*\))/g,jw=/:(.+)/;function Xw(s){const e={};return s.split(qw).forEach(t=>{if(t){const n=t.split(jw);n.length>1&&(e[n[0].trim()]=n[1].trim())}}),e}function Eu(s){let e="";if(Vt(s))e=s;else if(ke(s))for(let t=0;t<s.length;t++){const n=Eu(s[t]);n&&(e+=n+" ")}else if(Gt(s))for(const t in s)s[t]&&(e+=t+" ");return e.trim()}function $w(s){if(!s)return null;let{class:e,style:t}=s;return e&&!Vt(e)&&(s.class=Eu(e)),t&&(s.style=Su(t)),s}const Yw=s=>Vt(s)?s:s==null?"":ke(s)||Gt(s)&&(s.toString===hy||!Ue(s.toString))?JSON.stringify(s,ly,2):String(s),ly=(s,e)=>e&&e.__v_isRef?ly(s,e.value):uo(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[n,i])=>(t[`${n} =>`]=i,t),{})}:cy(e)?{[`Set(${e.size})`]:[...e.values()]}:Gt(e)&&!ke(e)&&!fy(e)?String(e):e,ut={},co=[],Hn=()=>{},Zw=()=>!1,Kw=/^on[^a-z]/,al=s=>Kw.test(s),Rd=s=>s.startsWith("onUpdate:"),tn=Object.assign,Ld=(s,e)=>{const t=s.indexOf(e);t>-1&&s.splice(t,1)},Jw=Object.prototype.hasOwnProperty,Ze=(s,e)=>Jw.call(s,e),ke=Array.isArray,uo=s=>Tu(s)==="[object Map]",cy=s=>Tu(s)==="[object Set]",Ue=s=>typeof s=="function",Vt=s=>typeof s=="string",Pd=s=>typeof s=="symbol",Gt=s=>s!==null&&typeof s=="object",uy=s=>Gt(s)&&Ue(s.then)&&Ue(s.catch),hy=Object.prototype.toString,Tu=s=>hy.call(s),Qw=s=>Tu(s).slice(8,-1),fy=s=>Tu(s)==="[object Object]",Id=s=>Vt(s)&&s!=="NaN"&&s[0]!=="-"&&""+parseInt(s,10)===s,Ta=Cd(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Au=s=>{const e=Object.create(null);return t=>e[t]||(e[t]=s(t))},eb=/-(\w)/g,ui=Au(s=>s.replace(eb,(e,t)=>t?t.toUpperCase():"")),tb=/\B([A-Z])/g,Vo=Au(s=>s.replace(tb,"-$1").toLowerCase()),Cu=Au(s=>s.charAt(0).toUpperCase()+s.slice(1)),fh=Au(s=>s?`on${Cu(s)}`:""),za=(s,e)=>!Object.is(s,e),dh=(s,e)=>{for(let t=0;t<s.length;t++)s[t](e)},Qc=(s,e,t)=>{Object.defineProperty(s,e,{configurable:!0,enumerable:!1,value:t})},dy=s=>{const e=parseFloat(s);return isNaN(e)?s:e};let om;const nb=()=>om||(om=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});let ei;class ib{constructor(e=!1){this.active=!0,this.effects=[],this.cleanups=[],!e&&ei&&(this.parent=ei,this.index=(ei.scopes||(ei.scopes=[])).push(this)-1)}run(e){if(this.active){const t=ei;try{return ei=this,e()}finally{ei=t}}}on(){ei=this}off(){ei=this.parent}stop(e){if(this.active){let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(this.parent&&!e){const i=this.parent.scopes.pop();i&&i!==this&&(this.parent.scopes[this.index]=i,i.index=this.index)}this.active=!1}}}function sb(s,e=ei){e&&e.active&&e.effects.push(s)}const Fd=s=>{const e=new Set(s);return e.w=0,e.n=0,e},py=s=>(s.w&ms)>0,my=s=>(s.n&ms)>0,rb=({deps:s})=>{if(s.length)for(let e=0;e<s.length;e++)s[e].w|=ms},ob=s=>{const{deps:e}=s;if(e.length){let t=0;for(let n=0;n<e.length;n++){const i=e[n];py(i)&&!my(i)?i.delete(s):e[t++]=i,i.w&=~ms,i.n&=~ms}e.length=t}},gf=new WeakMap;let ba=0,ms=1;const yf=30;let Un;const er=Symbol(""),vf=Symbol("");class Bd{constructor(e,t=null,n){this.fn=e,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,sb(this,n)}run(){if(!this.active)return this.fn();let e=Un,t=cs;for(;e;){if(e===this)return;e=e.parent}try{return this.parent=Un,Un=this,cs=!0,ms=1<<++ba,ba<=yf?rb(this):am(this),this.fn()}finally{ba<=yf&&ob(this),ms=1<<--ba,Un=this.parent,cs=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){Un===this?this.deferStop=!0:this.active&&(am(this),this.onStop&&this.onStop(),this.active=!1)}}function am(s){const{deps:e}=s;if(e.length){for(let t=0;t<e.length;t++)e[t].delete(s);e.length=0}}let cs=!0;const gy=[];function Go(){gy.push(cs),cs=!1}function Wo(){const s=gy.pop();cs=s===void 0?!0:s}function vn(s,e,t){if(cs&&Un){let n=gf.get(s);n||gf.set(s,n=new Map);let i=n.get(t);i||n.set(t,i=Fd()),yy(i)}}function yy(s,e){let t=!1;ba<=yf?my(s)||(s.n|=ms,t=!py(s)):t=!s.has(Un),t&&(s.add(Un),Un.deps.push(s))}function Di(s,e,t,n,i,r){const o=gf.get(s);if(!o)return;let a=[];if(e==="clear")a=[...o.values()];else if(t==="length"&&ke(s))o.forEach((l,c)=>{(c==="length"||c>=n)&&a.push(l)});else switch(t!==void 0&&a.push(o.get(t)),e){case"add":ke(s)?Id(t)&&a.push(o.get("length")):(a.push(o.get(er)),uo(s)&&a.push(o.get(vf)));break;case"delete":ke(s)||(a.push(o.get(er)),uo(s)&&a.push(o.get(vf)));break;case"set":uo(s)&&a.push(o.get(er));break}if(a.length===1)a[0]&&xf(a[0]);else{const l=[];for(const c of a)c&&l.push(...c);xf(Fd(l))}}function xf(s,e){for(const t of ke(s)?s:[...s])(t!==Un||t.allowRecurse)&&(t.scheduler?t.scheduler():t.run())}const ab=Cd("__proto__,__v_isRef,__isVue"),vy=new Set(Object.getOwnPropertyNames(Symbol).map(s=>Symbol[s]).filter(Pd)),lb=Dd(),cb=Dd(!1,!0),ub=Dd(!0),lm=hb();function hb(){const s={};return["includes","indexOf","lastIndexOf"].forEach(e=>{s[e]=function(...t){const n=rt(this);for(let r=0,o=this.length;r<o;r++)vn(n,"get",r+"");const i=n[e](...t);return i===-1||i===!1?n[e](...t.map(rt)):i}}),["push","pop","shift","unshift","splice"].forEach(e=>{s[e]=function(...t){Go();const n=rt(this)[e].apply(this,t);return Wo(),n}}),s}function Dd(s=!1,e=!1){return function(n,i,r){if(i==="__v_isReactive")return!s;if(i==="__v_isReadonly")return s;if(i==="__v_isShallow")return e;if(i==="__v_raw"&&r===(s?e?Ab:My:e?by:wy).get(n))return n;const o=ke(n);if(!s&&o&&Ze(lm,i))return Reflect.get(lm,i,r);const a=Reflect.get(n,i,r);return(Pd(i)?vy.has(i):ab(i))||(s||vn(n,"get",i),e)?a:Nt(a)?!o||!Id(i)?a.value:a:Gt(a)?s?Sy(a):lr(a):a}}const fb=xy(),db=xy(!0);function xy(s=!1){return function(t,n,i,r){let o=t[n];if(Na(o)&&Nt(o)&&!Nt(i))return!1;if(!s&&!Na(i)&&(Ey(i)||(i=rt(i),o=rt(o)),!ke(t)&&Nt(o)&&!Nt(i)))return o.value=i,!0;const a=ke(t)&&Id(n)?Number(n)<t.length:Ze(t,n),l=Reflect.set(t,n,i,r);return t===rt(r)&&(a?za(i,o)&&Di(t,"set",n,i):Di(t,"add",n,i)),l}}function pb(s,e){const t=Ze(s,e);s[e];const n=Reflect.deleteProperty(s,e);return n&&t&&Di(s,"delete",e,void 0),n}function mb(s,e){const t=Reflect.has(s,e);return(!Pd(e)||!vy.has(e))&&vn(s,"has",e),t}function gb(s){return vn(s,"iterate",ke(s)?"length":er),Reflect.ownKeys(s)}const _y={get:lb,set:fb,deleteProperty:pb,has:mb,ownKeys:gb},yb={get:ub,set(s,e){return!0},deleteProperty(s,e){return!0}},vb=tn({},_y,{get:cb,set:db}),zd=s=>s,Ru=s=>Reflect.getPrototypeOf(s);function Bl(s,e,t=!1,n=!1){s=s.__v_raw;const i=rt(s),r=rt(e);e!==r&&!t&&vn(i,"get",e),!t&&vn(i,"get",r);const{has:o}=Ru(i),a=n?zd:t?Ud:Oa;if(o.call(i,e))return a(s.get(e));if(o.call(i,r))return a(s.get(r));s!==i&&s.get(e)}function Dl(s,e=!1){const t=this.__v_raw,n=rt(t),i=rt(s);return s!==i&&!e&&vn(n,"has",s),!e&&vn(n,"has",i),s===i?t.has(s):t.has(s)||t.has(i)}function zl(s,e=!1){return s=s.__v_raw,!e&&vn(rt(s),"iterate",er),Reflect.get(s,"size",s)}function cm(s){s=rt(s);const e=rt(this);return Ru(e).has.call(e,s)||(e.add(s),Di(e,"add",s,s)),this}function um(s,e){e=rt(e);const t=rt(this),{has:n,get:i}=Ru(t);let r=n.call(t,s);r||(s=rt(s),r=n.call(t,s));const o=i.call(t,s);return t.set(s,e),r?za(e,o)&&Di(t,"set",s,e):Di(t,"add",s,e),this}function hm(s){const e=rt(this),{has:t,get:n}=Ru(e);let i=t.call(e,s);i||(s=rt(s),i=t.call(e,s)),n&&n.call(e,s);const r=e.delete(s);return i&&Di(e,"delete",s,void 0),r}function fm(){const s=rt(this),e=s.size!==0,t=s.clear();return e&&Di(s,"clear",void 0,void 0),t}function Nl(s,e){return function(n,i){const r=this,o=r.__v_raw,a=rt(o),l=e?zd:s?Ud:Oa;return!s&&vn(a,"iterate",er),o.forEach((c,u)=>n.call(i,l(c),l(u),r))}}function Ol(s,e,t){return function(...n){const i=this.__v_raw,r=rt(i),o=uo(r),a=s==="entries"||s===Symbol.iterator&&o,l=s==="keys"&&o,c=i[s](...n),u=t?zd:e?Ud:Oa;return!e&&vn(r,"iterate",l?vf:er),{next(){const{value:h,done:f}=c.next();return f?{value:h,done:f}:{value:a?[u(h[0]),u(h[1])]:u(h),done:f}},[Symbol.iterator](){return this}}}}function Xi(s){return function(...e){return s==="delete"?!1:this}}function xb(){const s={get(r){return Bl(this,r)},get size(){return zl(this)},has:Dl,add:cm,set:um,delete:hm,clear:fm,forEach:Nl(!1,!1)},e={get(r){return Bl(this,r,!1,!0)},get size(){return zl(this)},has:Dl,add:cm,set:um,delete:hm,clear:fm,forEach:Nl(!1,!0)},t={get(r){return Bl(this,r,!0)},get size(){return zl(this,!0)},has(r){return Dl.call(this,r,!0)},add:Xi("add"),set:Xi("set"),delete:Xi("delete"),clear:Xi("clear"),forEach:Nl(!0,!1)},n={get(r){return Bl(this,r,!0,!0)},get size(){return zl(this,!0)},has(r){return Dl.call(this,r,!0)},add:Xi("add"),set:Xi("set"),delete:Xi("delete"),clear:Xi("clear"),forEach:Nl(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(r=>{s[r]=Ol(r,!1,!1),t[r]=Ol(r,!0,!1),e[r]=Ol(r,!1,!0),n[r]=Ol(r,!0,!0)}),[s,t,e,n]}const[_b,wb,bb,Mb]=xb();function Nd(s,e){const t=e?s?Mb:bb:s?wb:_b;return(n,i,r)=>i==="__v_isReactive"?!s:i==="__v_isReadonly"?s:i==="__v_raw"?n:Reflect.get(Ze(t,i)&&i in n?t:n,i,r)}const Sb={get:Nd(!1,!1)},Eb={get:Nd(!1,!0)},Tb={get:Nd(!0,!1)},wy=new WeakMap,by=new WeakMap,My=new WeakMap,Ab=new WeakMap;function Cb(s){switch(s){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Rb(s){return s.__v_skip||!Object.isExtensible(s)?0:Cb(Qw(s))}function lr(s){return Na(s)?s:Od(s,!1,_y,Sb,wy)}function Lb(s){return Od(s,!1,vb,Eb,by)}function Sy(s){return Od(s,!0,yb,Tb,My)}function Od(s,e,t,n,i){if(!Gt(s)||s.__v_raw&&!(e&&s.__v_isReactive))return s;const r=i.get(s);if(r)return r;const o=Rb(s);if(o===0)return s;const a=new Proxy(s,o===2?n:t);return i.set(s,a),a}function ho(s){return Na(s)?ho(s.__v_raw):!!(s&&s.__v_isReactive)}function Na(s){return!!(s&&s.__v_isReadonly)}function Ey(s){return!!(s&&s.__v_isShallow)}function Ty(s){return ho(s)||Na(s)}function rt(s){const e=s&&s.__v_raw;return e?rt(e):s}function Ay(s){return Qc(s,"__v_skip",!0),s}const Oa=s=>Gt(s)?lr(s):s,Ud=s=>Gt(s)?Sy(s):s;function Cy(s){cs&&Un&&(s=rt(s),yy(s.dep||(s.dep=Fd())))}function Ry(s,e){s=rt(s),s.dep&&xf(s.dep)}function Nt(s){return!!(s&&s.__v_isRef===!0)}function dm(s){return Pb(s,!1)}function Pb(s,e){return Nt(s)?s:new Ib(s,e)}class Ib{constructor(e,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?e:rt(e),this._value=t?e:Oa(e)}get value(){return Cy(this),this._value}set value(e){e=this.__v_isShallow?e:rt(e),za(e,this._rawValue)&&(this._rawValue=e,this._value=this.__v_isShallow?e:Oa(e),Ry(this))}}function Fb(s){return Nt(s)?s.value:s}const Bb={get:(s,e,t)=>Fb(Reflect.get(s,e,t)),set:(s,e,t,n)=>{const i=s[e];return Nt(i)&&!Nt(t)?(i.value=t,!0):Reflect.set(s,e,t,n)}};function Ly(s){return ho(s)?s:new Proxy(s,Bb)}class Db{constructor(e,t,n){this._object=e,this._key=t,this._defaultValue=n,this.__v_isRef=!0}get value(){const e=this._object[this._key];return e===void 0?this._defaultValue:e}set value(e){this._object[this._key]=e}}function zb(s,e,t){const n=s[e];return Nt(n)?n:new Db(s,e,t)}class Nb{constructor(e,t,n,i){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new Bd(e,()=>{this._dirty||(this._dirty=!0,Ry(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!i,this.__v_isReadonly=n}get value(){const e=rt(this);return Cy(e),(e._dirty||!e._cacheable)&&(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}function Ob(s,e,t=!1){let n,i;const r=Ue(s);return r?(n=s,i=Hn):(n=s.get,i=s.set),new Nb(n,i,r||!i,t)}function us(s,e,t,n){let i;try{i=n?s(...n):s()}catch(r){ll(r,e,t)}return i}function Vn(s,e,t,n){if(Ue(s)){const r=us(s,e,t,n);return r&&uy(r)&&r.catch(o=>{ll(o,e,t)}),r}const i=[];for(let r=0;r<s.length;r++)i.push(Vn(s[r],e,t,n));return i}function ll(s,e,t,n=!0){const i=e?e.vnode:null;if(e){let r=e.parent;const o=e.proxy,a=t;for(;r;){const c=r.ec;if(c){for(let u=0;u<c.length;u++)if(c[u](s,o,a)===!1)return}r=r.parent}const l=e.appContext.config.errorHandler;if(l){us(l,null,10,[s,o,a]);return}}Ub(s,t,i,n)}function Ub(s,e,t,n=!0){console.error(s)}let eu=!1,_f=!1;const pn=[];let Ri=0;const Aa=[];let Ma=null,Qr=0;const Ca=[];let rs=null,eo=0;const Py=Promise.resolve();let kd=null,wf=null;function Iy(s){const e=kd||Py;return s?e.then(this?s.bind(this):s):e}function kb(s){let e=Ri+1,t=pn.length;for(;e<t;){const n=e+t>>>1;Ua(pn[n])<s?e=n+1:t=n}return e}function Fy(s){(!pn.length||!pn.includes(s,eu&&s.allowRecurse?Ri+1:Ri))&&s!==wf&&(s.id==null?pn.push(s):pn.splice(kb(s.id),0,s),By())}function By(){!eu&&!_f&&(_f=!0,kd=Py.then(Ny))}function Hb(s){const e=pn.indexOf(s);e>Ri&&pn.splice(e,1)}function Dy(s,e,t,n){ke(s)?t.push(...s):(!e||!e.includes(s,s.allowRecurse?n+1:n))&&t.push(s),By()}function Vb(s){Dy(s,Ma,Aa,Qr)}function zy(s){Dy(s,rs,Ca,eo)}function Hd(s,e=null){if(Aa.length){for(wf=e,Ma=[...new Set(Aa)],Aa.length=0,Qr=0;Qr<Ma.length;Qr++)Ma[Qr]();Ma=null,Qr=0,wf=null,Hd(s,e)}}function tu(s){if(Ca.length){const e=[...new Set(Ca)];if(Ca.length=0,rs){rs.push(...e);return}for(rs=e,rs.sort((t,n)=>Ua(t)-Ua(n)),eo=0;eo<rs.length;eo++)rs[eo]();rs=null,eo=0}}const Ua=s=>s.id==null?1/0:s.id;function Ny(s){_f=!1,eu=!0,Hd(s),pn.sort((t,n)=>Ua(t)-Ua(n));const e=Hn;try{for(Ri=0;Ri<pn.length;Ri++){const t=pn[Ri];t&&t.active!==!1&&us(t,null,14)}}finally{Ri=0,pn.length=0,tu(),eu=!1,kd=null,(pn.length||Aa.length||Ca.length)&&Ny(s)}}function Gb(s,e,...t){if(s.isUnmounted)return;const n=s.vnode.props||ut;let i=t;const r=e.startsWith("update:"),o=r&&e.slice(7);if(o&&o in n){const u=`${o==="modelValue"?"model":o}Modifiers`,{number:h,trim:f}=n[u]||ut;f?i=t.map(d=>d.trim()):h&&(i=t.map(dy))}let a,l=n[a=fh(e)]||n[a=fh(ui(e))];!l&&r&&(l=n[a=fh(Vo(e))]),l&&Vn(l,s,6,i);const c=n[a+"Once"];if(c){if(!s.emitted)s.emitted={};else if(s.emitted[a])return;s.emitted[a]=!0,Vn(c,s,6,i)}}function Oy(s,e,t=!1){const n=e.emitsCache,i=n.get(s);if(i!==void 0)return i;const r=s.emits;let o={},a=!1;if(!Ue(s)){const l=c=>{const u=Oy(c,e,!0);u&&(a=!0,tn(o,u))};!t&&e.mixins.length&&e.mixins.forEach(l),s.extends&&l(s.extends),s.mixins&&s.mixins.forEach(l)}return!r&&!a?(n.set(s,null),null):(ke(r)?r.forEach(l=>o[l]=null):tn(o,r),n.set(s,o),o)}function Lu(s,e){return!s||!al(e)?!1:(e=e.slice(2).replace(/Once$/,""),Ze(s,e[0].toLowerCase()+e.slice(1))||Ze(s,Vo(e))||Ze(s,e))}let kn=null,Pu=null;function nu(s){const e=kn;return kn=s,Pu=s&&s.type.__scopeId||null,e}function Vd(s){Pu=s}function Gd(){Pu=null}function Wd(s,e=kn,t){if(!e||s._n)return s;const n=(...i)=>{n._d&&Em(-1);const r=nu(e),o=s(...i);return nu(r),n._d&&Em(1),o};return n._n=!0,n._c=!0,n._d=!0,n}function ph(s){const{type:e,vnode:t,proxy:n,withProxy:i,props:r,propsOptions:[o],slots:a,attrs:l,emit:c,render:u,renderCache:h,data:f,setupState:d,ctx:p,inheritAttrs:g}=s;let m,v;const y=nu(s);try{if(t.shapeFlag&4){const _=i||n;m=Sn(u.call(_,_,h,r,d,f,p)),v=l}else{const _=e;m=Sn(_.length>1?_(r,{attrs:l,slots:a,emit:c}):_(r,null)),v=e.props?l:qb(l)}}catch(_){Ra.length=0,ll(_,s,1),m=$t(gs)}let x=m;if(v&&g!==!1){const _=Object.keys(v),{shapeFlag:b}=x;_.length&&b&7&&(o&&_.some(Rd)&&(v=jb(v,o)),x=Ga(x,v))}return t.dirs&&(x.dirs=x.dirs?x.dirs.concat(t.dirs):t.dirs),t.transition&&(x.transition=t.transition),m=x,nu(y),m}function Wb(s){let e;for(let t=0;t<s.length;t++){const n=s[t];if(ou(n)){if(n.type!==gs||n.children==="v-if"){if(e)return;e=n}}else return}return e}const qb=s=>{let e;for(const t in s)(t==="class"||t==="style"||al(t))&&((e||(e={}))[t]=s[t]);return e},jb=(s,e)=>{const t={};for(const n in s)(!Rd(n)||!(n.slice(9)in e))&&(t[n]=s[n]);return t};function Xb(s,e,t){const{props:n,children:i,component:r}=s,{props:o,children:a,patchFlag:l}=e,c=r.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return n?pm(n,o,c):!!o;if(l&8){const u=e.dynamicProps;for(let h=0;h<u.length;h++){const f=u[h];if(o[f]!==n[f]&&!Lu(c,f))return!0}}}else return(i||a)&&(!a||!a.$stable)?!0:n===o?!1:n?o?pm(n,o,c):!0:!!o;return!1}function pm(s,e,t){const n=Object.keys(e);if(n.length!==Object.keys(s).length)return!0;for(let i=0;i<n.length;i++){const r=n[i];if(e[r]!==s[r]&&!Lu(t,r))return!0}return!1}function qd({vnode:s,parent:e},t){for(;e&&e.subTree===s;)(s=e.vnode).el=t,e=e.parent}const $b=s=>s.__isSuspense,Yb={name:"Suspense",__isSuspense:!0,process(s,e,t,n,i,r,o,a,l,c){s==null?Kb(e,t,n,i,r,o,a,l,c):Jb(s,e,t,n,i,o,a,l,c)},hydrate:Qb,create:jd,normalize:eM},Zb=Yb;function ka(s,e){const t=s.props&&s.props[e];Ue(t)&&t()}function Kb(s,e,t,n,i,r,o,a,l){const{p:c,o:{createElement:u}}=l,h=u("div"),f=s.suspense=jd(s,i,n,e,h,t,r,o,a,l);c(null,f.pendingBranch=s.ssContent,h,null,n,f,r,o),f.deps>0?(ka(s,"onPending"),ka(s,"onFallback"),c(null,s.ssFallback,e,t,n,null,r,o),fo(f,s.ssFallback)):f.resolve()}function Jb(s,e,t,n,i,r,o,a,{p:l,um:c,o:{createElement:u}}){const h=e.suspense=s.suspense;h.vnode=e,e.el=s.el;const f=e.ssContent,d=e.ssFallback,{activeBranch:p,pendingBranch:g,isInFallback:m,isHydrating:v}=h;if(g)h.pendingBranch=f,as(f,g)?(l(g,f,h.hiddenContainer,null,i,h,r,o,a),h.deps<=0?h.resolve():m&&(l(p,d,t,n,i,null,r,o,a),fo(h,d))):(h.pendingId++,v?(h.isHydrating=!1,h.activeBranch=g):c(g,i,h),h.deps=0,h.effects.length=0,h.hiddenContainer=u("div"),m?(l(null,f,h.hiddenContainer,null,i,h,r,o,a),h.deps<=0?h.resolve():(l(p,d,t,n,i,null,r,o,a),fo(h,d))):p&&as(f,p)?(l(p,f,t,n,i,h,r,o,a),h.resolve(!0)):(l(null,f,h.hiddenContainer,null,i,h,r,o,a),h.deps<=0&&h.resolve()));else if(p&&as(f,p))l(p,f,t,n,i,h,r,o,a),fo(h,f);else if(ka(e,"onPending"),h.pendingBranch=f,h.pendingId++,l(null,f,h.hiddenContainer,null,i,h,r,o,a),h.deps<=0)h.resolve();else{const{timeout:y,pendingId:x}=h;y>0?setTimeout(()=>{h.pendingId===x&&h.fallback(d)},y):y===0&&h.fallback(d)}}function jd(s,e,t,n,i,r,o,a,l,c,u=!1){const{p:h,m:f,um:d,n:p,o:{parentNode:g,remove:m}}=c,v=dy(s.props&&s.props.timeout),y={vnode:s,parent:e,parentComponent:t,isSVG:o,container:n,hiddenContainer:i,anchor:r,deps:0,pendingId:0,timeout:typeof v=="number"?v:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:u,isUnmounted:!1,effects:[],resolve(x=!1){const{vnode:_,activeBranch:b,pendingBranch:S,pendingId:E,effects:w,parentComponent:A,container:L}=y;if(y.isHydrating)y.isHydrating=!1;else if(!x){const O=b&&S.transition&&S.transition.mode==="out-in";O&&(b.transition.afterLeave=()=>{E===y.pendingId&&f(S,L,I,0)});let{anchor:I}=y;b&&(I=p(b),d(b,A,y,!0)),O||f(S,L,I,0)}fo(y,S),y.pendingBranch=null,y.isInFallback=!1;let N=y.parent,k=!1;for(;N;){if(N.pendingBranch){N.effects.push(...w),k=!0;break}N=N.parent}k||zy(w),y.effects=[],ka(_,"onResolve")},fallback(x){if(!y.pendingBranch)return;const{vnode:_,activeBranch:b,parentComponent:S,container:E,isSVG:w}=y;ka(_,"onFallback");const A=p(b),L=()=>{!y.isInFallback||(h(null,x,E,A,S,null,w,a,l),fo(y,x))},N=x.transition&&x.transition.mode==="out-in";N&&(b.transition.afterLeave=L),y.isInFallback=!0,d(b,S,null,!0),N||L()},move(x,_,b){y.activeBranch&&f(y.activeBranch,x,_,b),y.container=x},next(){return y.activeBranch&&p(y.activeBranch)},registerDep(x,_){const b=!!y.pendingBranch;b&&y.deps++;const S=x.vnode.el;x.asyncDep.catch(E=>{ll(E,x,0)}).then(E=>{if(x.isUnmounted||y.isUnmounted||y.pendingId!==x.suspenseId)return;x.asyncResolved=!0;const{vnode:w}=x;Cf(x,E,!1),S&&(w.el=S);const A=!S&&x.subTree.el;_(x,w,g(S||x.subTree.el),S?null:p(x.subTree),y,o,l),A&&m(A),qd(x,w.el),b&&--y.deps===0&&y.resolve()})},unmount(x,_){y.isUnmounted=!0,y.activeBranch&&d(y.activeBranch,t,x,_),y.pendingBranch&&d(y.pendingBranch,t,x,_)}};return y}function Qb(s,e,t,n,i,r,o,a,l){const c=e.suspense=jd(e,n,t,s.parentNode,document.createElement("div"),null,i,r,o,a,!0),u=l(s,c.pendingBranch=e.ssContent,t,c,r,o);return c.deps===0&&c.resolve(),u}function eM(s){const{shapeFlag:e,children:t}=s,n=e&32;s.ssContent=mm(n?t.default:t),s.ssFallback=n?mm(t.fallback):$t(gs)}function mm(s){let e;if(Ue(s)){const t=Va&&s._c;t&&(s._d=!1,Fi()),s=s(),t&&(s._d=!0,e=hs,iv())}return ke(s)&&(s=Wb(s)),s=Sn(s),e&&!s.dynamicChildren&&(s.dynamicChildren=e.filter(t=>t!==s)),s}function Uy(s,e){e&&e.pendingBranch?ke(s)?e.effects.push(...s):e.effects.push(s):zy(s)}function fo(s,e){s.activeBranch=e;const{vnode:t,parentComponent:n}=s,i=t.el=e.el;n&&n.subTree===t&&(n.vnode.el=i,qd(n,i))}function tM(s,e){if(kt){let t=kt.provides;const n=kt.parent&&kt.parent.provides;n===t&&(t=kt.provides=Object.create(n)),t[s]=e}}function mh(s,e,t=!1){const n=kt||kn;if(n){const i=n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides;if(i&&s in i)return i[s];if(arguments.length>1)return t&&Ue(e)?e.call(n.proxy):e}}function gm(s,e){return Xd(s,null,e)}const ym={};function gh(s,e,t){return Xd(s,e,t)}function Xd(s,e,{immediate:t,deep:n,flush:i,onTrack:r,onTrigger:o}=ut){const a=kt;let l,c=!1,u=!1;if(Nt(s)?(l=()=>s.value,c=Ey(s)):ho(s)?(l=()=>s,n=!0):ke(s)?(u=!0,c=s.some(ho),l=()=>s.map(v=>{if(Nt(v))return v.value;if(ho(v))return io(v);if(Ue(v))return us(v,a,2)})):Ue(s)?e?l=()=>us(s,a,2):l=()=>{if(!(a&&a.isUnmounted))return h&&h(),Vn(s,a,3,[f])}:l=Hn,e&&n){const v=l;l=()=>io(v())}let h,f=v=>{h=m.onStop=()=>{us(v,a,4)}};if(Wa)return f=Hn,e?t&&Vn(e,a,3,[l(),u?[]:void 0,f]):l(),Hn;let d=u?[]:ym;const p=()=>{if(!!m.active)if(e){const v=m.run();(n||c||(u?v.some((y,x)=>za(y,d[x])):za(v,d)))&&(h&&h(),Vn(e,a,3,[v,d===ym?void 0:d,f]),d=v)}else m.run()};p.allowRecurse=!!e;let g;i==="sync"?g=p:i==="post"?g=()=>an(p,a&&a.suspense):g=()=>{!a||a.isMounted?Vb(p):p()};const m=new Bd(l,g);return e?t?p():d=m.run():i==="post"?an(m.run.bind(m),a&&a.suspense):m.run(),()=>{m.stop(),a&&a.scope&&Ld(a.scope.effects,m)}}function nM(s,e,t){const n=this.proxy,i=Vt(s)?s.includes(".")?ky(n,s):()=>n[s]:s.bind(n,n);let r;Ue(e)?r=e:(r=e.handler,t=e);const o=kt;go(this);const a=Xd(i,r.bind(n),t);return o?go(o):tr(),a}function ky(s,e){const t=e.split(".");return()=>{let n=s;for(let i=0;i<t.length&&n;i++)n=n[t[i]];return n}}function io(s,e){if(!Gt(s)||s.__v_skip||(e=e||new Set,e.has(s)))return s;if(e.add(s),Nt(s))io(s.value,e);else if(ke(s))for(let t=0;t<s.length;t++)io(s[t],e);else if(cy(s)||uo(s))s.forEach(t=>{io(t,e)});else if(fy(s))for(const t in s)io(s[t],e);return s}function gi(s){return Ue(s)?{setup:s,name:s.name}:s}const iu=s=>!!s.type.__asyncLoader,Hy=s=>s.type.__isKeepAlive;function iM(s,e){Vy(s,"a",e)}function sM(s,e){Vy(s,"da",e)}function Vy(s,e,t=kt){const n=s.__wdc||(s.__wdc=()=>{let i=t;for(;i;){if(i.isDeactivated)return;i=i.parent}return s()});if(Iu(e,n,t),t){let i=t.parent;for(;i&&i.parent;)Hy(i.parent.vnode)&&rM(n,e,t,i),i=i.parent}}function rM(s,e,t,n){const i=Iu(e,s,n,!0);Wy(()=>{Ld(n[e],i)},t)}function Iu(s,e,t=kt,n=!1){if(t){const i=t[s]||(t[s]=[]),r=e.__weh||(e.__weh=(...o)=>{if(t.isUnmounted)return;Go(),go(t);const a=Vn(e,t,s,o);return tr(),Wo(),a});return n?i.unshift(r):i.push(r),r}}const Vi=s=>(e,t=kt)=>(!Wa||s==="sp")&&Iu(s,e,t),oM=Vi("bm"),bf=Vi("m"),aM=Vi("bu"),lM=Vi("u"),Gy=Vi("bum"),Wy=Vi("um"),cM=Vi("sp"),uM=Vi("rtg"),hM=Vi("rtc");function Mf(s,e=kt){Iu("ec",s,e)}let Sf=!0;function fM(s){const e=jy(s),t=s.proxy,n=s.ctx;Sf=!1,e.beforeCreate&&vm(e.beforeCreate,s,"bc");const{data:i,computed:r,methods:o,watch:a,provide:l,inject:c,created:u,beforeMount:h,mounted:f,beforeUpdate:d,updated:p,activated:g,deactivated:m,beforeDestroy:v,beforeUnmount:y,destroyed:x,unmounted:_,render:b,renderTracked:S,renderTriggered:E,errorCaptured:w,serverPrefetch:A,expose:L,inheritAttrs:N,components:k,directives:O,filters:I}=e;if(c&&dM(c,n,null,s.appContext.config.unwrapInjectedRef),o)for(const j in o){const G=o[j];Ue(G)&&(n[j]=G.bind(t))}if(i){const j=i.call(t,t);Gt(j)&&(s.data=lr(j))}if(Sf=!0,r)for(const j in r){const G=r[j],V=Ue(G)?G.bind(t,t):Ue(G.get)?G.get.bind(t,t):Hn,Y=!Ue(G)&&Ue(G.set)?G.set.bind(t):Hn,te=yo({get:V,set:Y});Object.defineProperty(n,j,{enumerable:!0,configurable:!0,get:()=>te.value,set:X=>te.value=X})}if(a)for(const j in a)qy(a[j],n,t,j);if(l){const j=Ue(l)?l.call(t):l;Reflect.ownKeys(j).forEach(G=>{tM(G,j[G])})}u&&vm(u,s,"c");function D(j,G){ke(G)?G.forEach(V=>j(V.bind(t))):G&&j(G.bind(t))}if(D(oM,h),D(bf,f),D(aM,d),D(lM,p),D(iM,g),D(sM,m),D(Mf,w),D(hM,S),D(uM,E),D(Gy,y),D(Wy,_),D(cM,A),ke(L))if(L.length){const j=s.exposed||(s.exposed={});L.forEach(G=>{Object.defineProperty(j,G,{get:()=>t[G],set:V=>t[G]=V})})}else s.exposed||(s.exposed={});b&&s.render===Hn&&(s.render=b),N!=null&&(s.inheritAttrs=N),k&&(s.components=k),O&&(s.directives=O)}function dM(s,e,t=Hn,n=!1){ke(s)&&(s=Ef(s));for(const i in s){const r=s[i];let o;Gt(r)?"default"in r?o=mh(r.from||i,r.default,!0):o=mh(r.from||i):o=mh(r),Nt(o)&&n?Object.defineProperty(e,i,{enumerable:!0,configurable:!0,get:()=>o.value,set:a=>o.value=a}):e[i]=o}}function vm(s,e,t){Vn(ke(s)?s.map(n=>n.bind(e.proxy)):s.bind(e.proxy),e,t)}function qy(s,e,t,n){const i=n.includes(".")?ky(t,n):()=>t[n];if(Vt(s)){const r=e[s];Ue(r)&&gh(i,r)}else if(Ue(s))gh(i,s.bind(t));else if(Gt(s))if(ke(s))s.forEach(r=>qy(r,e,t,n));else{const r=Ue(s.handler)?s.handler.bind(t):e[s.handler];Ue(r)&&gh(i,r,s)}}function jy(s){const e=s.type,{mixins:t,extends:n}=e,{mixins:i,optionsCache:r,config:{optionMergeStrategies:o}}=s.appContext,a=r.get(e);let l;return a?l=a:!i.length&&!t&&!n?l=e:(l={},i.length&&i.forEach(c=>su(l,c,o,!0)),su(l,e,o)),r.set(e,l),l}function su(s,e,t,n=!1){const{mixins:i,extends:r}=e;r&&su(s,r,t,!0),i&&i.forEach(o=>su(s,o,t,!0));for(const o in e)if(!(n&&o==="expose")){const a=pM[o]||t&&t[o];s[o]=a?a(s[o],e[o]):e[o]}return s}const pM={data:xm,props:Gs,emits:Gs,methods:Gs,computed:Gs,beforeCreate:Jt,created:Jt,beforeMount:Jt,mounted:Jt,beforeUpdate:Jt,updated:Jt,beforeDestroy:Jt,beforeUnmount:Jt,destroyed:Jt,unmounted:Jt,activated:Jt,deactivated:Jt,errorCaptured:Jt,serverPrefetch:Jt,components:Gs,directives:Gs,watch:gM,provide:xm,inject:mM};function xm(s,e){return e?s?function(){return tn(Ue(s)?s.call(this,this):s,Ue(e)?e.call(this,this):e)}:e:s}function mM(s,e){return Gs(Ef(s),Ef(e))}function Ef(s){if(ke(s)){const e={};for(let t=0;t<s.length;t++)e[s[t]]=s[t];return e}return s}function Jt(s,e){return s?[...new Set([].concat(s,e))]:e}function Gs(s,e){return s?tn(tn(Object.create(null),s),e):e}function gM(s,e){if(!s)return e;if(!e)return s;const t=tn(Object.create(null),s);for(const n in e)t[n]=Jt(s[n],e[n]);return t}function yM(s,e,t,n=!1){const i={},r={};Qc(r,Bu,1),s.propsDefaults=Object.create(null),Xy(s,e,i,r);for(const o in s.propsOptions[0])o in i||(i[o]=void 0);t?s.props=n?i:Lb(i):s.type.props?s.props=i:s.props=r,s.attrs=r}function vM(s,e,t,n){const{props:i,attrs:r,vnode:{patchFlag:o}}=s,a=rt(i),[l]=s.propsOptions;let c=!1;if((n||o>0)&&!(o&16)){if(o&8){const u=s.vnode.dynamicProps;for(let h=0;h<u.length;h++){let f=u[h];if(Lu(s.emitsOptions,f))continue;const d=e[f];if(l)if(Ze(r,f))d!==r[f]&&(r[f]=d,c=!0);else{const p=ui(f);i[p]=Tf(l,a,p,d,s,!1)}else d!==r[f]&&(r[f]=d,c=!0)}}}else{Xy(s,e,i,r)&&(c=!0);let u;for(const h in a)(!e||!Ze(e,h)&&((u=Vo(h))===h||!Ze(e,u)))&&(l?t&&(t[h]!==void 0||t[u]!==void 0)&&(i[h]=Tf(l,a,h,void 0,s,!0)):delete i[h]);if(r!==a)for(const h in r)(!e||!Ze(e,h)&&!0)&&(delete r[h],c=!0)}c&&Di(s,"set","$attrs")}function Xy(s,e,t,n){const[i,r]=s.propsOptions;let o=!1,a;if(e)for(let l in e){if(Ta(l))continue;const c=e[l];let u;i&&Ze(i,u=ui(l))?!r||!r.includes(u)?t[u]=c:(a||(a={}))[u]=c:Lu(s.emitsOptions,l)||(!(l in n)||c!==n[l])&&(n[l]=c,o=!0)}if(r){const l=rt(t),c=a||ut;for(let u=0;u<r.length;u++){const h=r[u];t[h]=Tf(i,l,h,c[h],s,!Ze(c,h))}}return o}function Tf(s,e,t,n,i,r){const o=s[t];if(o!=null){const a=Ze(o,"default");if(a&&n===void 0){const l=o.default;if(o.type!==Function&&Ue(l)){const{propsDefaults:c}=i;t in c?n=c[t]:(go(i),n=c[t]=l.call(null,e),tr())}else n=l}o[0]&&(r&&!a?n=!1:o[1]&&(n===""||n===Vo(t))&&(n=!0))}return n}function $y(s,e,t=!1){const n=e.propsCache,i=n.get(s);if(i)return i;const r=s.props,o={},a=[];let l=!1;if(!Ue(s)){const u=h=>{l=!0;const[f,d]=$y(h,e,!0);tn(o,f),d&&a.push(...d)};!t&&e.mixins.length&&e.mixins.forEach(u),s.extends&&u(s.extends),s.mixins&&s.mixins.forEach(u)}if(!r&&!l)return n.set(s,co),co;if(ke(r))for(let u=0;u<r.length;u++){const h=ui(r[u]);_m(h)&&(o[h]=ut)}else if(r)for(const u in r){const h=ui(u);if(_m(h)){const f=r[u],d=o[h]=ke(f)||Ue(f)?{type:f}:f;if(d){const p=Mm(Boolean,d.type),g=Mm(String,d.type);d[0]=p>-1,d[1]=g<0||p<g,(p>-1||Ze(d,"default"))&&a.push(h)}}}const c=[o,a];return n.set(s,c),c}function _m(s){return s[0]!=="$"}function wm(s){const e=s&&s.toString().match(/^\s*function (\w+)/);return e?e[1]:s===null?"null":""}function bm(s,e){return wm(s)===wm(e)}function Mm(s,e){return ke(e)?e.findIndex(t=>bm(t,s)):Ue(e)&&bm(e,s)?0:-1}const Yy=s=>s[0]==="_"||s==="$stable",$d=s=>ke(s)?s.map(Sn):[Sn(s)],xM=(s,e,t)=>{const n=Wd((...i)=>$d(e(...i)),t);return n._c=!1,n},Zy=(s,e,t)=>{const n=s._ctx;for(const i in s){if(Yy(i))continue;const r=s[i];if(Ue(r))e[i]=xM(i,r,n);else if(r!=null){const o=$d(r);e[i]=()=>o}}},Ky=(s,e)=>{const t=$d(e);s.slots.default=()=>t},_M=(s,e)=>{if(s.vnode.shapeFlag&32){const t=e._;t?(s.slots=rt(e),Qc(e,"_",t)):Zy(e,s.slots={})}else s.slots={},e&&Ky(s,e);Qc(s.slots,Bu,1)},wM=(s,e,t)=>{const{vnode:n,slots:i}=s;let r=!0,o=ut;if(n.shapeFlag&32){const a=e._;a?t&&a===1?r=!1:(tn(i,e),!t&&a===1&&delete i._):(r=!e.$stable,Zy(e,i)),o=e}else e&&(Ky(s,e),o={default:1});if(r)for(const a in i)!Yy(a)&&!(a in o)&&delete i[a]};function ii(s,e,t,n){const i=s.dirs,r=e&&e.dirs;for(let o=0;o<i.length;o++){const a=i[o];r&&(a.oldValue=r[o].value);let l=a.dir[n];l&&(Go(),Vn(l,t,8,[s.el,a,s,e]),Wo())}}function Jy(){return{app:null,config:{isNativeTag:Zw,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let bM=0;function MM(s,e){return function(n,i=null){Ue(n)||(n=Object.assign({},n)),i!=null&&!Gt(i)&&(i=null);const r=Jy(),o=new Set;let a=!1;const l=r.app={_uid:bM++,_component:n,_props:i,_container:null,_context:r,_instance:null,version:GM,get config(){return r.config},set config(c){},use(c,...u){return o.has(c)||(c&&Ue(c.install)?(o.add(c),c.install(l,...u)):Ue(c)&&(o.add(c),c(l,...u))),l},mixin(c){return r.mixins.includes(c)||r.mixins.push(c),l},component(c,u){return u?(r.components[c]=u,l):r.components[c]},directive(c,u){return u?(r.directives[c]=u,l):r.directives[c]},mount(c,u,h){if(!a){const f=$t(n,i);return f.appContext=r,u&&e?e(f,c):s(f,c,h),a=!0,l._container=c,c.__vue_app__=l,Jd(f.component)||f.component.proxy}},unmount(){a&&(s(null,l._container),delete l._container.__vue_app__)},provide(c,u){return r.provides[c]=u,l}};return l}}function ru(s,e,t,n,i=!1){if(ke(s)){s.forEach((f,d)=>ru(f,e&&(ke(e)?e[d]:e),t,n,i));return}if(iu(n)&&!i)return;const r=n.shapeFlag&4?Jd(n.component)||n.component.proxy:n.el,o=i?null:r,{i:a,r:l}=s,c=e&&e.r,u=a.refs===ut?a.refs={}:a.refs,h=a.setupState;if(c!=null&&c!==l&&(Vt(c)?(u[c]=null,Ze(h,c)&&(h[c]=null)):Nt(c)&&(c.value=null)),Ue(l))us(l,a,12,[o,u]);else{const f=Vt(l),d=Nt(l);if(f||d){const p=()=>{if(s.f){const g=f?u[l]:l.value;i?ke(g)&&Ld(g,r):ke(g)?g.includes(r)||g.push(r):f?(u[l]=[r],Ze(h,l)&&(h[l]=u[l])):(l.value=[r],s.k&&(u[s.k]=l.value))}else f?(u[l]=o,Ze(h,l)&&(h[l]=o)):Nt(l)&&(l.value=o,s.k&&(u[s.k]=o))};o?(p.id=-1,an(p,t)):p()}}}let $i=!1;const Ul=s=>/svg/.test(s.namespaceURI)&&s.tagName!=="foreignObject",yh=s=>s.nodeType===8;function SM(s){const{mt:e,p:t,o:{patchProp:n,nextSibling:i,parentNode:r,remove:o,insert:a,createComment:l}}=s,c=(m,v)=>{if(!v.hasChildNodes()){t(null,m,v),tu();return}$i=!1,u(v.firstChild,m,null,null,null),tu(),$i&&console.error("Hydration completed but contains mismatches.")},u=(m,v,y,x,_,b=!1)=>{const S=yh(m)&&m.data==="[",E=()=>p(m,v,y,x,_,S),{type:w,ref:A,shapeFlag:L}=v,N=m.nodeType;v.el=m;let k=null;switch(w){case Ha:N!==3?k=E():(m.data!==v.children&&($i=!0,m.data=v.children),k=i(m));break;case gs:N!==8||S?k=E():k=i(m);break;case kc:if(N!==1)k=E();else{k=m;const O=!v.children.length;for(let I=0;I<v.staticCount;I++)O&&(v.children+=k.outerHTML),I===v.staticCount-1&&(v.anchor=k),k=i(k);return k}break;case Nn:S?k=d(m,v,y,x,_,b):k=E();break;default:if(L&1)N!==1||v.type.toLowerCase()!==m.tagName.toLowerCase()?k=E():k=h(m,v,y,x,_,b);else if(L&6){v.slotScopeIds=_;const O=r(m);if(e(v,O,null,y,x,Ul(O),b),k=S?g(m):i(m),iu(v)){let I;S?(I=$t(Nn),I.anchor=k?k.previousSibling:O.lastChild):I=m.nodeType===3?Yd(""):$t("div"),I.el=m,v.component.subTree=I}}else L&64?N!==8?k=E():k=v.type.hydrate(m,v,y,x,_,b,s,f):L&128&&(k=v.type.hydrate(m,v,y,x,Ul(r(m)),_,b,s,u))}return A!=null&&ru(A,null,x,v),k},h=(m,v,y,x,_,b)=>{b=b||!!v.dynamicChildren;const{type:S,props:E,patchFlag:w,shapeFlag:A,dirs:L}=v,N=S==="input"&&L||S==="option";if(N||w!==-1){if(L&&ii(v,null,y,"created"),E)if(N||!b||w&48)for(const O in E)(N&&O.endsWith("value")||al(O)&&!Ta(O))&&n(m,O,null,E[O],!1,void 0,y);else E.onClick&&n(m,"onClick",null,E.onClick,!1,void 0,y);let k;if((k=E&&E.onVnodeBeforeMount)&&Mn(k,y,v),L&&ii(v,null,y,"beforeMount"),((k=E&&E.onVnodeMounted)||L)&&Uy(()=>{k&&Mn(k,y,v),L&&ii(v,null,y,"mounted")},x),A&16&&!(E&&(E.innerHTML||E.textContent))){let O=f(m.firstChild,v,m,y,x,_,b);for(;O;){$i=!0;const I=O;O=O.nextSibling,o(I)}}else A&8&&m.textContent!==v.children&&($i=!0,m.textContent=v.children)}return m.nextSibling},f=(m,v,y,x,_,b,S)=>{S=S||!!v.dynamicChildren;const E=v.children,w=E.length;for(let A=0;A<w;A++){const L=S?E[A]:E[A]=Sn(E[A]);if(m)m=u(m,L,x,_,b,S);else{if(L.type===Ha&&!L.children)continue;$i=!0,t(null,L,y,null,x,_,Ul(y),b)}}return m},d=(m,v,y,x,_,b)=>{const{slotScopeIds:S}=v;S&&(_=_?_.concat(S):S);const E=r(m),w=f(i(m),v,E,y,x,_,b);return w&&yh(w)&&w.data==="]"?i(v.anchor=w):($i=!0,a(v.anchor=l("]"),E,w),w)},p=(m,v,y,x,_,b)=>{if($i=!0,v.el=null,b){const w=g(m);for(;;){const A=i(m);if(A&&A!==w)o(A);else break}}const S=i(m),E=r(m);return o(m),t(null,v,E,S,y,x,Ul(E),_),S},g=m=>{let v=0;for(;m;)if(m=i(m),m&&yh(m)&&(m.data==="["&&v++,m.data==="]")){if(v===0)return i(m);v--}return m};return[c,u]}const an=Uy;function EM(s){return Qy(s)}function TM(s){return Qy(s,SM)}function Qy(s,e){const t=nb();t.__VUE__=!0;const{insert:n,remove:i,patchProp:r,createElement:o,createText:a,createComment:l,setText:c,setElementText:u,parentNode:h,nextSibling:f,setScopeId:d=Hn,cloneNode:p,insertStaticContent:g}=s,m=(C,B,W,$=null,J=null,ne=null,se=!1,ce=null,he=!!B.dynamicChildren)=>{if(C===B)return;C&&!as(C,B)&&($=Ae(C),ue(C,J,ne,!0),C=null),B.patchFlag===-2&&(he=!1,B.dynamicChildren=null);const{type:R,ref:T,shapeFlag:q}=B;switch(R){case Ha:v(C,B,W,$);break;case gs:y(C,B,W,$);break;case kc:C==null&&x(B,W,$,se);break;case Nn:O(C,B,W,$,J,ne,se,ce,he);break;default:q&1?S(C,B,W,$,J,ne,se,ce,he):q&6?I(C,B,W,$,J,ne,se,ce,he):(q&64||q&128)&&R.process(C,B,W,$,J,ne,se,ce,he,pe)}T!=null&&J&&ru(T,C&&C.ref,ne,B||C,!B)},v=(C,B,W,$)=>{if(C==null)n(B.el=a(B.children),W,$);else{const J=B.el=C.el;B.children!==C.children&&c(J,B.children)}},y=(C,B,W,$)=>{C==null?n(B.el=l(B.children||""),W,$):B.el=C.el},x=(C,B,W,$)=>{[C.el,C.anchor]=g(C.children,B,W,$,C.el,C.anchor)},_=({el:C,anchor:B},W,$)=>{let J;for(;C&&C!==B;)J=f(C),n(C,W,$),C=J;n(B,W,$)},b=({el:C,anchor:B})=>{let W;for(;C&&C!==B;)W=f(C),i(C),C=W;i(B)},S=(C,B,W,$,J,ne,se,ce,he)=>{se=se||B.type==="svg",C==null?E(B,W,$,J,ne,se,ce,he):L(C,B,J,ne,se,ce,he)},E=(C,B,W,$,J,ne,se,ce)=>{let he,R;const{type:T,props:q,shapeFlag:Z,transition:oe,patchFlag:de,dirs:Se}=C;if(C.el&&p!==void 0&&de===-1)he=C.el=p(C.el);else{if(he=C.el=o(C.type,ne,q&&q.is,q),Z&8?u(he,C.children):Z&16&&A(C.children,he,null,$,J,ne&&T!=="foreignObject",se,ce),Se&&ii(C,null,$,"created"),q){for(const le in q)le!=="value"&&!Ta(le)&&r(he,le,null,q[le],ne,C.children,$,J,Pe);"value"in q&&r(he,"value",null,q.value),(R=q.onVnodeBeforeMount)&&Mn(R,$,C)}w(he,C,C.scopeId,se,$)}Se&&ii(C,null,$,"beforeMount");const F=(!J||J&&!J.pendingBranch)&&oe&&!oe.persisted;F&&oe.beforeEnter(he),n(he,B,W),((R=q&&q.onVnodeMounted)||F||Se)&&an(()=>{R&&Mn(R,$,C),F&&oe.enter(he),Se&&ii(C,null,$,"mounted")},J)},w=(C,B,W,$,J)=>{if(W&&d(C,W),$)for(let ne=0;ne<$.length;ne++)d(C,$[ne]);if(J){let ne=J.subTree;if(B===ne){const se=J.vnode;w(C,se,se.scopeId,se.slotScopeIds,J.parent)}}},A=(C,B,W,$,J,ne,se,ce,he=0)=>{for(let R=he;R<C.length;R++){const T=C[R]=ce?os(C[R]):Sn(C[R]);m(null,T,B,W,$,J,ne,se,ce)}},L=(C,B,W,$,J,ne,se)=>{const ce=B.el=C.el;let{patchFlag:he,dynamicChildren:R,dirs:T}=B;he|=C.patchFlag&16;const q=C.props||ut,Z=B.props||ut;let oe;W&&Ps(W,!1),(oe=Z.onVnodeBeforeUpdate)&&Mn(oe,W,B,C),T&&ii(B,C,W,"beforeUpdate"),W&&Ps(W,!0);const de=J&&B.type!=="foreignObject";if(R?N(C.dynamicChildren,R,ce,W,$,de,ne):se||V(C,B,ce,null,W,$,de,ne,!1),he>0){if(he&16)k(ce,B,q,Z,W,$,J);else if(he&2&&q.class!==Z.class&&r(ce,"class",null,Z.class,J),he&4&&r(ce,"style",q.style,Z.style,J),he&8){const Se=B.dynamicProps;for(let F=0;F<Se.length;F++){const le=Se[F],Ce=q[le],ve=Z[le];(ve!==Ce||le==="value")&&r(ce,le,Ce,ve,J,C.children,W,$,Pe)}}he&1&&C.children!==B.children&&u(ce,B.children)}else!se&&R==null&&k(ce,B,q,Z,W,$,J);((oe=Z.onVnodeUpdated)||T)&&an(()=>{oe&&Mn(oe,W,B,C),T&&ii(B,C,W,"updated")},$)},N=(C,B,W,$,J,ne,se)=>{for(let ce=0;ce<B.length;ce++){const he=C[ce],R=B[ce],T=he.el&&(he.type===Nn||!as(he,R)||he.shapeFlag&70)?h(he.el):W;m(he,R,T,null,$,J,ne,se,!0)}},k=(C,B,W,$,J,ne,se)=>{if(W!==$){for(const ce in $){if(Ta(ce))continue;const he=$[ce],R=W[ce];he!==R&&ce!=="value"&&r(C,ce,R,he,se,B.children,J,ne,Pe)}if(W!==ut)for(const ce in W)!Ta(ce)&&!(ce in $)&&r(C,ce,W[ce],null,se,B.children,J,ne,Pe);"value"in $&&r(C,"value",W.value,$.value)}},O=(C,B,W,$,J,ne,se,ce,he)=>{const R=B.el=C?C.el:a(""),T=B.anchor=C?C.anchor:a("");let{patchFlag:q,dynamicChildren:Z,slotScopeIds:oe}=B;oe&&(ce=ce?ce.concat(oe):oe),C==null?(n(R,W,$),n(T,W,$),A(B.children,W,T,J,ne,se,ce,he)):q>0&&q&64&&Z&&C.dynamicChildren?(N(C.dynamicChildren,Z,W,J,ne,se,ce),(B.key!=null||J&&B===J.subTree)&&ev(C,B,!0)):V(C,B,W,T,J,ne,se,ce,he)},I=(C,B,W,$,J,ne,se,ce,he)=>{B.slotScopeIds=ce,C==null?B.shapeFlag&512?J.ctx.activate(B,W,$,se,he):U(B,W,$,J,ne,se,he):D(C,B,he)},U=(C,B,W,$,J,ne,se)=>{const ce=C.component=zM(C,$,J);if(Hy(C)&&(ce.ctx.renderer=pe),NM(ce),ce.asyncDep){if(J&&J.registerDep(ce,j),!C.el){const he=ce.subTree=$t(gs);y(null,he,B,W)}return}j(ce,C,B,W,J,ne,se)},D=(C,B,W)=>{const $=B.component=C.component;if(Xb(C,B,W))if($.asyncDep&&!$.asyncResolved){G($,B,W);return}else $.next=B,Hb($.update),$.update();else B.component=C.component,B.el=C.el,$.vnode=B},j=(C,B,W,$,J,ne,se)=>{const ce=()=>{if(C.isMounted){let{next:T,bu:q,u:Z,parent:oe,vnode:de}=C,Se=T,F;Ps(C,!1),T?(T.el=de.el,G(C,T,se)):T=de,q&&dh(q),(F=T.props&&T.props.onVnodeBeforeUpdate)&&Mn(F,oe,T,de),Ps(C,!0);const le=ph(C),Ce=C.subTree;C.subTree=le,m(Ce,le,h(Ce.el),Ae(Ce),C,J,ne),T.el=le.el,Se===null&&qd(C,le.el),Z&&an(Z,J),(F=T.props&&T.props.onVnodeUpdated)&&an(()=>Mn(F,oe,T,de),J)}else{let T;const{el:q,props:Z}=B,{bm:oe,m:de,parent:Se}=C,F=iu(B);if(Ps(C,!1),oe&&dh(oe),!F&&(T=Z&&Z.onVnodeBeforeMount)&&Mn(T,Se,B),Ps(C,!0),q&&re){const le=()=>{C.subTree=ph(C),re(q,C.subTree,C,J,null)};F?B.type.__asyncLoader().then(()=>!C.isUnmounted&&le()):le()}else{const le=C.subTree=ph(C);m(null,le,W,$,C,J,ne),B.el=le.el}if(de&&an(de,J),!F&&(T=Z&&Z.onVnodeMounted)){const le=B;an(()=>Mn(T,Se,le),J)}B.shapeFlag&256&&C.a&&an(C.a,J),C.isMounted=!0,B=W=$=null}},he=C.effect=new Bd(ce,()=>Fy(C.update),C.scope),R=C.update=he.run.bind(he);R.id=C.uid,Ps(C,!0),R()},G=(C,B,W)=>{B.component=C;const $=C.vnode.props;C.vnode=B,C.next=null,vM(C,B.props,$,W),wM(C,B.children,W),Go(),Hd(void 0,C.update),Wo()},V=(C,B,W,$,J,ne,se,ce,he=!1)=>{const R=C&&C.children,T=C?C.shapeFlag:0,q=B.children,{patchFlag:Z,shapeFlag:oe}=B;if(Z>0){if(Z&128){te(R,q,W,$,J,ne,se,ce,he);return}else if(Z&256){Y(R,q,W,$,J,ne,se,ce,he);return}}oe&8?(T&16&&Pe(R,J,ne),q!==R&&u(W,q)):T&16?oe&16?te(R,q,W,$,J,ne,se,ce,he):Pe(R,J,ne,!0):(T&8&&u(W,""),oe&16&&A(q,W,$,J,ne,se,ce,he))},Y=(C,B,W,$,J,ne,se,ce,he)=>{C=C||co,B=B||co;const R=C.length,T=B.length,q=Math.min(R,T);let Z;for(Z=0;Z<q;Z++){const oe=B[Z]=he?os(B[Z]):Sn(B[Z]);m(C[Z],oe,W,null,J,ne,se,ce,he)}R>T?Pe(C,J,ne,!0,!1,q):A(B,W,$,J,ne,se,ce,he,q)},te=(C,B,W,$,J,ne,se,ce,he)=>{let R=0;const T=B.length;let q=C.length-1,Z=T-1;for(;R<=q&&R<=Z;){const oe=C[R],de=B[R]=he?os(B[R]):Sn(B[R]);if(as(oe,de))m(oe,de,W,null,J,ne,se,ce,he);else break;R++}for(;R<=q&&R<=Z;){const oe=C[q],de=B[Z]=he?os(B[Z]):Sn(B[Z]);if(as(oe,de))m(oe,de,W,null,J,ne,se,ce,he);else break;q--,Z--}if(R>q){if(R<=Z){const oe=Z+1,de=oe<T?B[oe].el:$;for(;R<=Z;)m(null,B[R]=he?os(B[R]):Sn(B[R]),W,de,J,ne,se,ce,he),R++}}else if(R>Z)for(;R<=q;)ue(C[R],J,ne,!0),R++;else{const oe=R,de=R,Se=new Map;for(R=de;R<=Z;R++){const Ie=B[R]=he?os(B[R]):Sn(B[R]);Ie.key!=null&&Se.set(Ie.key,R)}let F,le=0;const Ce=Z-de+1;let ve=!1,H=0;const ye=new Array(Ce);for(R=0;R<Ce;R++)ye[R]=0;for(R=oe;R<=q;R++){const Ie=C[R];if(le>=Ce){ue(Ie,J,ne,!0);continue}let _e;if(Ie.key!=null)_e=Se.get(Ie.key);else for(F=de;F<=Z;F++)if(ye[F-de]===0&&as(Ie,B[F])){_e=F;break}_e===void 0?ue(Ie,J,ne,!0):(ye[_e-de]=R+1,_e>=H?H=_e:ve=!0,m(Ie,B[_e],W,null,J,ne,se,ce,he),le++)}const xe=ve?AM(ye):co;for(F=xe.length-1,R=Ce-1;R>=0;R--){const Ie=de+R,_e=B[Ie],Fe=Ie+1<T?B[Ie+1].el:$;ye[R]===0?m(null,_e,W,Fe,J,ne,se,ce,he):ve&&(F<0||R!==xe[F]?X(_e,W,Fe,2):F--)}}},X=(C,B,W,$,J=null)=>{const{el:ne,type:se,transition:ce,children:he,shapeFlag:R}=C;if(R&6){X(C.component.subTree,B,W,$);return}if(R&128){C.suspense.move(B,W,$);return}if(R&64){se.move(C,B,W,pe);return}if(se===Nn){n(ne,B,W);for(let q=0;q<he.length;q++)X(he[q],B,W,$);n(C.anchor,B,W);return}if(se===kc){_(C,B,W);return}if($!==2&&R&1&&ce)if($===0)ce.beforeEnter(ne),n(ne,B,W),an(()=>ce.enter(ne),J);else{const{leave:q,delayLeave:Z,afterLeave:oe}=ce,de=()=>n(ne,B,W),Se=()=>{q(ne,()=>{de(),oe&&oe()})};Z?Z(ne,de,Se):Se()}else n(ne,B,W)},ue=(C,B,W,$=!1,J=!1)=>{const{type:ne,props:se,ref:ce,children:he,dynamicChildren:R,shapeFlag:T,patchFlag:q,dirs:Z}=C;if(ce!=null&&ru(ce,null,W,C,!0),T&256){B.ctx.deactivate(C);return}const oe=T&1&&Z,de=!iu(C);let Se;if(de&&(Se=se&&se.onVnodeBeforeUnmount)&&Mn(Se,B,C),T&6)Q(C.component,W,$);else{if(T&128){C.suspense.unmount(W,$);return}oe&&ii(C,null,B,"beforeUnmount"),T&64?C.type.remove(C,B,W,J,pe,$):R&&(ne!==Nn||q>0&&q&64)?Pe(R,B,W,!1,!0):(ne===Nn&&q&384||!J&&T&16)&&Pe(he,B,W),$&&me(C)}(de&&(Se=se&&se.onVnodeUnmounted)||oe)&&an(()=>{Se&&Mn(Se,B,C),oe&&ii(C,null,B,"unmounted")},W)},me=C=>{const{type:B,el:W,anchor:$,transition:J}=C;if(B===Nn){ge(W,$);return}if(B===kc){b(C);return}const ne=()=>{i(W),J&&!J.persisted&&J.afterLeave&&J.afterLeave()};if(C.shapeFlag&1&&J&&!J.persisted){const{leave:se,delayLeave:ce}=J,he=()=>se(W,ne);ce?ce(C.el,ne,he):he()}else ne()},ge=(C,B)=>{let W;for(;C!==B;)W=f(C),i(C),C=W;i(B)},Q=(C,B,W)=>{const{bum:$,scope:J,update:ne,subTree:se,um:ce}=C;$&&dh($),J.stop(),ne&&(ne.active=!1,ue(se,C,B,W)),ce&&an(ce,B),an(()=>{C.isUnmounted=!0},B),B&&B.pendingBranch&&!B.isUnmounted&&C.asyncDep&&!C.asyncResolved&&C.suspenseId===B.pendingId&&(B.deps--,B.deps===0&&B.resolve())},Pe=(C,B,W,$=!1,J=!1,ne=0)=>{for(let se=ne;se<C.length;se++)ue(C[se],B,W,$,J)},Ae=C=>C.shapeFlag&6?Ae(C.component.subTree):C.shapeFlag&128?C.suspense.next():f(C.anchor||C.el),Be=(C,B,W)=>{C==null?B._vnode&&ue(B._vnode,null,null,!0):m(B._vnode||null,C,B,null,null,null,W),tu(),B._vnode=C},pe={p:m,um:ue,m:X,r:me,mt:U,mc:A,pc:V,pbc:N,n:Ae,o:s};let De,re;return e&&([De,re]=e(pe)),{render:Be,hydrate:De,createApp:MM(Be,De)}}function Ps({effect:s,update:e},t){s.allowRecurse=e.allowRecurse=t}function ev(s,e,t=!1){const n=s.children,i=e.children;if(ke(n)&&ke(i))for(let r=0;r<n.length;r++){const o=n[r];let a=i[r];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=i[r]=os(i[r]),a.el=o.el),t||ev(o,a))}}function AM(s){const e=s.slice(),t=[0];let n,i,r,o,a;const l=s.length;for(n=0;n<l;n++){const c=s[n];if(c!==0){if(i=t[t.length-1],s[i]<c){e[n]=i,t.push(n);continue}for(r=0,o=t.length-1;r<o;)a=r+o>>1,s[t[a]]<c?r=a+1:o=a;c<s[t[r]]&&(r>0&&(e[n]=t[r-1]),t[r]=n)}}for(r=t.length,o=t[r-1];r-- >0;)t[r]=o,o=e[o];return t}const CM=s=>s.__isTeleport,tv="components";function nv(s,e){return LM(tv,s,!0,e)||s}const RM=Symbol();function LM(s,e,t=!0,n=!1){const i=kn||kt;if(i){const r=i.type;if(s===tv){const a=HM(r);if(a&&(a===e||a===ui(e)||a===Cu(ui(e))))return r}const o=Sm(i[s]||r[s],e)||Sm(i.appContext[s],e);return!o&&n?r:o}}function Sm(s,e){return s&&(s[e]||s[ui(e)]||s[Cu(ui(e))])}const Nn=Symbol(void 0),Ha=Symbol(void 0),gs=Symbol(void 0),kc=Symbol(void 0),Ra=[];let hs=null;function Fi(s=!1){Ra.push(hs=s?null:[])}function iv(){Ra.pop(),hs=Ra[Ra.length-1]||null}let Va=1;function Em(s){Va+=s}function sv(s){return s.dynamicChildren=Va>0?hs||co:null,iv(),Va>0&&hs&&hs.push(s),s}function Fu(s,e,t,n,i,r){return sv(Xt(s,e,t,n,i,r,!0))}function Hc(s,e,t,n,i){return sv($t(s,e,t,n,i,!0))}function ou(s){return s?s.__v_isVNode===!0:!1}function as(s,e){return s.type===e.type&&s.key===e.key}const Bu="__vInternal",rv=({key:s})=>s!=null?s:null,Vc=({ref:s,ref_key:e,ref_for:t})=>s!=null?Vt(s)||Nt(s)||Ue(s)?{i:kn,r:s,k:e,f:!!t}:s:null;function Xt(s,e=null,t=null,n=0,i=null,r=s===Nn?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:s,props:e,key:e&&rv(e),ref:e&&Vc(e),scopeId:Pu,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:r,patchFlag:n,dynamicProps:i,dynamicChildren:null,appContext:null};return a?(Zd(l,t),r&128&&s.normalize(l)):t&&(l.shapeFlag|=Vt(t)?8:16),Va>0&&!o&&hs&&(l.patchFlag>0||r&6)&&l.patchFlag!==32&&hs.push(l),l}const $t=PM;function PM(s,e=null,t=null,n=0,i=null,r=!1){if((!s||s===RM)&&(s=gs),ou(s)){const a=Ga(s,e,!0);return t&&Zd(a,t),a}if(VM(s)&&(s=s.__vccOpts),e){e=ov(e);let{class:a,style:l}=e;a&&!Vt(a)&&(e.class=Eu(a)),Gt(l)&&(Ty(l)&&!ke(l)&&(l=tn({},l)),e.style=Su(l))}const o=Vt(s)?1:$b(s)?128:CM(s)?64:Gt(s)?4:Ue(s)?2:0;return Xt(s,e,t,n,i,o,r,!0)}function ov(s){return s?Ty(s)||Bu in s?tn({},s):s:null}function Ga(s,e,t=!1){const{props:n,ref:i,patchFlag:r,children:o}=s,a=e?IM(n||{},e):n;return{__v_isVNode:!0,__v_skip:!0,type:s.type,props:a,key:a&&rv(a),ref:e&&e.ref?t&&i?ke(i)?i.concat(Vc(e)):[i,Vc(e)]:Vc(e):i,scopeId:s.scopeId,slotScopeIds:s.slotScopeIds,children:o,target:s.target,targetAnchor:s.targetAnchor,staticCount:s.staticCount,shapeFlag:s.shapeFlag,patchFlag:e&&s.type!==Nn?r===-1?16:r|16:r,dynamicProps:s.dynamicProps,dynamicChildren:s.dynamicChildren,appContext:s.appContext,dirs:s.dirs,transition:s.transition,component:s.component,suspense:s.suspense,ssContent:s.ssContent&&Ga(s.ssContent),ssFallback:s.ssFallback&&Ga(s.ssFallback),el:s.el,anchor:s.anchor}}function Yd(s=" ",e=0){return $t(Ha,null,s,e)}function Sn(s){return s==null||typeof s=="boolean"?$t(gs):ke(s)?$t(Nn,null,s.slice()):typeof s=="object"?os(s):$t(Ha,null,String(s))}function os(s){return s.el===null||s.memo?s:Ga(s)}function Zd(s,e){let t=0;const{shapeFlag:n}=s;if(e==null)e=null;else if(ke(e))t=16;else if(typeof e=="object")if(n&65){const i=e.default;i&&(i._c&&(i._d=!1),Zd(s,i()),i._c&&(i._d=!0));return}else{t=32;const i=e._;!i&&!(Bu in e)?e._ctx=kn:i===3&&kn&&(kn.slots._===1?e._=1:(e._=2,s.patchFlag|=1024))}else Ue(e)?(e={default:e,_ctx:kn},t=32):(e=String(e),n&64?(t=16,e=[Yd(e)]):t=8);s.children=e,s.shapeFlag|=t}function IM(...s){const e={};for(let t=0;t<s.length;t++){const n=s[t];for(const i in n)if(i==="class")e.class!==n.class&&(e.class=Eu([e.class,n.class]));else if(i==="style")e.style=Su([e.style,n.style]);else if(al(i)){const r=e[i],o=n[i];o&&r!==o&&!(ke(r)&&r.includes(o))&&(e[i]=r?[].concat(r,o):o)}else i!==""&&(e[i]=n[i])}return e}function Mn(s,e,t,n=null){Vn(s,e,7,[t,n])}const Af=s=>s?av(s)?Jd(s)||s.proxy:Af(s.parent):null,au=tn(Object.create(null),{$:s=>s,$el:s=>s.vnode.el,$data:s=>s.data,$props:s=>s.props,$attrs:s=>s.attrs,$slots:s=>s.slots,$refs:s=>s.refs,$parent:s=>Af(s.parent),$root:s=>Af(s.root),$emit:s=>s.emit,$options:s=>jy(s),$forceUpdate:s=>()=>Fy(s.update),$nextTick:s=>Iy.bind(s.proxy),$watch:s=>nM.bind(s)}),FM={get({_:s},e){const{ctx:t,setupState:n,data:i,props:r,accessCache:o,type:a,appContext:l}=s;let c;if(e[0]!=="$"){const d=o[e];if(d!==void 0)switch(d){case 1:return n[e];case 2:return i[e];case 4:return t[e];case 3:return r[e]}else{if(n!==ut&&Ze(n,e))return o[e]=1,n[e];if(i!==ut&&Ze(i,e))return o[e]=2,i[e];if((c=s.propsOptions[0])&&Ze(c,e))return o[e]=3,r[e];if(t!==ut&&Ze(t,e))return o[e]=4,t[e];Sf&&(o[e]=0)}}const u=au[e];let h,f;if(u)return e==="$attrs"&&vn(s,"get",e),u(s);if((h=a.__cssModules)&&(h=h[e]))return h;if(t!==ut&&Ze(t,e))return o[e]=4,t[e];if(f=l.config.globalProperties,Ze(f,e))return f[e]},set({_:s},e,t){const{data:n,setupState:i,ctx:r}=s;return i!==ut&&Ze(i,e)?(i[e]=t,!0):n!==ut&&Ze(n,e)?(n[e]=t,!0):Ze(s.props,e)||e[0]==="$"&&e.slice(1)in s?!1:(r[e]=t,!0)},has({_:{data:s,setupState:e,accessCache:t,ctx:n,appContext:i,propsOptions:r}},o){let a;return!!t[o]||s!==ut&&Ze(s,o)||e!==ut&&Ze(e,o)||(a=r[0])&&Ze(a,o)||Ze(n,o)||Ze(au,o)||Ze(i.config.globalProperties,o)},defineProperty(s,e,t){return t.get!=null?s._.accessCache[e]=0:Ze(t,"value")&&this.set(s,e,t.value,null),Reflect.defineProperty(s,e,t)}},BM=Jy();let DM=0;function zM(s,e,t){const n=s.type,i=(e?e.appContext:s.appContext)||BM,r={uid:DM++,vnode:s,type:n,parent:e,appContext:i,root:null,next:null,subTree:null,effect:null,update:null,scope:new ib(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(i.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:$y(n,i),emitsOptions:Oy(n,i),emit:null,emitted:null,propsDefaults:ut,inheritAttrs:n.inheritAttrs,ctx:ut,data:ut,props:ut,attrs:ut,slots:ut,refs:ut,setupState:ut,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return r.ctx={_:r},r.root=e?e.root:r,r.emit=Gb.bind(null,r),s.ce&&s.ce(r),r}let kt=null;const Kd=()=>kt||kn,go=s=>{kt=s,s.scope.on()},tr=()=>{kt&&kt.scope.off(),kt=null};function av(s){return s.vnode.shapeFlag&4}let Wa=!1;function NM(s,e=!1){Wa=e;const{props:t,children:n}=s.vnode,i=av(s);yM(s,t,i,e),_M(s,n);const r=i?OM(s,e):void 0;return Wa=!1,r}function OM(s,e){const t=s.type;s.accessCache=Object.create(null),s.proxy=Ay(new Proxy(s.ctx,FM));const{setup:n}=t;if(n){const i=s.setupContext=n.length>1?kM(s):null;go(s),Go();const r=us(n,s,0,[s.props,i]);if(Wo(),tr(),uy(r)){if(r.then(tr,tr),e)return r.then(o=>{Cf(s,o,e)}).catch(o=>{ll(o,s,0)});s.asyncDep=r}else Cf(s,r,e)}else lv(s,e)}function Cf(s,e,t){Ue(e)?s.type.__ssrInlineRender?s.ssrRender=e:s.render=e:Gt(e)&&(s.setupState=Ly(e)),lv(s,t)}let Tm;function lv(s,e,t){const n=s.type;if(!s.render){if(!e&&Tm&&!n.render){const i=n.template;if(i){const{isCustomElement:r,compilerOptions:o}=s.appContext.config,{delimiters:a,compilerOptions:l}=n,c=tn(tn({isCustomElement:r,delimiters:a},o),l);n.render=Tm(i,c)}}s.render=n.render||Hn}go(s),Go(),fM(s),Wo(),tr()}function UM(s){return new Proxy(s.attrs,{get(e,t){return vn(s,"get","$attrs"),e[t]}})}function kM(s){const e=n=>{s.exposed=n||{}};let t;return{get attrs(){return t||(t=UM(s))},slots:s.slots,emit:s.emit,expose:e}}function Jd(s){if(s.exposed)return s.exposeProxy||(s.exposeProxy=new Proxy(Ly(Ay(s.exposed)),{get(e,t){if(t in e)return e[t];if(t in au)return au[t](s)}}))}function HM(s){return Ue(s)&&s.displayName||s.name}function VM(s){return Ue(s)&&"__vccOpts"in s}const yo=(s,e)=>Ob(s,e,Wa);function Rf(s,e,t){const n=arguments.length;return n===2?Gt(e)&&!ke(e)?ou(e)?$t(s,null,[e]):$t(s,e):$t(s,null,e):(n>3?t=Array.prototype.slice.call(arguments,2):n===3&&ou(t)&&(t=[t]),$t(s,e,t))}const GM="3.2.33",WM="http://www.w3.org/2000/svg",Xs=typeof document!="undefined"?document:null,Am=Xs&&Xs.createElement("template"),qM={insert:(s,e,t)=>{e.insertBefore(s,t||null)},remove:s=>{const e=s.parentNode;e&&e.removeChild(s)},createElement:(s,e,t,n)=>{const i=e?Xs.createElementNS(WM,s):Xs.createElement(s,t?{is:t}:void 0);return s==="select"&&n&&n.multiple!=null&&i.setAttribute("multiple",n.multiple),i},createText:s=>Xs.createTextNode(s),createComment:s=>Xs.createComment(s),setText:(s,e)=>{s.nodeValue=e},setElementText:(s,e)=>{s.textContent=e},parentNode:s=>s.parentNode,nextSibling:s=>s.nextSibling,querySelector:s=>Xs.querySelector(s),setScopeId(s,e){s.setAttribute(e,"")},cloneNode(s){const e=s.cloneNode(!0);return"_value"in s&&(e._value=s._value),e},insertStaticContent(s,e,t,n,i,r){const o=t?t.previousSibling:e.lastChild;if(i&&(i===r||i.nextSibling))for(;e.insertBefore(i.cloneNode(!0),t),!(i===r||!(i=i.nextSibling)););else{Am.innerHTML=n?`<svg>${s}</svg>`:s;const a=Am.content;if(n){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}e.insertBefore(a,t)}return[o?o.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}};function jM(s,e,t){const n=s._vtc;n&&(e=(e?[e,...n]:[...n]).join(" ")),e==null?s.removeAttribute("class"):t?s.setAttribute("class",e):s.className=e}function XM(s,e,t){const n=s.style,i=Vt(t);if(t&&!i){for(const r in t)Lf(n,r,t[r]);if(e&&!Vt(e))for(const r in e)t[r]==null&&Lf(n,r,"")}else{const r=n.display;i?e!==t&&(n.cssText=t):e&&s.removeAttribute("style"),"_vod"in s&&(n.display=r)}}const Cm=/\s*!important$/;function Lf(s,e,t){if(ke(t))t.forEach(n=>Lf(s,e,n));else if(t==null&&(t=""),e.startsWith("--"))s.setProperty(e,t);else{const n=$M(s,e);Cm.test(t)?s.setProperty(Vo(n),t.replace(Cm,""),"important"):s[n]=t}}const Rm=["Webkit","Moz","ms"],vh={};function $M(s,e){const t=vh[e];if(t)return t;let n=ui(e);if(n!=="filter"&&n in s)return vh[e]=n;n=Cu(n);for(let i=0;i<Rm.length;i++){const r=Rm[i]+n;if(r in s)return vh[e]=r}return e}const Lm="http://www.w3.org/1999/xlink";function YM(s,e,t,n,i){if(n&&e.startsWith("xlink:"))t==null?s.removeAttributeNS(Lm,e.slice(6,e.length)):s.setAttributeNS(Lm,e,t);else{const r=Ww(e);t==null||r&&!ay(t)?s.removeAttribute(e):s.setAttribute(e,r?"":t)}}function ZM(s,e,t,n,i,r,o){if(e==="innerHTML"||e==="textContent"){n&&o(n,i,r),s[e]=t==null?"":t;return}if(e==="value"&&s.tagName!=="PROGRESS"&&!s.tagName.includes("-")){s._value=t;const l=t==null?"":t;(s.value!==l||s.tagName==="OPTION")&&(s.value=l),t==null&&s.removeAttribute(e);return}let a=!1;if(t===""||t==null){const l=typeof s[e];l==="boolean"?t=ay(t):t==null&&l==="string"?(t="",a=!0):l==="number"&&(t=0,a=!0)}try{s[e]=t}catch{}a&&s.removeAttribute(e)}const[cv,KM]=(()=>{let s=Date.now,e=!1;if(typeof window!="undefined"){Date.now()>document.createEvent("Event").timeStamp&&(s=()=>performance.now());const t=navigator.userAgent.match(/firefox\/(\d+)/i);e=!!(t&&Number(t[1])<=53)}return[s,e]})();let Pf=0;const JM=Promise.resolve(),QM=()=>{Pf=0},e1=()=>Pf||(JM.then(QM),Pf=cv());function t1(s,e,t,n){s.addEventListener(e,t,n)}function n1(s,e,t,n){s.removeEventListener(e,t,n)}function i1(s,e,t,n,i=null){const r=s._vei||(s._vei={}),o=r[e];if(n&&o)o.value=n;else{const[a,l]=s1(e);if(n){const c=r[e]=r1(n,i);t1(s,a,c,l)}else o&&(n1(s,a,o,l),r[e]=void 0)}}const Pm=/(?:Once|Passive|Capture)$/;function s1(s){let e;if(Pm.test(s)){e={};let t;for(;t=s.match(Pm);)s=s.slice(0,s.length-t[0].length),e[t[0].toLowerCase()]=!0}return[Vo(s.slice(2)),e]}function r1(s,e){const t=n=>{const i=n.timeStamp||cv();(KM||i>=t.attached-1)&&Vn(o1(n,t.value),e,5,[n])};return t.value=s,t.attached=e1(),t}function o1(s,e){if(ke(e)){const t=s.stopImmediatePropagation;return s.stopImmediatePropagation=()=>{t.call(s),s._stopped=!0},e.map(n=>i=>!i._stopped&&n&&n(i))}else return e}const Im=/^on[a-z]/,a1=(s,e,t,n,i=!1,r,o,a,l)=>{e==="class"?jM(s,n,i):e==="style"?XM(s,t,n):al(e)?Rd(e)||i1(s,e,t,n,o):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):l1(s,e,n,i))?ZM(s,e,n,r,o,a,l):(e==="true-value"?s._trueValue=n:e==="false-value"&&(s._falseValue=n),YM(s,e,n,i))};function l1(s,e,t,n){return n?!!(e==="innerHTML"||e==="textContent"||e in s&&Im.test(e)&&Ue(t)):e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&s.tagName==="INPUT"||e==="type"&&s.tagName==="TEXTAREA"||Im.test(e)&&Vt(t)?!1:e in s}const uv=tn({patchProp:a1},qM);let La,Fm=!1;function c1(){return La||(La=EM(uv))}function u1(){return La=Fm?La:TM(uv),Fm=!0,La}const h1=(...s)=>{const e=c1().createApp(...s),{mount:t}=e;return e.mount=n=>{const i=hv(n);if(!i)return;const r=e._component;!Ue(r)&&!r.render&&!r.template&&(r.template=i.innerHTML),i.innerHTML="";const o=t(i,!1,i instanceof SVGElement);return i instanceof Element&&(i.removeAttribute("v-cloak"),i.setAttribute("data-v-app","")),o},e},f1=(...s)=>{const e=u1().createApp(...s),{mount:t}=e;return e.mount=n=>{const i=hv(n);if(i)return t(i,!0,i instanceof SVGElement)},e};function hv(s){return Vt(s)?document.querySelector(s):s}const d1=/"(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])"\s*:/,p1=/"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/,m1=/^["{[]|^-?[0-9][0-9.]{0,14}$/;function g1(s,e){if(!(s==="__proto__"||s==="constructor"))return e}function y1(s){if(typeof s!="string")return s;const e=s.toLowerCase();if(e==="true")return!0;if(e==="false")return!1;if(e==="null")return null;if(e==="nan")return NaN;if(e==="infinity")return 1/0;if(e!=="undefined"){if(!m1.test(s))return s;try{return d1.test(s)||p1.test(s)?JSON.parse(s,g1):JSON.parse(s)}catch{return s}}}const v1=/#/g,x1=/&/g,_1=/=/g,fv=/\+/g,w1=/%5B/gi,b1=/%5D/gi,M1=/%5E/gi,S1=/%60/gi,E1=/%7B/gi,T1=/%7C/gi,A1=/%7D/gi,C1=/%20/gi;function R1(s){return encodeURI(""+s).replace(T1,"|").replace(w1,"[").replace(b1,"]")}function If(s){return R1(s).replace(fv,"%2B").replace(C1,"+").replace(v1,"%23").replace(x1,"%26").replace(S1,"`").replace(E1,"{").replace(A1,"}").replace(M1,"^")}function xh(s){return If(s).replace(_1,"%3D")}function dv(s=""){try{return decodeURIComponent(""+s)}catch{return""+s}}function L1(s){return dv(s.replace(fv," "))}function pv(s=""){const e={};s[0]==="?"&&(s=s.substr(1));for(const t of s.split("&")){const n=t.match(/([^=]+)=?(.*)/)||[];if(n.length<2)continue;const i=dv(n[1]);if(i==="__proto__"||i==="constructor")continue;const r=L1(n[2]||"");e[i]?Array.isArray(e[i])?e[i].push(r):e[i]=[e[i],r]:e[i]=r}return e}function P1(s,e){return(typeof e=="number"||typeof e=="boolean")&&(e=String(e)),e?Array.isArray(e)?e.map(t=>`${xh(s)}=${If(t)}`).join("&"):`${xh(s)}=${If(e)}`:xh(s)}function I1(s){return Object.keys(s).map(e=>P1(e,s[e])).join("&")}const F1=/^\w+:(\/\/)?/,B1=/^\/\/[^/]+/;function mv(s,e=!1){return F1.test(s)||e&&B1.test(s)}const D1=/\/$|\/\?/;function Ff(s="",e=!1){return e?D1.test(s):s.endsWith("/")}function z1(s="",e=!1){if(!e)return(Ff(s)?s.slice(0,-1):s)||"/";if(!Ff(s,!0))return s||"/";const[t,...n]=s.split("?");return(t.slice(0,-1)||"/")+(n.length?`?${n.join("?")}`:"")}function N1(s="",e=!1){if(!e)return s.endsWith("/")?s:s+"/";if(Ff(s,!0))return s||"/";const[t,...n]=s.split("?");return t+"/"+(n.length?`?${n.join("?")}`:"")}function O1(s=""){return s.startsWith("/")}function U1(s=""){return(O1(s)?s.substr(1):s)||"/"}function k1(s,e){if(V1(e))return s;const t=z1(e);return s.startsWith(t)?s:W1(t,s)}function H1(s,e){const t=Qd(s),n=Lt(Lt({},pv(t.search)),e);return t.search=I1(n),q1(t)}function V1(s){return!s||s==="/"}function G1(s){return s&&s!=="/"}function W1(s,...e){let t=s||"";for(const n of e.filter(G1))t=t?N1(t)+U1(n):n;return t}function Qd(s="",e){if(!mv(s,!0))return e?Qd(e+s):Bm(s);const[t="",n,i=""]=(s.replace(/\\/g,"/").match(/([^:/]+:)?\/\/([^/@]+@)?(.*)/)||[]).splice(1),[r="",o=""]=(i.match(/([^/?#]*)(.*)?/)||[]).splice(1),{pathname:a,search:l,hash:c}=Bm(o);return{protocol:t,auth:n?n.substr(0,n.length-1):"",host:r,pathname:a,search:l,hash:c}}function Bm(s=""){const[e="",t="",n=""]=(s.match(/([^#?]*)(\?[^#]*)?(#.*)?/)||[]).splice(1);return{pathname:e,search:t,hash:n}}function q1(s){const e=s.pathname+(s.search?(s.search.startsWith("?")?"":"?")+s.search:"")+s.hash;return s.protocol?s.protocol+"//"+(s.auth?s.auth+"@":"")+s.host+e:e}class j1 extends Error{constructor(){super(...arguments),this.name="FetchError"}}function X1(s,e,t){let n="";s&&t&&(n=`${t.status} ${t.statusText} (${s.toString()})`),e&&(n=`${e.message} (${n})`);const i=new j1(n);return Object.defineProperty(i,"request",{get(){return s}}),Object.defineProperty(i,"response",{get(){return t}}),Object.defineProperty(i,"data",{get(){return t&&t._data}}),i}const $1=new Set(Object.freeze(["PATCH","POST","PUT","DELETE"]));function Dm(s="GET"){return $1.has(s.toUpperCase())}function Y1(s){if(s===void 0)return!1;const e=typeof s;return e==="string"||e==="number"||e==="boolean"||e===null?!0:e!=="object"?!1:Array.isArray(s)?!0:s.constructor&&s.constructor.name==="Object"||typeof s.toJSON=="function"}const Z1=new Set(["image/svg","application/xml","application/xhtml","application/html"]),K1=/^application\/(?:[\w!#$%&*`\-.^~]*\+)?json(;.+)?$/i;function J1(s=""){if(!s)return"json";const e=s.split(";").shift();return K1.test(e)?"json":Z1.has(e)||e.startsWith("text/")?"text":"blob"}const Q1=new Set([408,409,425,429,500,502,503,504]);function gv(s){const{fetch:e,Headers:t}=s;function n(o){if(o.options.retry!==!1){const l=typeof o.options.retry=="number"?o.options.retry:Dm(o.options.method)?0:1,c=o.response&&o.response.status||500;if(l>0&&Q1.has(c))return i(o.request,yi(Lt({},o.options),{retry:l-1}))}const a=X1(o.request,o.error,o.response);throw Error.captureStackTrace&&Error.captureStackTrace(a,i),a}const i=async function(a,l={}){const c={request:a,options:Lt(Lt({},s.defaults),l),response:void 0,error:void 0};c.options.onRequest&&await c.options.onRequest(c),typeof c.request=="string"&&(c.options.baseURL&&(c.request=k1(c.request,c.options.baseURL)),c.options.params&&(c.request=H1(c.request,c.options.params)),c.options.body&&Dm(c.options.method)&&Y1(c.options.body)&&(c.options.body=JSON.stringify(c.options.body),c.options.headers=new t(c.options.headers),c.options.headers.has("content-type")||c.options.headers.set("content-type","application/json"),c.options.headers.has("accept")||c.options.headers.set("accept","application/json"))),c.response=await e(c.request,c.options).catch(async h=>(c.error=h,c.options.onRequestError&&await c.options.onRequestError(c),n(c)));const u=(c.options.parseResponse?"json":c.options.responseType)||J1(c.response.headers.get("content-type")||"");if(u==="json"){const h=await c.response.text(),f=c.options.parseResponse||y1;c.response._data=f(h)}else c.response._data=await c.response[u]();return c.options.onResponse&&await c.options.onResponse(c),c.response.ok||c.options.onResponseError&&await c.options.onResponseError(c),c.response.ok?c.response:n(c)},r=function(a,l){return i(a,l).then(c=>c._data)};return r.raw=i,r.create=(o={})=>gv(yi(Lt({},s),{defaults:Lt(Lt({},s.defaults),o)})),r}const yv=function(){if(typeof globalThis!="undefined")return globalThis;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw new Error("unable to locate global object")}(),eS=yv.fetch||(()=>Promise.reject(new Error("[ohmyfetch] global.fetch is not supported!"))),tS=yv.Headers,nS=gv({fetch:eS,Headers:tS}),iS=()=>{var s;return((s=window==null?void 0:window.__NUXT__)==null?void 0:s.config)||{}},sS=iS().app,rS=()=>sS.baseURL;function Bf(s,e={},t){for(const n in s){const i=s[n],r=t?`${t}:${n}`:n;typeof i=="object"&&i!==null?Bf(i,e,r):typeof i=="function"&&(e[r]=i)}return e}function oS(s,e){return s.reduce((t,n)=>t.then(()=>n.apply(void 0,e)),Promise.resolve(null))}function aS(s,e){return Promise.all(s.map(t=>t.apply(void 0,e)))}class lS{constructor(){this._hooks={},this._deprecatedHooks={},this.hook=this.hook.bind(this),this.callHook=this.callHook.bind(this),this.callHookWith=this.callHookWith.bind(this)}hook(e,t){if(!e||typeof t!="function")return()=>{};const n=e;let i;for(;this._deprecatedHooks[e];){const r=this._deprecatedHooks[e];typeof r=="string"?i={to:r}:i=r,e=i.to}return i&&(i.message?console.warn(i.message):console.warn(`${n} hook has been deprecated`+(i.to?`, please use ${i.to}`:""))),this._hooks[e]=this._hooks[e]||[],this._hooks[e].push(t),()=>{t&&(this.removeHook(e,t),t=null)}}hookOnce(e,t){let n,i=(...r)=>(n(),n=null,i=null,t(...r));return n=this.hook(e,i),n}removeHook(e,t){if(this._hooks[e]){const n=this._hooks[e].indexOf(t);n!==-1&&this._hooks[e].splice(n,1),this._hooks[e].length===0&&delete this._hooks[e]}}deprecateHook(e,t){this._deprecatedHooks[e]=t}deprecateHooks(e){Object.assign(this._deprecatedHooks,e)}addHooks(e){const t=Bf(e),n=Object.keys(t).map(i=>this.hook(i,t[i]));return()=>{n.splice(0,n.length).forEach(i=>i())}}removeHooks(e){const t=Bf(e);for(const n in t)this.removeHook(n,t[n])}callHook(e,...t){return oS(this._hooks[e]||[],t)}callHookParallel(e,...t){return aS(this._hooks[e]||[],t)}callHookWith(e,t,...n){return e(this._hooks[t]||[],n)}}function cS(){return new lS}function uS(){let s=null,e=!1;const t=n=>{if(s&&s!==n)throw new Error("Context conflict")};return{use:()=>s,set:(n,i)=>{i||t(n),s=n,e=!0},unset:()=>{s=null,e=!1},call:(n,i)=>{t(n),s=n;try{return i()}finally{e||(s=null)}},async callAsync(n,i){s=n;const r=()=>{s=n},o=()=>s===n?r:void 0;Om.add(o);try{const a=i();return e||(s=null),await a}finally{Om.delete(o)}}}}function hS(){const s={};return{get(e){return s[e]||(s[e]=uS()),s[e],s[e]}}}const lu=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof global!="undefined"?global:typeof window!="undefined"?window:{},zm="__unctx__",fS=lu[zm]||(lu[zm]=hS()),dS=s=>fS.get(s),Nm="__unctx_async_handlers__",Om=lu[Nm]||(lu[Nm]=new Set);function Sa(s,e={}){const t=function(){};t.prototype.name=s;const n={};return new Proxy(t,{get(i,r){return r==="caller"?null:r==="__createMock__"?Sa:r in e?e[r]:n[r]=n[r]||Sa(`${s}.${r.toString()}`)},apply(i,r,o){return Sa(`${s}()`)},construct(i,r,o){return Sa(`[${s}]`)},enumerate(i){return[]}})}var pS=Sa("mock");function kl(s){return console.warn(s),pS}const mS=new Set(["store","spa","fetchCounters"]),gS=new Set(["isHMR","base","payload","from","next","error","redirect","redirected","enablePreview","$preview","beforeNuxtRender","beforeSerialize"]),yS=new Set(["req","res","ssrContext"]),vS=["route","params","query"],Um={isClient:!0,isServer:!1,isDev:!1,isStatic:void 0,target:"server",modern:!1},xS=s=>{s._legacyContext=new Proxy(s,{get(e,t){if(mS.has(t))return kl(`Accessing ${t} is not supported in Nuxt 3.`);if(gS.has(t))return kl(`Accessing ${t} is not yet supported in Nuxt 3.`);if(vS.includes(t)){if(!("$router"in s))return kl("vue-router is not being used in this project.");switch(t){case"route":return e.$router.currentRoute.value;case"params":case"query":return e.$router.currentRoute.value[t]}}if(t==="$config"||t==="env")return ES();if(t in Um)return Um[t];if(!yS.has(t))return t==="ssrContext"?e._legacyContext:e.ssrContext&&t in e.ssrContext?e.ssrContext[t]:t==="nuxt"?e.payload:t==="nuxtState"?e.payload.data:t in s.vueApp?s.vueApp[t]:t in s?s[t]:kl(`Accessing ${t} is not supported in Nuxt3.`)}}),s.hook("app:created",()=>{const e=new Proxy(s.vueApp,{get(t,n){return["$root","constructor"].includes(n)?e:t[n]||s[n]}});window[`$${s.globalName}`]=e})},vv=dS("nuxt-app"),xv="__nuxt_plugin";function _S(s){const e=Lt({provide:void 0,globalName:"nuxt",payload:lr(Lt({data:{},state:{},_errors:{}},window.__NUXT__)),isHydrating:!0,_asyncDataPromises:{}},s);e.hooks=cS(),e.hook=e.hooks.hook,e.callHook=e.hooks.callHook,e.provide=(i,r)=>{const o="$"+i;Hl(e,o,r),Hl(e.vueApp.config.globalProperties,o,r)},Hl(e.vueApp,"$nuxt",e),Hl(e.vueApp.config.globalProperties,"$nuxt",e),e.ssrContext&&(e.ssrContext.nuxt=e);const t=lr(e.payload.config),n=new Proxy(t,{get(i,r){var o;return r==="public"?i.public:(o=i[r])!=null?o:i.public[r]},set(i,r,o){return r==="public"||r==="app"?!1:(i[r]=o,i.public[r]=o,!0)}});return e.provide("config",n),e}async function wS(s,e){if(typeof e!="function")return;const{provide:t}=await cu(s,e,[s])||{};if(t&&typeof t=="object")for(const n in t)s.provide(n,t[n])}async function bS(s,e){for(const t of e)await wS(s,t)}function MS(s){let e=!1;const t=s.map(n=>typeof n!="function"?()=>{}:SS(n)?(e=!0,i=>n(i._legacyContext,i.provide)):n);return e&&t.unshift(xS),t}function ep(s){return s[xv]=!0,s}function SS(s){return!s[xv]}function cu(s,e,t){const n=()=>t?e(...t):e();return vv.set(s),n()}function hi(){const s=Kd();if(!s){const e=vv.use();if(!e)throw new Error("nuxt instance unavailable");return e}return s.appContext.app.$nuxt}function ES(){return hi().$config}function Hl(s,e,t){Object.defineProperty(s,e,{get:()=>t})}const TS=(s,e)=>{const t=hi(),n=zb(t.payload.state,s);if(n.value===void 0&&e){const i=e();if(Nt(i))return t.payload.state[s]=i,i;n.value=i}return n},uu=()=>{const s=hi();return TS("error",()=>s.payload.error)},AS=s=>{const e=hi(),t=uu(),n=typeof s=="string"?new Error(s):s;return e.callHook("app:error",n),t.value=t.value||n,n},CS=async(s={})=>{const e=hi(),t=uu();e.callHook("app:error:cleared",s),s.redirect&&await e.$router.replace(s.redirect),t.value=null},RS=()=>{var s;return(s=hi())==null?void 0:s.$router},LS=(...s)=>s.find(e=>e!==void 0),PS="noopener noreferrer";function IS(s){const e=s.componentName||"NuxtLink";return gi({name:e,props:{to:{type:[String,Object],default:void 0,required:!1},href:{type:[String,Object],default:void 0,required:!1},target:{type:String,default:void 0,required:!1},rel:{type:String,default:void 0,required:!1},noRel:{type:Boolean,default:void 0,required:!1},activeClass:{type:String,default:void 0,required:!1},exactActiveClass:{type:String,default:void 0,required:!1},replace:{type:Boolean,default:void 0,required:!1},ariaCurrentValue:{type:String,default:void 0,required:!1},external:{type:Boolean,default:void 0,required:!1},custom:{type:Boolean,default:void 0,required:!1}},setup(t,{slots:n}){const i=RS(),r=yo(()=>t.to||t.href||""),o=yo(()=>t.external||t.target&&t.target!=="_self"?!0:typeof r.value=="object"?!1:r.value===""||mv(r.value,!0));return()=>{var u,h;if(!o.value)return Rf(nv("RouterLink"),{to:r.value,activeClass:t.activeClass||s.activeClass,exactActiveClass:t.exactActiveClass||s.exactActiveClass,replace:t.replace,ariaCurrentValue:t.ariaCurrentValue},n.default);const a=typeof r.value=="object"?(h=(u=i.resolve(r.value))==null?void 0:u.href)!=null?h:null:r.value||null,l=t.target||null,c=t.noRel?null:LS(t.rel,s.externalRelAttribute,a?PS:"")||null;return Rf("a",{href:a,rel:c,target:l},n.default())}}})}var FS=IS({componentName:"NuxtLink"});function zi(s){const e=Ue(s)?yo(s):s;hi()._useHead(e)}const _h={};function BS(s){for(const e in _h)s.vueApp.component(e,_h[e]),s.vueApp.component("Lazy"+e,_h[e])}var DS=Object.defineProperty,km=Object.getOwnPropertySymbols,zS=Object.prototype.hasOwnProperty,NS=Object.prototype.propertyIsEnumerable,Hm=(s,e,t)=>e in s?DS(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,OS=(s,e)=>{for(var t in e||(e={}))zS.call(e,t)&&Hm(s,t,e[t]);if(km)for(var t of km(e))NS.call(e,t)&&Hm(s,t,e[t]);return s},US="usehead",Vm="head:count",wh="data-head-attrs",kS=(s,e,t)=>{const n=t.createElement(s);for(const i of Object.keys(e)){let r=e[i];i==="key"||r===!1||(i==="children"?n.textContent=r:n.setAttribute(i,r))}return n};function HS(s,e){if(s instanceof HTMLElement&&e instanceof HTMLElement){const t=e.getAttribute("nonce");if(t&&!s.getAttribute("nonce")){const n=e.cloneNode(!0);return n.setAttribute("nonce",""),n.nonce=t,t===s.nonce&&s.isEqualNode(n)}}return s.isEqualNode(e)}var VS=s=>{const e=["key","id","name","property"];for(const t of e){const n=typeof s.getAttribute=="function"?s.hasAttribute(t)?s.getAttribute(t):void 0:s[t];if(n!==void 0)return{name:t,value:n}}},GS=["title","meta","link","base","style","script","htmlAttrs","bodyAttrs"],WS=s=>{const e=[];for(const t of Object.keys(s))if(s[t]!=null){if(t==="title")e.push({tag:t,props:{children:s[t]}});else if(t==="base")e.push({tag:t,props:OS({key:"default"},s[t])});else if(GS.includes(t)){const n=s[t];Array.isArray(n)?n.forEach(i=>{e.push({tag:t,props:i})}):n&&e.push({tag:t,props:n})}}return e},Gm=(s,e)=>{const t=s.getAttribute(wh);if(t)for(const i of t.split(","))i in e||s.removeAttribute(i);const n=[];for(const i in e){const r=e[i];r!=null&&(r===!1?s.removeAttribute(i):s.setAttribute(i,r),n.push(i))}n.length?s.setAttribute(wh,n.join(",")):s.removeAttribute(wh)},qS=(s=window.document,e,t)=>{var n;const i=s.head;let r=i.querySelector(`meta[name="${Vm}"]`);const o=r?Number(r.getAttribute("content")):0,a=[];if(r)for(let c=0,u=r.previousElementSibling;c<o;c++,u=(u==null?void 0:u.previousElementSibling)||null)((n=u==null?void 0:u.tagName)==null?void 0:n.toLowerCase())===e&&a.push(u);else r=s.createElement("meta"),r.setAttribute("name",Vm),r.setAttribute("content","0"),i.append(r);let l=t.map(c=>kS(c.tag,c.props,s));l=l.filter(c=>{for(let u=0;u<a.length;u++){const h=a[u];if(HS(h,c))return a.splice(u,1),!1}return!0}),a.forEach(c=>{var u;return(u=c.parentNode)==null?void 0:u.removeChild(c)}),l.forEach(c=>{i.insertBefore(c,r)}),r.setAttribute("content",""+(o-a.length+l.length))},jS=()=>{let s=[],e=new Set;const t={install(n){n.config.globalProperties.$head=t,n.provide(US,t)},get headTags(){const n=[];return s.forEach(i=>{WS(i.value).forEach(o=>{if(o.tag==="meta"||o.tag==="base"||o.tag==="script"){const a=VS(o.props);if(a){let l=-1;for(let c=0;c<n.length;c++){const u=n[c],h=u.props[a.name],f=o.props[a.name];if(u.tag===o.tag&&h===f){l=c;break}}l!==-1&&n.splice(l,1)}}n.push(o)})}),n},addHeadObjs(n){s.push(n)},removeHeadObjs(n){s=s.filter(i=>i!==n)},updateDOM(n=window.document){let i,r={},o={};const a={};for(const c of t.headTags){if(c.tag==="title"){i=c.props.children;continue}if(c.tag==="htmlAttrs"){Object.assign(r,c.props);continue}if(c.tag==="bodyAttrs"){Object.assign(o,c.props);continue}a[c.tag]=a[c.tag]||[],a[c.tag].push(c)}i!==void 0&&(n.title=i),Gm(n.documentElement,r),Gm(n.body,o);const l=new Set([...Object.keys(a),...e]);for(const c of l)qS(n,c,a[c]||[]);e.clear(),Object.keys(a).forEach(c=>e.add(c))}};return t};function bh(s){return s!==null&&typeof s=="object"}function Df(s,e,t=".",n){if(!bh(e))return Df(s,{},t,n);const i=Object.assign({},e);for(const r in s){if(r==="__proto__"||r==="constructor")continue;const o=s[r];o!=null&&(n&&n(i,r,o,t)||(Array.isArray(o)&&Array.isArray(i[r])?i[r]=o.concat(i[r]):bh(o)&&bh(i[r])?i[r]=Df(o,i[r],(t?`${t}.`:"")+r.toString(),n):i[r]=o))}return i}function XS(s){return(...e)=>e.reduce((t,n)=>Df(t,n,"",s),{})}const $S=XS();var YS=ep(s=>{const e=jS();s.vueApp.use(e);let t=!1;s.hooks.hookOnce("app:mounted",()=>{gm(()=>{e.updateDOM()}),t=!0});const n=dm();s._useHead=i=>{const r=dm(i);"titleTemplate"in r.value&&(n.value=r.value.titleTemplate);const o=yo(()=>{const l={meta:[]};return n.value&&"title"in r.value&&(l.title=typeof n.value=="function"?n.value(r.value.title):n.value.replace(/%s/g,r.value.title)),r.value.charset&&l.meta.push({key:"charset",charset:r.value.charset}),r.value.viewport&&l.meta.push({name:"viewport",content:r.value.viewport}),$S(l,r.value)});e.addHeadObjs(o),t&&gm(()=>{e.updateDOM()}),Kd()&&Gy(()=>{e.removeHeadObjs(o),e.updateDOM()})}});const ZS=s=>Object.fromEntries(Object.entries(s).filter(([,e])=>e!==void 0)),Es=(s,e)=>(t,n)=>(zi(()=>s(Lt(Lt({},ZS(t)),n.attrs),n)),()=>{var i,r;return e?(r=(i=n.slots).default)==null?void 0:r.call(i):null}),_r={accesskey:String,autocapitalize:String,autofocus:{type:Boolean,default:void 0},class:String,contenteditable:{type:Boolean,default:void 0},contextmenu:String,dir:String,draggable:{type:Boolean,default:void 0},enterkeyhint:String,exportparts:String,hidden:{type:Boolean,default:void 0},id:String,inputmode:String,is:String,itemid:String,itemprop:String,itemref:String,itemscope:String,itemtype:String,lang:String,nonce:String,part:String,slot:String,spellcheck:{type:Boolean,default:void 0},style:String,tabindex:String,title:String,translate:String},KS=gi({name:"Script",props:yi(Lt({},_r),{async:Boolean,crossorigin:{type:[Boolean,String],default:void 0},defer:Boolean,integrity:String,nomodule:Boolean,nonce:String,referrerpolicy:String,src:String,type:String,charset:String,language:String}),setup:Es(s=>({script:[s]}))}),JS=gi({name:"Link",props:yi(Lt({},_r),{as:String,crossorigin:String,disabled:Boolean,href:String,hreflang:String,imagesizes:String,imagesrcset:String,integrity:String,media:String,prefetch:{type:Boolean,default:void 0},referrerpolicy:String,rel:String,sizes:String,title:String,type:String,methods:String,target:String}),setup:Es(s=>({link:[s]}))}),QS=gi({name:"Base",props:yi(Lt({},_r),{href:String,target:String}),setup:Es(s=>({base:s}))}),eE=gi({name:"Title",setup:Es((s,{slots:e})=>{var n,i;return{title:((i=(n=e.default())==null?void 0:n[0])==null?void 0:i.children)||null}})}),tE=gi({name:"Meta",props:yi(Lt({},_r),{charset:String,content:String,httpEquiv:String,name:String}),setup:Es(s=>({meta:[s]}))}),nE=gi({name:"Style",props:yi(Lt({},_r),{type:String,media:String,nonce:String,title:String,scoped:{type:Boolean,default:void 0}}),setup:Es((s,{slots:e})=>{var i,r,o;const t=Lt({},s),n=(o=(r=(i=e.default)==null?void 0:i.call(e))==null?void 0:r[0])==null?void 0:o.children;return n&&(t.children=n),{style:[t]}})}),iE=gi({name:"Head",setup:(s,e)=>()=>{var t,n;return(n=(t=e.slots).default)==null?void 0:n.call(t)}}),sE=gi({name:"Html",props:yi(Lt({},_r),{manifest:String,version:String,xmlns:String}),setup:Es(s=>({htmlAttrs:s}),!0)}),rE=gi({name:"Body",props:_r,setup:Es(s=>({bodyAttrs:s}),!0)});var Wm=Object.freeze(Object.defineProperty({__proto__:null,Script:KS,Link:JS,Base:QS,Title:eE,Meta:tE,Style:nE,Head:iE,Html:sE,Body:rE},Symbol.toStringTag,{value:"Module"})),_v={globalMeta:{charset:"utf-8",viewport:"width=device-width, initial-scale=1",meta:[],link:[],style:[],script:[]},mixinKey:"created"};const oE={[_v.mixinKey](){var i;const s=Kd();if(!s)return;const e=s.type||((i=s.proxy)==null?void 0:i.$options);if(!e||!("head"in e))return;const t=hi(),n=typeof e.head=="function"?yo(()=>e.head(t)):e.head;zi(n)}};var aE=ep(s=>{zi(_v.globalMeta),s.vueApp.mixin(oE);for(const e in Wm)s.vueApp.component(e,Wm[e])});function Mh(s){if(typeof s=="object")throw new TypeError("[nuxt] Route location object cannot be resolved when vue-router is disabled (no pages).");const e=Qd(s.toString());return{path:e.pathname,fullPath:s,query:pv(e.search),hash:e.hash,params:{},name:void 0,matched:[],redirectedFrom:void 0,meta:{},href:s}}var lE=ep(s=>{const e=[],t={"navigate:before":[],"resolve:before":[],"navigate:after":[],error:[]},n=(a,l)=>(t[a].push(l),()=>t[a].splice(t[a].indexOf(l),1)),i=lr(Mh(window.location.href));async function r(a,l){try{const c=Mh(a);s.isHydrating||await cu(s,CS);for(const u of t["navigate:before"]){const h=await u(c,i);if(h===!1||h instanceof Error)return;if(h)return r(h,!0)}for(const u of t["resolve:before"])await u(c,i);Object.assign(i,c),window.history[l?"replaceState":"pushState"]({},"",a);for(const u of t["navigate:after"])await u(c,i)}catch(c){for(const u of t.error)await u(c)}}const o={currentRoute:i,isReady:()=>Promise.resolve(),options:{},install:()=>Promise.resolve(),push:a=>r(a,!1),replace:a=>r(a,!0),back:()=>window.history.go(-1),go:a=>window.history.go(a),forward:()=>window.history.go(1),beforeResolve:a=>n("resolve:before",a),beforeEach:a=>n("navigate:before",a),afterEach:a=>n("navigate:after",a),onError:a=>n("error",a),resolve:Mh,addRoute:(a,l)=>{e.push(l)},getRoutes:()=>e,hasRoute:a=>e.some(l=>l.name===a),removeRoute:a=>{const l=e.findIndex(c=>c.name===a);l!==-1&&e.splice(l,1)}};return s.vueApp.component("RouterLink",{functional:!0,props:{to:String},setup:(a,{slots:l})=>()=>Rf("a",{href:a.to,onClick:c=>{c.preventDefault(),o.push(a.to)}},l)}),window.addEventListener("popstate",a=>{const l=a.target.location;o.replace(l.href.replace(l.origin,""))}),s._route=i,s._middleware=s._middleware||{global:[],named:{}},o.beforeEach(async(a,l)=>{a.meta=lr(a.meta||{}),s._processingMiddleware=!0;const c=new Set(s._middleware.global);for(const u of c){const h=await cu(s,u,[a,l]);if(h||h===!1)return h}}),o.afterEach(()=>{delete s._processingMiddleware}),{provide:{route:i,router:o}}}),cE=[BS,YS,aE,lE];var qo=(s,e)=>{const t=s.__vccOpts||s;for(const[n,i]of e)t[n]=i;return t};const uE={props:{appName:{type:String,default:"Nuxt"},version:{type:String,default:""},statusCode:{type:String,default:"404"},statusMessage:{type:String,default:"Not Found"},description:{type:String,default:"Sorry, the page you are looking for could not be found."},backHome:{type:String,default:"Go back home"}},setup(s,{expose:e}){e();const t=s;zi({title:`${t.statusCode} - ${t.statusMessage} | ${t.appName}`,script:[],style:[{children:'*,:before,:after{-webkit-box-sizing:border-box;box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}*{--tw-ring-inset:var(--tw-empty, );--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(14, 165, 233, .5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000}:root{-moz-tab-size:4;-o-tab-size:4;tab-size:4}a{color:inherit;text-decoration:inherit}body{margin:0;font-family:inherit;line-height:inherit}html{-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";line-height:1.5}h1,p{margin:0}h1{font-size:inherit;font-weight:inherit}'}]});const n={props:t,useHead:zi};return Object.defineProperty(n,"__isScriptSetup",{enumerable:!1,value:!0}),n}},hE=s=>(Vd("data-v-b11ad3a6"),s=s(),Gd(),s),fE={class:"font-sans antialiased bg-white dark:bg-black text-black dark:text-white grid min-h-screen place-content-center overflow-hidden"},dE=hE(()=>Xt("div",{class:"fixed left-0 right-0 spotlight z-10"},null,-1)),pE={class:"max-w-520px text-center z-20"},mE=["innerHTML"],gE=["innerHTML"],yE={class:"w-full flex items-center justify-center"};function vE(s,e,t,n,i,r){const o=FS;return Fi(),Fu("div",fE,[dE,Xt("div",pE,[Xt("h1",{class:"text-8xl sm:text-10xl font-medium mb-8",innerHTML:t.statusCode},null,8,mE),Xt("p",{class:"text-xl px-8 sm:px-0 sm:text-4xl font-light mb-16 leading-tight",innerHTML:t.description},null,8,gE),Xt("div",yE,[$t(o,{to:"/",class:"gradient-border text-md sm:text-xl py-2 px-4 sm:py-3 sm:px-6 cursor-pointer"},{default:Wd(()=>[Yd(Yw(t.backHome),1)]),_:1})])])])}var qm=qo(uE,[["render",vE],["__scopeId","data-v-b11ad3a6"]]);const xE={props:{appName:{type:String,default:"Nuxt"},version:{type:String,default:""},statusCode:{type:String,default:"500"},statusMessage:{type:String,default:"Server error"},description:{type:String,default:"This page is temporarily unavailable."}},setup(s,{expose:e}){e();const t=s;zi({title:`${t.statusCode} - ${t.statusMessage} | ${t.appName}`,script:[],style:[{children:'*,:before,:after{-webkit-box-sizing:border-box;box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}*{--tw-ring-inset:var(--tw-empty, );--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(14, 165, 233, .5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000}:root{-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{margin:0;font-family:inherit;line-height:inherit}html{-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";line-height:1.5}h1,p{margin:0}h1{font-size:inherit;font-weight:inherit}'}]});const n={props:t,useHead:zi};return Object.defineProperty(n,"__isScriptSetup",{enumerable:!1,value:!0}),n}},_E=s=>(Vd("data-v-18181656"),s=s(),Gd(),s),wE={class:"font-sans antialiased bg-white dark:bg-black text-black dark:text-white grid min-h-screen place-content-center overflow-hidden"},bE=_E(()=>Xt("div",{class:"fixed -bottom-1/2 left-0 right-0 h-1/2 spotlight"},null,-1)),ME={class:"max-w-520px text-center"},SE=["innerHTML"],EE=["innerHTML"];function TE(s,e,t,n,i,r){return Fi(),Fu("div",wE,[bE,Xt("div",ME,[Xt("h1",{class:"text-8xl sm:text-10xl font-medium mb-8",innerHTML:t.statusCode},null,8,SE),Xt("p",{class:"text-xl px-8 sm:px-0 sm:text-4xl font-light mb-16 leading-tight",innerHTML:t.description},null,8,EE)])])}var jm=qo(xE,[["render",TE],["__scopeId","data-v-18181656"]]);const AE={props:{appName:{type:String,default:"Nuxt"},version:{type:String,default:""},statusCode:{type:String,default:"500"},statusMessage:{type:String,default:"Server error"},description:{type:String,default:"An error occurred in the application and the page could not be served. If you are the application owner, check your server logs for details."},stack:{type:String,default:""}},setup(s,{expose:e}){e();const t=s;zi({title:`${t.statusCode} - ${t.statusMessage} | ${t.appName}`,script:[],style:[{children:'*,:before,:after{-webkit-box-sizing:border-box;box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}*{--tw-ring-inset:var(--tw-empty, );--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(14, 165, 233, .5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000}:root{-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{margin:0;font-family:inherit;line-height:inherit}html{-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";line-height:1.5}h1,p,pre{margin:0}h1{font-size:inherit;font-weight:inherit}pre{font-size:1em;font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}'}]});const n={props:t,useHead:zi};return Object.defineProperty(n,"__isScriptSetup",{enumerable:!1,value:!0}),n}},CE=s=>(Vd("data-v-4f8d0ee7"),s=s(),Gd(),s),RE={class:"font-sans antialiased bg-white px-10 pt-14 dark:bg-black text-black dark:text-white min-h-screen flex flex-col"},LE=CE(()=>Xt("div",{class:"fixed left-0 right-0 spotlight"},null,-1)),PE=["innerHTML"],IE=["innerHTML"],FE={class:"bg-white rounded-t-md bg-black/5 dark:bg-white/10 flex-1 overflow-y-auto h-auto"},BE=["innerHTML"];function DE(s,e,t,n,i,r){return Fi(),Fu("div",RE,[LE,Xt("h1",{class:"text-6xl sm:text-8xl font-medium mb-6",innerHTML:t.statusCode},null,8,PE),Xt("p",{class:"text-xl sm:text-2xl font-light mb-8 leading-tight",innerHTML:t.description},null,8,IE),Xt("div",FE,[Xt("pre",{class:"text-xl font-light leading-tight z-10 p-8",innerHTML:t.stack},null,8,BE)])])}var zE=qo(AE,[["render",DE],["__scopeId","data-v-4f8d0ee7"]]);const NE={props:{error:Object},setup(s,{expose:e}){var f;e();const t=s,n=t.error,i=(n.stack||"").split(`
`).splice(1).map(d=>({text:d.replace("webpack:/","").replace(".vue",".js").trim(),internal:d.includes("node_modules")&&!d.includes(".cache")||d.includes("internal")||d.includes("new Promise")})).map(d=>`<span class="stack${d.internal?" internal":""}">${d.text}</span>`).join(`
`),r=String(n.statusCode||500),o=r==="404",a=((f=n.statusMessage)!=null?f:o)?"Page Not Found":"Internal Server Error",l=n.message||n.toString(),h={props:t,error:n,stacktrace:i,statusCode:r,is404:o,statusMessage:a,description:l,stack:void 0,ErrorTemplate:o?qm:jm,Error404:qm,Error500:jm,ErrorDev:zE};return Object.defineProperty(h,"__isScriptSetup",{enumerable:!1,value:!0}),h}};function OE(s,e,t,n,i,r){return Fi(),Hc(n.ErrorTemplate,$w(ov({statusCode:n.statusCode,statusMessage:n.statusMessage,description:n.description,stack:n.stack})),null,16)}var UE=qo(NE,[["render",OE]]);const kE={setup(s,{expose:e}){e();const t=hi(),n=()=>t.callHook("app:suspense:resolve"),i=t.hooks.callHookWith(a=>a.map(l=>l()),"vue:setup"),r=uu();Mf((a,l,c)=>{t.hooks.callHook("vue:error",a,l,c).catch(u=>console.error("[nuxt] Error in `vue:error` hook",u))});const o={nuxtApp:t,onResolve:n,results:i,error:r,onErrorCaptured:Mf,callWithNuxt:cu,throwError:AS,useError:uu,useNuxtApp:hi,ErrorComponent:UE};return Object.defineProperty(o,"__isScriptSetup",{enumerable:!1,value:!0}),o}};function HE(s,e,t,n,i,r){const o=nv("App");return Fi(),Hc(Zb,{onResolve:n.onResolve},{default:Wd(()=>[n.error?(Fi(),Hc(n.ErrorComponent,{key:0,error:n.error},null,8,["error"])):(Fi(),Hc(o,{key:1}))]),_:1})}var Xm=qo(kE,[["render",HE]]);/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Du="140",Ws={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},qs={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},wv=0,zf=1,bv=2,VE=3,GE=0,tp=1,np=2,so=3,cr=0,gn=1,ur=2,ip=1,WE=2,Bi=0,nr=1,Nf=2,Of=3,Uf=4,Mv=5,$s=100,Sv=101,Ev=102,kf=103,Hf=104,Tv=200,Av=201,Cv=202,Rv=203,sp=204,rp=205,Lv=206,Pv=207,Iv=208,Fv=209,Bv=210,Dv=0,zv=1,Nv=2,hu=3,Ov=4,Uv=5,kv=6,Hv=7,cl=0,Vv=1,Gv=2,oi=0,Wv=1,qv=2,jv=3,Xv=4,$v=5,zu=300,ys=301,vs=302,vo=303,qa=304,jo=306,hr=1e3,qt=1001,ja=1002,It=1003,fu=1004,qE=1004,du=1005,jE=1005,St=1006,op=1007,XE=1007,wr=1008,$E=1008,xs=1009,Yv=1010,Zv=1011,xo=1012,Kv=1013,Pa=1014,Li=1015,_o=1016,Jv=1017,Qv=1018,ir=1020,ex=1021,tx=1022,mn=1023,nx=1024,ix=1025,fs=1026,fr=1027,sx=1028,rx=1029,ox=1030,ax=1031,lx=1033,Gc=33776,Wc=33777,qc=33778,jc=33779,Vf=35840,Gf=35841,Wf=35842,qf=35843,cx=36196,jf=37492,Xf=37496,$f=37808,Yf=37809,Zf=37810,Kf=37811,Jf=37812,Qf=37813,ed=37814,td=37815,nd=37816,id=37817,sd=37818,rd=37819,od=37820,ad=37821,ld=36492,ux=2200,hx=2201,fx=2202,Xa=2300,$a=2301,Xc=2302,Ks=2400,Js=2401,Ya=2402,Nu=2500,ap=2501,dx=0,YE=1,ZE=2,Ni=3e3,it=3001,px=3200,mx=3201,br=0,gx=1,KE="",si="srgb",ls="srgb-linear",JE=0,$c=7680,QE=7681,eT=7682,tT=7683,nT=34055,iT=34056,sT=5386,rT=512,oT=513,aT=514,lT=515,cT=516,uT=517,hT=518,yx=519,wo=35044,bo=35048,fT=35040,dT=35045,pT=35049,mT=35041,gT=35046,yT=35050,vT=35042,xT="100",cd="300 es",pu=1035;class Gi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e);e.target=null}}}const Wt=[];for(let s=0;s<256;s++)Wt[s]=(s<16?"0":"")+s.toString(16);let $m=1234567;const sr=Math.PI/180,Za=180/Math.PI;function yn(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Wt[s&255]+Wt[s>>8&255]+Wt[s>>16&255]+Wt[s>>24&255]+"-"+Wt[e&255]+Wt[e>>8&255]+"-"+Wt[e>>16&15|64]+Wt[e>>24&255]+"-"+Wt[t&63|128]+Wt[t>>8&255]+"-"+Wt[t>>16&255]+Wt[t>>24&255]+Wt[n&255]+Wt[n>>8&255]+Wt[n>>16&255]+Wt[n>>24&255]).toLowerCase()}function Et(s,e,t){return Math.max(e,Math.min(t,s))}function lp(s,e){return(s%e+e)%e}function _T(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function wT(s,e,t){return s!==e?(t-s)/(e-s):0}function Ia(s,e,t){return(1-t)*s+t*e}function bT(s,e,t,n){return Ia(s,e,1-Math.exp(-t*n))}function MT(s,e=1){return e-Math.abs(lp(s,e*2)-e)}function ST(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function ET(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function TT(s,e){return s+Math.floor(Math.random()*(e-s+1))}function AT(s,e){return s+Math.random()*(e-s)}function CT(s){return s*(.5-Math.random())}function RT(s){s!==void 0&&($m=s);let e=$m+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function LT(s){return s*sr}function PT(s){return s*Za}function ud(s){return(s&s-1)===0&&s!==0}function vx(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function mu(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function IT(s,e,t,n,i){const r=Math.cos,o=Math.sin,a=r(t/2),l=o(t/2),c=r((e+n)/2),u=o((e+n)/2),h=r((e-n)/2),f=o((e-n)/2),d=r((n-e)/2),p=o((n-e)/2);switch(i){case"XYX":s.set(a*u,l*h,l*f,a*c);break;case"YZY":s.set(l*f,a*u,l*h,a*c);break;case"ZXZ":s.set(l*h,l*f,a*u,a*c);break;case"XZX":s.set(a*u,l*p,l*d,a*c);break;case"YXY":s.set(l*d,a*u,l*p,a*c);break;case"ZYZ":s.set(l*p,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function FT(s,e){switch(e.constructor){case Float32Array:return s;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function BT(s,e){switch(e.constructor){case Float32Array:return s;case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}var En=Object.freeze({__proto__:null,DEG2RAD:sr,RAD2DEG:Za,generateUUID:yn,clamp:Et,euclideanModulo:lp,mapLinear:_T,inverseLerp:wT,lerp:Ia,damp:bT,pingpong:MT,smoothstep:ST,smootherstep:ET,randInt:TT,randFloat:AT,randFloatSpread:CT,seededRandom:RT,degToRad:LT,radToDeg:PT,isPowerOfTwo:ud,ceilPowerOfTwo:vx,floorPowerOfTwo:mu,setQuaternionFromProperEuler:IT,normalize:BT,denormalize:FT});class ae{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*i+e.x,this.y=r*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ae.prototype.isVector2=!0;class Bt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=r,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],f=n[2],d=n[5],p=n[8],g=i[0],m=i[3],v=i[6],y=i[1],x=i[4],_=i[7],b=i[2],S=i[5],E=i[8];return r[0]=o*g+a*y+l*b,r[3]=o*m+a*x+l*S,r[6]=o*v+a*_+l*E,r[1]=c*g+u*y+h*b,r[4]=c*m+u*x+h*S,r[7]=c*v+u*_+h*E,r[2]=f*g+d*y+p*b,r[5]=f*m+d*x+p*S,r[8]=f*v+d*_+p*E,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*r*u+n*a*l+i*r*c-i*o*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,f=a*l-u*r,d=c*r-o*l,p=t*h+n*f+i*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return e[0]=h*g,e[1]=(i*c-u*n)*g,e[2]=(a*n-i*o)*g,e[3]=f*g,e[4]=(u*t-i*l)*g,e[5]=(i*r-a*t)*g,e[6]=d*g,e[7]=(n*l-c*t)*g,e[8]=(o*t-n*r)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-i*c,i*l,-i*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],o=i[3],a=i[6],l=i[1],c=i[4],u=i[7];return i[0]=t*r+n*l,i[3]=t*o+n*c,i[6]=t*a+n*u,i[1]=-n*r+t*l,i[4]=-n*o+t*c,i[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}Bt.prototype.isMatrix3=!0;function xx(s){for(let e=s.length-1;e>=0;--e)if(s[e]>65535)return!0;return!1}const DT={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ro(s,e){return new DT[s](e)}function Ka(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function rr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Yc(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const Sh={[si]:{[ls]:rr},[ls]:{[si]:Yc}},wn={legacyMode:!0,get workingColorSpace(){return ls},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,e,t){if(this.legacyMode||e===t||!e||!t)return s;if(Sh[e]&&Sh[e][t]!==void 0){const n=Sh[e][t];return s.r=n(s.r),s.g=n(s.g),s.b=n(s.b),s}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(s,e){return this.convert(s,this.workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this.workingColorSpace)}},_x={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Dt={r:0,g:0,b:0},Pn={h:0,s:0,l:0},Vl={h:0,s:0,l:0};function Eh(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}function Gl(s,e){return e.r=s.r,e.g=s.g,e.b=s.b,e}class Me{constructor(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=si){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,wn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=ls){return this.r=e,this.g=t,this.b=n,wn.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=ls){if(e=lp(e,1),t=Et(t,0,1),n=Et(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=Eh(o,r,e+1/3),this.g=Eh(o,r,e),this.b=Eh(o,r,e-1/3)}return wn.toWorkingColorSpace(this,i),this}setStyle(e,t=si){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,wn.toWorkingColorSpace(this,t),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,wn.toWorkingColorSpace(this,t),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(r[1])/360,c=parseInt(r[2],10)/100,u=parseInt(r[3],10)/100;return n(r[4]),this.setHSL(l,c,u,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],o=r.length;if(o===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,wn.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,wn.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=si){const n=_x[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=rr(e.r),this.g=rr(e.g),this.b=rr(e.b),this}copyLinearToSRGB(e){return this.r=Yc(e.r),this.g=Yc(e.g),this.b=Yc(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=si){return wn.fromWorkingColorSpace(Gl(this,Dt),e),Et(Dt.r*255,0,255)<<16^Et(Dt.g*255,0,255)<<8^Et(Dt.b*255,0,255)<<0}getHexString(e=si){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ls){wn.fromWorkingColorSpace(Gl(this,Dt),t);const n=Dt.r,i=Dt.g,r=Dt.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-r)/h+(i<r?6:0);break;case i:l=(r-n)/h+2;break;case r:l=(n-i)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=ls){return wn.fromWorkingColorSpace(Gl(this,Dt),t),e.r=Dt.r,e.g=Dt.g,e.b=Dt.b,e}getStyle(e=si){return wn.fromWorkingColorSpace(Gl(this,Dt),e),e!==si?`color(${e} ${Dt.r} ${Dt.g} ${Dt.b})`:`rgb(${Dt.r*255|0},${Dt.g*255|0},${Dt.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(Pn),Pn.h+=e,Pn.s+=t,Pn.l+=n,this.setHSL(Pn.h,Pn.s,Pn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Pn),e.getHSL(Vl);const n=Ia(Pn.h,Vl.h,t),i=Ia(Pn.s,Vl.s,t),r=Ia(Pn.l,Vl.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Me.NAMES=_x;Me.prototype.isColor=!0;Me.prototype.r=1;Me.prototype.g=1;Me.prototype.b=1;let Ir;class Ts{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Ir===void 0&&(Ir=Ka("canvas")),Ir.width=e.width,Ir.height=e.height;const n=Ir.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Ir}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const t=Ka("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=rr(r[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(rr(t[n]/255)*255):t[n]=rr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Qs{constructor(e=null){this.uuid=yn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(Th(i[o].image)):r.push(Th(i[o]))}else r=Th(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function Th(s){return typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&s instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&s instanceof ImageBitmap?Ts.getDataURL(s):s.data?{data:Array.prototype.slice.call(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Qs.prototype.isSource=!0;let zT=0;class _t extends Gi{constructor(e=_t.DEFAULT_IMAGE,t=_t.DEFAULT_MAPPING,n=qt,i=qt,r=St,o=wr,a=mn,l=xs,c=1,u=Ni){super(),Object.defineProperty(this,"id",{value:zT++}),this.uuid=yn(),this.name="",this.source=new Qs(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new ae(0,0),this.repeat=new ae(1,1),this.center=new ae(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Bt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==zu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case hr:e.x=e.x-Math.floor(e.x);break;case qt:e.x=e.x<0?0:1;break;case ja:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case hr:e.y=e.y-Math.floor(e.y);break;case qt:e.y=e.y<0?0:1;break;case ja:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}_t.DEFAULT_IMAGE=null;_t.DEFAULT_MAPPING=zu;_t.prototype.isTexture=!0;class Je{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],p=l[9],g=l[2],m=l[6],v=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-g)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+g)<.1&&Math.abs(p+m)<.1&&Math.abs(c+d+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(c+1)/2,_=(d+1)/2,b=(v+1)/2,S=(u+f)/4,E=(h+g)/4,w=(p+m)/4;return x>_&&x>b?x<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(x),i=S/n,r=E/n):_>b?_<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(_),n=S/i,r=w/i):b<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(b),n=E/r,i=w/r),this.set(n,i,r,t),this}let y=Math.sqrt((m-p)*(m-p)+(h-g)*(h-g)+(f-u)*(f-u));return Math.abs(y)<.001&&(y=1),this.x=(m-p)/y,this.y=(h-g)/y,this.z=(f-u)/y,this.w=Math.acos((c+d+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Je.prototype.isVector4=!0;class en extends Gi{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Je(0,0,e,t),this.scissorTest=!1,this.viewport=new Je(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new _t(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:St,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}en.prototype.isWebGLRenderTarget=!0;class Xo extends _t{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=It,this.minFilter=It,this.wrapR=qt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Xo.prototype.isDataArrayTexture=!0;class wx extends en{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new Xo(null,e,t,n),this.texture.isRenderTargetTexture=!0}}wx.prototype.isWebGLArrayRenderTarget=!0;class ul extends _t{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=It,this.minFilter=It,this.wrapR=qt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}ul.prototype.isData3DTexture=!0;class bx extends en{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new ul(null,e,t,n),this.texture.isRenderTargetTexture=!0}}bx.prototype.isWebGL3DRenderTarget=!0;class Mx extends en{constructor(e,t,n,i={}){super(e,t,i);const r=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=r.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}Mx.prototype.isWebGLMultipleRenderTargets=!0;class gt{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,r,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const f=r[o+0],d=r[o+1],p=r[o+2],g=r[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=f,e[t+1]=d,e[t+2]=p,e[t+3]=g;return}if(h!==g||l!==f||c!==d||u!==p){let m=1-a;const v=l*f+c*d+u*p+h*g,y=v>=0?1:-1,x=1-v*v;if(x>Number.EPSILON){const b=Math.sqrt(x),S=Math.atan2(b,v*y);m=Math.sin(m*S)/b,a=Math.sin(a*S)/b}const _=a*y;if(l=l*m+f*_,c=c*m+d*_,u=u*m+p*_,h=h*m+g*_,m===1-a){const b=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=b,c*=b,u*=b,h*=b}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,r,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=r[o],f=r[o+1],d=r[o+2],p=r[o+3];return e[t]=a*p+u*h+l*d-c*f,e[t+1]=l*p+u*f+c*h-a*d,e[t+2]=c*p+u*d+a*f-l*h,e[t+3]=u*p-a*h-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,r=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(r/2),f=l(n/2),d=l(i/2),p=l(r/2);switch(o){case"XYZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"YXZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"ZXY":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"ZYX":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"YZX":this._x=f*u*h+c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h-f*d*p;break;case"XZY":this._x=f*u*h-c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],f=n+a+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(r-c)*d,this._z=(o-i)*d}else if(n>a&&n>h){const d=2*Math.sqrt(1+n-a-h);this._w=(u-l)/d,this._x=.25*d,this._y=(i+o)/d,this._z=(r+c)/d}else if(a>h){const d=2*Math.sqrt(1+a-n-h);this._w=(r-c)/d,this._x=(i+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-n-a);this._w=(o-i)/d,this._x=(r+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Et(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+i*c-r*l,this._y=i*u+o*l+r*a-n*c,this._z=r*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-t;return this._w=d*o+t*this._w,this._x=d*n+t*this._x,this._y=d*i+t*this._y,this._z=d*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=o*h+this._w*f,this._x=n*h+this._x*f,this._y=i*h+this._y*f,this._z=r*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}gt.prototype.isQuaternion=!0;class P{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Ym.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Ym.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*i-a*n,u=l*n+a*t-r*i,h=l*i+r*n-o*t,f=-r*t-o*n-a*i;return this.x=c*l+f*-r+u*-a-h*-o,this.y=u*l+f*-o+h*-r-c*-a,this.z=h*l+f*-a+c*-o-u*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,o=t.x,a=t.y,l=t.z;return this.x=i*l-r*a,this.y=r*o-n*l,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Ah.copy(this).projectOnVector(e),this.sub(Ah)}reflect(e){return this.sub(Ah.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Et(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}P.prototype.isVector3=!0;const Ah=new P,Ym=new gt;class xn{constructor(e=new P(1/0,1/0,1/0),t=new P(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],h=e[l+1],f=e[l+2];u<t&&(t=u),h<n&&(n=h),f<i&&(i=f),u>r&&(r=u),h>o&&(o=h),f>a&&(a=f)}return this.min.set(t,n,i),this.max.set(r,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),h=e.getY(l),f=e.getZ(l);u<t&&(t=u),h<n&&(n=h),f<i&&(i=f),u>r&&(r=u),h>o&&(o=h),f>a&&(a=f)}return this.min.set(t,n,i),this.max.set(r,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Is.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let o=0,a=r.count;o<a;o++)Is.fromBufferAttribute(r,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Is)}else n.boundingBox===null&&n.computeBoundingBox(),Ch.copy(n.boundingBox),Ch.applyMatrix4(e.matrixWorld),this.union(Ch);const i=e.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Is),Is.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ua),Wl.subVectors(this.max,ua),Fr.subVectors(e.a,ua),Br.subVectors(e.b,ua),Dr.subVectors(e.c,ua),Yi.subVectors(Br,Fr),Zi.subVectors(Dr,Br),Fs.subVectors(Fr,Dr);let t=[0,-Yi.z,Yi.y,0,-Zi.z,Zi.y,0,-Fs.z,Fs.y,Yi.z,0,-Yi.x,Zi.z,0,-Zi.x,Fs.z,0,-Fs.x,-Yi.y,Yi.x,0,-Zi.y,Zi.x,0,-Fs.y,Fs.x,0];return!Rh(t,Fr,Br,Dr,Wl)||(t=[1,0,0,0,1,0,0,0,1],!Rh(t,Fr,Br,Dr,Wl))?!1:(ql.crossVectors(Yi,Zi),t=[ql.x,ql.y,ql.z],Rh(t,Fr,Br,Dr,Wl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Is.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Is).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(vi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),vi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),vi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),vi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),vi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),vi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),vi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),vi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(vi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}xn.prototype.isBox3=!0;const vi=[new P,new P,new P,new P,new P,new P,new P,new P],Is=new P,Ch=new xn,Fr=new P,Br=new P,Dr=new P,Yi=new P,Zi=new P,Fs=new P,ua=new P,Wl=new P,ql=new P,Bs=new P;function Rh(s,e,t,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){Bs.fromArray(s,r);const a=i.x*Math.abs(Bs.x)+i.y*Math.abs(Bs.y)+i.z*Math.abs(Bs.z),l=e.dot(Bs),c=t.dot(Bs),u=n.dot(Bs);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const NT=new xn,Zm=new P,jl=new P,Lh=new P;class As{constructor(e=new P,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):NT.setFromPoints(e).getCenter(n);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Lh.subVectors(e,this.center);const t=Lh.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(Lh.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return this.center.equals(e.center)===!0?jl.set(0,0,1).multiplyScalar(e.radius):jl.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Zm.copy(e.center).add(jl)),this.expandByPoint(Zm.copy(e.center).sub(jl)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const xi=new P,Ph=new P,Xl=new P,Ki=new P,Ih=new P,$l=new P,Fh=new P;class Cs{constructor(e=new P,t=new P(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,xi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=xi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(xi.copy(this.direction).multiplyScalar(t).add(this.origin),xi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Ph.copy(e).add(t).multiplyScalar(.5),Xl.copy(t).sub(e).normalize(),Ki.copy(this.origin).sub(Ph);const r=e.distanceTo(t)*.5,o=-this.direction.dot(Xl),a=Ki.dot(this.direction),l=-Ki.dot(Xl),c=Ki.lengthSq(),u=Math.abs(1-o*o);let h,f,d,p;if(u>0)if(h=o*l-a,f=o*a-l,p=r*u,h>=0)if(f>=-p)if(f<=p){const g=1/u;h*=g,f*=g,d=h*(h+o*f+2*a)+f*(o*h+f+2*l)+c}else f=r,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f=-r,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f<=-p?(h=Math.max(0,-(-o*r+a)),f=h>0?-r:Math.min(Math.max(-r,-l),r),d=-h*h+f*(f+2*l)+c):f<=p?(h=0,f=Math.min(Math.max(-r,-l),r),d=f*(f+2*l)+c):(h=Math.max(0,-(o*r+a)),f=h>0?r:Math.min(Math.max(-r,-l),r),d=-h*h+f*(f+2*l)+c);else f=o>0?-r:r,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Xl).multiplyScalar(f).add(Ph),d}intersectSphere(e,t){xi.subVectors(e.center,this.origin);const n=xi.dot(this.direction),i=xi.dot(xi)-n*n,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(n=(e.min.x-f.x)*c,i=(e.max.x-f.x)*c):(n=(e.max.x-f.x)*c,i=(e.min.x-f.x)*c),u>=0?(r=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(r=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),n>o||r>i||((r>n||n!==n)&&(n=r),(o<i||i!==i)&&(i=o),h>=0?(a=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(a=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,xi)!==null}intersectTriangle(e,t,n,i,r){Ih.subVectors(t,e),$l.subVectors(n,e),Fh.crossVectors(Ih,$l);let o=this.direction.dot(Fh),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Ki.subVectors(this.origin,e);const l=a*this.direction.dot($l.crossVectors(Ki,$l));if(l<0)return null;const c=a*this.direction.dot(Ih.cross(Ki));if(c<0||l+c>o)return null;const u=-a*Ki.dot(Fh);return u<0?null:this.at(u/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class we{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,o,a,l,c,u,h,f,d,p,g,m){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=r,v[5]=o,v[9]=a,v[13]=l,v[2]=c,v[6]=u,v[10]=h,v[14]=f,v[3]=d,v[7]=p,v[11]=g,v[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new we().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/zr.setFromMatrixColumn(e,0).length(),r=1/zr.setFromMatrixColumn(e,1).length(),o=1/zr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,r=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const f=o*u,d=o*h,p=a*u,g=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=d+p*c,t[5]=f-g*c,t[9]=-a*l,t[2]=g-f*c,t[6]=p+d*c,t[10]=o*l}else if(e.order==="YXZ"){const f=l*u,d=l*h,p=c*u,g=c*h;t[0]=f+g*a,t[4]=p*a-d,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=d*a-p,t[6]=g+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*u,d=l*h,p=c*u,g=c*h;t[0]=f-g*a,t[4]=-o*h,t[8]=p+d*a,t[1]=d+p*a,t[5]=o*u,t[9]=g-f*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*u,d=o*h,p=a*u,g=a*h;t[0]=l*u,t[4]=p*c-d,t[8]=f*c+g,t[1]=l*h,t[5]=g*c+f,t[9]=d*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,d=o*c,p=a*l,g=a*c;t[0]=l*u,t[4]=g-f*h,t[8]=p*h+d,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=d*h+p,t[10]=f-g*h}else if(e.order==="XZY"){const f=o*l,d=o*c,p=a*l,g=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=f*h+g,t[5]=o*u,t[9]=d*h-p,t[2]=p*h-d,t[6]=a*u,t[10]=g*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(OT,e,UT)}lookAt(e,t,n){const i=this.elements;return fn.subVectors(e,t),fn.lengthSq()===0&&(fn.z=1),fn.normalize(),Ji.crossVectors(n,fn),Ji.lengthSq()===0&&(Math.abs(n.z)===1?fn.x+=1e-4:fn.z+=1e-4,fn.normalize(),Ji.crossVectors(n,fn)),Ji.normalize(),Yl.crossVectors(fn,Ji),i[0]=Ji.x,i[4]=Yl.x,i[8]=fn.x,i[1]=Ji.y,i[5]=Yl.y,i[9]=fn.y,i[2]=Ji.z,i[6]=Yl.z,i[10]=fn.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],f=n[9],d=n[13],p=n[2],g=n[6],m=n[10],v=n[14],y=n[3],x=n[7],_=n[11],b=n[15],S=i[0],E=i[4],w=i[8],A=i[12],L=i[1],N=i[5],k=i[9],O=i[13],I=i[2],U=i[6],D=i[10],j=i[14],G=i[3],V=i[7],Y=i[11],te=i[15];return r[0]=o*S+a*L+l*I+c*G,r[4]=o*E+a*N+l*U+c*V,r[8]=o*w+a*k+l*D+c*Y,r[12]=o*A+a*O+l*j+c*te,r[1]=u*S+h*L+f*I+d*G,r[5]=u*E+h*N+f*U+d*V,r[9]=u*w+h*k+f*D+d*Y,r[13]=u*A+h*O+f*j+d*te,r[2]=p*S+g*L+m*I+v*G,r[6]=p*E+g*N+m*U+v*V,r[10]=p*w+g*k+m*D+v*Y,r[14]=p*A+g*O+m*j+v*te,r[3]=y*S+x*L+_*I+b*G,r[7]=y*E+x*N+_*U+b*V,r[11]=y*w+x*k+_*D+b*Y,r[15]=y*A+x*O+_*j+b*te,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],d=e[14],p=e[3],g=e[7],m=e[11],v=e[15];return p*(+r*l*h-i*c*h-r*a*f+n*c*f+i*a*d-n*l*d)+g*(+t*l*d-t*c*f+r*o*f-i*o*d+i*c*u-r*l*u)+m*(+t*c*h-t*a*d-r*o*h+n*o*d+r*a*u-n*c*u)+v*(-i*a*u-t*l*h+t*a*f+i*o*h-n*o*f+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],d=e[11],p=e[12],g=e[13],m=e[14],v=e[15],y=h*m*c-g*f*c+g*l*d-a*m*d-h*l*v+a*f*v,x=p*f*c-u*m*c-p*l*d+o*m*d+u*l*v-o*f*v,_=u*g*c-p*h*c+p*a*d-o*g*d-u*a*v+o*h*v,b=p*h*l-u*g*l-p*a*f+o*g*f+u*a*m-o*h*m,S=t*y+n*x+i*_+r*b;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/S;return e[0]=y*E,e[1]=(g*f*r-h*m*r-g*i*d+n*m*d+h*i*v-n*f*v)*E,e[2]=(a*m*r-g*l*r+g*i*c-n*m*c-a*i*v+n*l*v)*E,e[3]=(h*l*r-a*f*r-h*i*c+n*f*c+a*i*d-n*l*d)*E,e[4]=x*E,e[5]=(u*m*r-p*f*r+p*i*d-t*m*d-u*i*v+t*f*v)*E,e[6]=(p*l*r-o*m*r-p*i*c+t*m*c+o*i*v-t*l*v)*E,e[7]=(o*f*r-u*l*r+u*i*c-t*f*c-o*i*d+t*l*d)*E,e[8]=_*E,e[9]=(p*h*r-u*g*r-p*n*d+t*g*d+u*n*v-t*h*v)*E,e[10]=(o*g*r-p*a*r+p*n*c-t*g*c-o*n*v+t*a*v)*E,e[11]=(u*a*r-o*h*r-u*n*c+t*h*c+o*n*d-t*a*d)*E,e[12]=b*E,e[13]=(u*g*i-p*h*i+p*n*f-t*g*f-u*n*m+t*h*m)*E,e[14]=(p*a*i-o*g*i-p*n*l+t*g*l+o*n*m-t*a*m)*E,e[15]=(o*h*i-u*a*i+u*n*l-t*h*l-o*n*f+t*a*f)*E,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,o=e.x,a=e.y,l=e.z,c=r*o,u=r*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,r*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,o){return this.set(1,n,r,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,o=t._y,a=t._z,l=t._w,c=r+r,u=o+o,h=a+a,f=r*c,d=r*u,p=r*h,g=o*u,m=o*h,v=a*h,y=l*c,x=l*u,_=l*h,b=n.x,S=n.y,E=n.z;return i[0]=(1-(g+v))*b,i[1]=(d+_)*b,i[2]=(p-x)*b,i[3]=0,i[4]=(d-_)*S,i[5]=(1-(f+v))*S,i[6]=(m+y)*S,i[7]=0,i[8]=(p+x)*E,i[9]=(m-y)*E,i[10]=(1-(f+g))*E,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=zr.set(i[0],i[1],i[2]).length();const o=zr.set(i[4],i[5],i[6]).length(),a=zr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],In.copy(this);const c=1/r,u=1/o,h=1/a;return In.elements[0]*=c,In.elements[1]*=c,In.elements[2]*=c,In.elements[4]*=u,In.elements[5]*=u,In.elements[6]*=u,In.elements[8]*=h,In.elements[9]*=h,In.elements[10]*=h,t.setFromRotationMatrix(In),n.x=r,n.y=o,n.z=a,this}makePerspective(e,t,n,i,r,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,l=2*r/(t-e),c=2*r/(n-i),u=(t+e)/(t-e),h=(n+i)/(n-i),f=-(o+r)/(o-r),d=-2*o*r/(o-r);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,r,o){const a=this.elements,l=1/(t-e),c=1/(n-i),u=1/(o-r),h=(t+e)*l,f=(n+i)*c,d=(o+r)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}we.prototype.isMatrix4=!0;const zr=new P,In=new we,OT=new P(0,0,0),UT=new P(1,1,1),Ji=new P,Yl=new P,fn=new P,Km=new we,Jm=new gt;class ln{constructor(e=0,t=0,n=0,i=ln.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],f=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(Et(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Et(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(Et(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Et(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Et(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Et(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Km.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Km,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Jm.setFromEuler(this),this.setFromQuaternion(Jm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ln.prototype.isEuler=!0;ln.DefaultOrder="XYZ";ln.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Ou{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let kT=0;const Qm=new P,Nr=new gt,_i=new we,Zl=new P,ha=new P,HT=new P,VT=new gt,eg=new P(1,0,0),tg=new P(0,1,0),ng=new P(0,0,1),GT={type:"added"},ig={type:"removed"};class Ve extends Gi{constructor(){super(),Object.defineProperty(this,"id",{value:kT++}),this.uuid=yn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ve.DefaultUp.clone();const e=new P,t=new ln,n=new gt,i=new P(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new we},normalMatrix:{value:new Bt}}),this.matrix=new we,this.matrixWorld=new we,this.matrixAutoUpdate=Ve.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Ou,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Nr.setFromAxisAngle(e,t),this.quaternion.multiply(Nr),this}rotateOnWorldAxis(e,t){return Nr.setFromAxisAngle(e,t),this.quaternion.premultiply(Nr),this}rotateX(e){return this.rotateOnAxis(eg,e)}rotateY(e){return this.rotateOnAxis(tg,e)}rotateZ(e){return this.rotateOnAxis(ng,e)}translateOnAxis(e,t){return Qm.copy(e).applyQuaternion(this.quaternion),this.position.add(Qm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(eg,e)}translateY(e){return this.translateOnAxis(tg,e)}translateZ(e){return this.translateOnAxis(ng,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(_i.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Zl.copy(e):Zl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ha.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_i.lookAt(ha,Zl,this.up):_i.lookAt(Zl,ha,this.up),this.quaternion.setFromRotationMatrix(_i),i&&(_i.extractRotation(i.matrixWorld),Nr.setFromRotationMatrix(_i),this.quaternion.premultiply(Nr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(GT)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(ig)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(ig)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),_i.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),_i.multiply(e.parent.matrixWorld)),e.applyMatrix4(_i),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ha,e,HT),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ha,VT,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];r(e.shapes,h)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(e.materials,this.material[l]));i.material=a}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(r(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),f=o(e.skeletons),d=o(e.animations),p=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Ve.DefaultUp=new P(0,1,0);Ve.DefaultMatrixAutoUpdate=!0;Ve.prototype.isObject3D=!0;const Fn=new P,wi=new P,Bh=new P,bi=new P,Or=new P,Ur=new P,sg=new P,Dh=new P,zh=new P,Nh=new P;class At{constructor(e=new P,t=new P,n=new P){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Fn.subVectors(e,t),i.cross(Fn);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Fn.subVectors(i,t),wi.subVectors(n,t),Bh.subVectors(e,t);const o=Fn.dot(Fn),a=Fn.dot(wi),l=Fn.dot(Bh),c=wi.dot(wi),u=wi.dot(Bh),h=o*c-a*a;if(h===0)return r.set(-2,-1,-1);const f=1/h,d=(c*l-a*u)*f,p=(o*u-a*l)*f;return r.set(1-d-p,p,d)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,bi),bi.x>=0&&bi.y>=0&&bi.x+bi.y<=1}static getUV(e,t,n,i,r,o,a,l){return this.getBarycoord(e,t,n,i,bi),l.set(0,0),l.addScaledVector(r,bi.x),l.addScaledVector(o,bi.y),l.addScaledVector(a,bi.z),l}static isFrontFacing(e,t,n,i){return Fn.subVectors(n,t),wi.subVectors(e,t),Fn.cross(wi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Fn.subVectors(this.c,this.b),wi.subVectors(this.a,this.b),Fn.cross(wi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return At.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return At.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return At.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return At.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return At.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let o,a;Or.subVectors(i,n),Ur.subVectors(r,n),Dh.subVectors(e,n);const l=Or.dot(Dh),c=Ur.dot(Dh);if(l<=0&&c<=0)return t.copy(n);zh.subVectors(e,i);const u=Or.dot(zh),h=Ur.dot(zh);if(u>=0&&h<=u)return t.copy(i);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(Or,o);Nh.subVectors(e,r);const d=Or.dot(Nh),p=Ur.dot(Nh);if(p>=0&&d<=p)return t.copy(r);const g=d*c-l*p;if(g<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(n).addScaledVector(Ur,a);const m=u*p-d*h;if(m<=0&&h-u>=0&&d-p>=0)return sg.subVectors(r,i),a=(h-u)/(h-u+(d-p)),t.copy(i).addScaledVector(sg,a);const v=1/(m+g+f);return o=g*v,a=f*v,t.copy(n).addScaledVector(Or,o).addScaledVector(Ur,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let WT=0;class Ct extends Gi{constructor(){super(),Object.defineProperty(this,"id",{value:WT++}),this.uuid=yn(),this.name="",this.type="Material",this.blending=nr,this.side=cr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=sp,this.blendDst=rp,this.blendEquation=$s,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=hu,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=yx,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=$c,this.stencilZFail=$c,this.stencilZPass=$c,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===ip;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==nr&&(n.blending=this.blending),this.side!==cr&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}Ct.prototype.isMaterial=!0;Ct.fromType=function(){return null};class Wi extends Ct{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Me(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=cl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}Wi.prototype.isMeshBasicMaterial=!0;const Pt=new P,Kl=new ae;class Qe{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=wo,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new Me),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new ae),t[n++]=o.x,t[n++]=o.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new P),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new Je),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Kl.fromBufferAttribute(this,t),Kl.applyMatrix3(e),this.setXY(t,Kl.x,Kl.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Pt.fromBufferAttribute(this,t),Pt.applyMatrix3(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Pt.fromBufferAttribute(this,t),Pt.applyMatrix4(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Pt.fromBufferAttribute(this,t),Pt.applyNormalMatrix(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Pt.fromBufferAttribute(this,t),Pt.transformDirection(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==wo&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}Qe.prototype.isBufferAttribute=!0;class Sx extends Qe{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Ex extends Qe{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Tx extends Qe{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Ax extends Qe{constructor(e,t,n){super(new Int16Array(e),t,n)}}class hl extends Qe{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Cx extends Qe{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Uu extends Qe{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Rx extends Qe{constructor(e,t,n){super(new Uint16Array(e),t,n)}}Rx.prototype.isFloat16BufferAttribute=!0;class Le extends Qe{constructor(e,t,n){super(new Float32Array(e),t,n)}}class Lx extends Qe{constructor(e,t,n){super(new Float64Array(e),t,n)}}let qT=0;const _n=new we,Oh=new Ve,kr=new P,dn=new xn,fa=new xn,Ut=new P;class ze extends Gi{constructor(){super(),Object.defineProperty(this,"id",{value:qT++}),this.uuid=yn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(xx(e)?Uu:hl)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Bt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return _n.makeRotationFromQuaternion(e),this.applyMatrix4(_n),this}rotateX(e){return _n.makeRotationX(e),this.applyMatrix4(_n),this}rotateY(e){return _n.makeRotationY(e),this.applyMatrix4(_n),this}rotateZ(e){return _n.makeRotationZ(e),this.applyMatrix4(_n),this}translate(e,t,n){return _n.makeTranslation(e,t,n),this.applyMatrix4(_n),this}scale(e,t,n){return _n.makeScale(e,t,n),this.applyMatrix4(_n),this}lookAt(e){return Oh.lookAt(e),Oh.updateMatrix(),this.applyMatrix4(Oh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(kr).negate(),this.translate(kr.x,kr.y,kr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Le(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new xn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new P(-1/0,-1/0,-1/0),new P(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];dn.setFromBufferAttribute(r),this.morphTargetsRelative?(Ut.addVectors(this.boundingBox.min,dn.min),this.boundingBox.expandByPoint(Ut),Ut.addVectors(this.boundingBox.max,dn.max),this.boundingBox.expandByPoint(Ut)):(this.boundingBox.expandByPoint(dn.min),this.boundingBox.expandByPoint(dn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new As);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new P,1/0);return}if(e){const n=this.boundingSphere.center;if(dn.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];fa.setFromBufferAttribute(a),this.morphTargetsRelative?(Ut.addVectors(dn.min,fa.min),dn.expandByPoint(Ut),Ut.addVectors(dn.max,fa.max),dn.expandByPoint(Ut)):(dn.expandByPoint(fa.min),dn.expandByPoint(fa.max))}dn.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)Ut.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Ut));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Ut.fromBufferAttribute(a,c),l&&(kr.fromBufferAttribute(e,c),Ut.add(kr)),i=Math.max(i,n.distanceToSquared(Ut))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,o=t.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Qe(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let L=0;L<a;L++)c[L]=new P,u[L]=new P;const h=new P,f=new P,d=new P,p=new ae,g=new ae,m=new ae,v=new P,y=new P;function x(L,N,k){h.fromArray(i,L*3),f.fromArray(i,N*3),d.fromArray(i,k*3),p.fromArray(o,L*2),g.fromArray(o,N*2),m.fromArray(o,k*2),f.sub(h),d.sub(h),g.sub(p),m.sub(p);const O=1/(g.x*m.y-m.x*g.y);!isFinite(O)||(v.copy(f).multiplyScalar(m.y).addScaledVector(d,-g.y).multiplyScalar(O),y.copy(d).multiplyScalar(g.x).addScaledVector(f,-m.x).multiplyScalar(O),c[L].add(v),c[N].add(v),c[k].add(v),u[L].add(y),u[N].add(y),u[k].add(y))}let _=this.groups;_.length===0&&(_=[{start:0,count:n.length}]);for(let L=0,N=_.length;L<N;++L){const k=_[L],O=k.start,I=k.count;for(let U=O,D=O+I;U<D;U+=3)x(n[U+0],n[U+1],n[U+2])}const b=new P,S=new P,E=new P,w=new P;function A(L){E.fromArray(r,L*3),w.copy(E);const N=c[L];b.copy(N),b.sub(E.multiplyScalar(E.dot(N))).normalize(),S.crossVectors(w,N);const O=S.dot(u[L])<0?-1:1;l[L*4]=b.x,l[L*4+1]=b.y,l[L*4+2]=b.z,l[L*4+3]=O}for(let L=0,N=_.length;L<N;++L){const k=_[L],O=k.start,I=k.count;for(let U=O,D=O+I;U<D;U+=3)A(n[U+0]),A(n[U+1]),A(n[U+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Qe(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const i=new P,r=new P,o=new P,a=new P,l=new P,c=new P,u=new P,h=new P;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),g=e.getX(f+1),m=e.getX(f+2);i.fromBufferAttribute(t,p),r.fromBufferAttribute(t,g),o.fromBufferAttribute(t,m),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,g),c.fromBufferAttribute(n,m),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let f=0,d=t.count;f<d;f+=3)i.fromBufferAttribute(t,f+0),r.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const o=n[i].array,a=e.attributes[i],l=a.array,c=a.itemSize*t,u=Math.min(l.length,o.length-c);for(let h=0,f=c;h<u;h++,f++)o[f]=l[h]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Ut.fromBufferAttribute(e,t),Ut.normalize(),e.setXYZ(t,Ut.x,Ut.y,Ut.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,f=new c.constructor(l.length*u);let d=0,p=0;for(let g=0,m=l.length;g<m;g++){a.isInterleavedBufferAttribute?d=l[g]*a.data.stride+a.offset:d=l[g]*u;for(let v=0;v<u;v++)f[p++]=c[d++]}return new Qe(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ze,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=e(l,n);t.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=e(f,n);l.push(d)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(e.data))}u.length>0&&(i[l]=u,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(t))}const r=e.morphAttributes;for(const c in r){const u=[],h=r[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}ze.prototype.isBufferGeometry=!0;const rg=new we,Hr=new Cs,Uh=new As,Qi=new P,es=new P,ts=new P,kh=new P,Hh=new P,Vh=new P,Jl=new P,Ql=new P,ec=new P,tc=new ae,nc=new ae,ic=new ae,Gh=new P,sc=new P;class xt extends Ve{constructor(e=new ze,t=new Wi){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Uh.copy(n.boundingSphere),Uh.applyMatrix4(r),e.ray.intersectsSphere(Uh)===!1)||(rg.copy(r).invert(),Hr.copy(e.ray).applyMatrix4(rg),n.boundingBox!==null&&Hr.intersectsBox(n.boundingBox)===!1))return;let o;if(n.isBufferGeometry){const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,f=n.attributes.uv2,d=n.groups,p=n.drawRange;if(a!==null)if(Array.isArray(i))for(let g=0,m=d.length;g<m;g++){const v=d[g],y=i[v.materialIndex],x=Math.max(v.start,p.start),_=Math.min(a.count,Math.min(v.start+v.count,p.start+p.count));for(let b=x,S=_;b<S;b+=3){const E=a.getX(b),w=a.getX(b+1),A=a.getX(b+2);o=rc(this,y,e,Hr,l,c,u,h,f,E,w,A),o&&(o.faceIndex=Math.floor(b/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(a.count,p.start+p.count);for(let v=g,y=m;v<y;v+=3){const x=a.getX(v),_=a.getX(v+1),b=a.getX(v+2);o=rc(this,i,e,Hr,l,c,u,h,f,x,_,b),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let g=0,m=d.length;g<m;g++){const v=d[g],y=i[v.materialIndex],x=Math.max(v.start,p.start),_=Math.min(l.count,Math.min(v.start+v.count,p.start+p.count));for(let b=x,S=_;b<S;b+=3){const E=b,w=b+1,A=b+2;o=rc(this,y,e,Hr,l,c,u,h,f,E,w,A),o&&(o.faceIndex=Math.floor(b/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(l.count,p.start+p.count);for(let v=g,y=m;v<y;v+=3){const x=v,_=v+1,b=v+2;o=rc(this,i,e,Hr,l,c,u,h,f,x,_,b),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}xt.prototype.isMesh=!0;function jT(s,e,t,n,i,r,o,a){let l;if(e.side===gn?l=n.intersectTriangle(o,r,i,!0,a):l=n.intersectTriangle(i,r,o,e.side!==ur,a),l===null)return null;sc.copy(a),sc.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(sc);return c<t.near||c>t.far?null:{distance:c,point:sc.clone(),object:s}}function rc(s,e,t,n,i,r,o,a,l,c,u,h){Qi.fromBufferAttribute(i,c),es.fromBufferAttribute(i,u),ts.fromBufferAttribute(i,h);const f=s.morphTargetInfluences;if(r&&f){Jl.set(0,0,0),Ql.set(0,0,0),ec.set(0,0,0);for(let p=0,g=r.length;p<g;p++){const m=f[p],v=r[p];m!==0&&(kh.fromBufferAttribute(v,c),Hh.fromBufferAttribute(v,u),Vh.fromBufferAttribute(v,h),o?(Jl.addScaledVector(kh,m),Ql.addScaledVector(Hh,m),ec.addScaledVector(Vh,m)):(Jl.addScaledVector(kh.sub(Qi),m),Ql.addScaledVector(Hh.sub(es),m),ec.addScaledVector(Vh.sub(ts),m)))}Qi.add(Jl),es.add(Ql),ts.add(ec)}s.isSkinnedMesh&&(s.boneTransform(c,Qi),s.boneTransform(u,es),s.boneTransform(h,ts));const d=jT(s,e,t,n,Qi,es,ts,Gh);if(d){a&&(tc.fromBufferAttribute(a,c),nc.fromBufferAttribute(a,u),ic.fromBufferAttribute(a,h),d.uv=At.getUV(Gh,Qi,es,ts,tc,nc,ic,new ae)),l&&(tc.fromBufferAttribute(l,c),nc.fromBufferAttribute(l,u),ic.fromBufferAttribute(l,h),d.uv2=At.getUV(Gh,Qi,es,ts,tc,nc,ic,new ae));const p={a:c,b:u,c:h,normal:new P,materialIndex:0};At.getNormal(Qi,es,ts,p.normal),d.face=p}return d}class Oi extends ze{constructor(e=1,t=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],u=[],h=[];let f=0,d=0;p("z","y","x",-1,-1,n,t,e,o,r,0),p("z","y","x",1,-1,n,t,-e,o,r,1),p("x","z","y",1,1,e,n,t,i,o,2),p("x","z","y",1,-1,e,n,-t,i,o,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new Le(c,3)),this.setAttribute("normal",new Le(u,3)),this.setAttribute("uv",new Le(h,2));function p(g,m,v,y,x,_,b,S,E,w,A){const L=_/E,N=b/w,k=_/2,O=b/2,I=S/2,U=E+1,D=w+1;let j=0,G=0;const V=new P;for(let Y=0;Y<D;Y++){const te=Y*N-O;for(let X=0;X<U;X++){const ue=X*L-k;V[g]=ue*y,V[m]=te*x,V[v]=I,c.push(V.x,V.y,V.z),V[g]=0,V[m]=0,V[v]=S>0?1:-1,u.push(V.x,V.y,V.z),h.push(X/E),h.push(1-Y/w),j+=1}}for(let Y=0;Y<w;Y++)for(let te=0;te<E;te++){const X=f+te+U*Y,ue=f+te+U*(Y+1),me=f+(te+1)+U*(Y+1),ge=f+(te+1)+U*Y;l.push(X,ue,ge),l.push(ue,me,ge),G+=6}a.addGroup(d,G,A),d+=G,f+=j}}static fromJSON(e){return new Oi(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Mo(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function jt(s){const e={};for(let t=0;t<s.length;t++){const n=Mo(s[t]);for(const i in n)e[i]=n[i]}return e}const Px={clone:Mo,merge:jt};var XT=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,$T=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Rn extends Ct{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=XT,this.fragmentShader=$T,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Mo(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}Rn.prototype.isShaderMaterial=!0;class fl extends Ve{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new we,this.projectionMatrix=new we,this.projectionMatrixInverse=new we}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}fl.prototype.isCamera=!0;class Ft extends fl{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Za*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(sr*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Za*2*Math.atan(Math.tan(sr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(sr*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/l,t-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}Ft.prototype.isPerspectiveCamera=!0;const Vr=90,Gr=1;class ku extends Ve{constructor(e,t,n){if(super(),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new Ft(Vr,Gr,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new P(1,0,0)),this.add(i);const r=new Ft(Vr,Gr,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new P(-1,0,0)),this.add(r);const o=new Ft(Vr,Gr,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new P(0,1,0)),this.add(o);const a=new Ft(Vr,Gr,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new P(0,-1,0)),this.add(a);const l=new Ft(Vr,Gr,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new P(0,0,1)),this.add(l);const c=new Ft(Vr,Gr,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new P(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,o,a,l,c]=this.children,u=e.getRenderTarget(),h=e.toneMapping,f=e.xr.enabled;e.toneMapping=oi,e.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(u),e.toneMapping=h,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class $o extends _t{constructor(e,t,n,i,r,o,a,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:ys,super(e,t,n,i,r,o,a,l,c,u),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}$o.prototype.isCubeTexture=!0;class Hu extends en{constructor(e,t={}){super(e,e,t);const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new $o(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:St}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Oi(5,5,5),r=new Rn({name:"CubemapFromEquirect",uniforms:Mo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:gn,blending:Bi});r.uniforms.tEquirect.value=t;const o=new xt(i,r),a=t.minFilter;return t.minFilter===wr&&(t.minFilter=St),new ku(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(r)}}Hu.prototype.isWebGLCubeRenderTarget=!0;const Wh=new P,YT=new P,ZT=new Bt;class ri{constructor(e=new P(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Wh.subVectors(n,t).cross(YT.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Wh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||ZT.getNormalMatrix(e),i=this.coplanarPoint(Wh).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}ri.prototype.isPlane=!0;const Wr=new As,oc=new P;class dl{constructor(e=new ri,t=new ri,n=new ri,i=new ri,r=new ri,o=new ri){this.planes=[e,t,n,i,r,o]}set(e,t,n,i,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7],f=n[8],d=n[9],p=n[10],g=n[11],m=n[12],v=n[13],y=n[14],x=n[15];return t[0].setComponents(a-i,h-l,g-f,x-m).normalize(),t[1].setComponents(a+i,h+l,g+f,x+m).normalize(),t[2].setComponents(a+r,h+c,g+d,x+v).normalize(),t[3].setComponents(a-r,h-c,g-d,x-v).normalize(),t[4].setComponents(a-o,h-u,g-p,x-y).normalize(),t[5].setComponents(a+o,h+u,g+p,x+y).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Wr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Wr)}intersectsSprite(e){return Wr.center.set(0,0,0),Wr.radius=.7071067811865476,Wr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Wr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(oc.x=i.normal.x>0?e.max.x:e.min.x,oc.y=i.normal.y>0?e.max.y:e.min.y,oc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(oc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Ix(){let s=null,e=!1,t=null,n=null;function i(r,o){t(r,o),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function KT(s,e){const t=e.isWebGL2,n=new WeakMap;function i(c,u){const h=c.array,f=c.usage,d=s.createBuffer();s.bindBuffer(u,d),s.bufferData(u,h,f),c.onUploadCallback();let p;if(h instanceof Float32Array)p=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)p=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=5123;else if(h instanceof Int16Array)p=5122;else if(h instanceof Uint32Array)p=5125;else if(h instanceof Int32Array)p=5124;else if(h instanceof Int8Array)p=5120;else if(h instanceof Uint8Array)p=5121;else if(h instanceof Uint8ClampedArray)p=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:d,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function r(c,u,h){const f=u.array,d=u.updateRange;s.bindBuffer(h,c),d.count===-1?s.bufferSubData(h,0,f):(t?s.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):s.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(s.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=n.get(c);(!f||f.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,u)):h.version<c.version&&(r(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class _s extends ze{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,o=t/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,h=e/a,f=t/l,d=[],p=[],g=[],m=[];for(let v=0;v<u;v++){const y=v*f-o;for(let x=0;x<c;x++){const _=x*h-r;p.push(_,-y,0),g.push(0,0,1),m.push(x/a),m.push(1-v/l)}}for(let v=0;v<l;v++)for(let y=0;y<a;y++){const x=y+c*v,_=y+c*(v+1),b=y+1+c*(v+1),S=y+1+c*v;d.push(x,_,S),d.push(_,b,S)}this.setIndex(d),this.setAttribute("position",new Le(p,3)),this.setAttribute("normal",new Le(g,3)),this.setAttribute("uv",new Le(m,2))}static fromJSON(e){return new _s(e.width,e.height,e.widthSegments,e.heightSegments)}}var JT=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,QT=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,eA=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,tA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,nA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,iA=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,sA="vec3 transformed = vec3( position );",rA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,oA=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,aA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,lA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,cA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,uA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,hA=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,fA=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,dA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,pA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,mA=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,gA=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,yA=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,vA=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,xA=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,_A=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,wA=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,bA=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,MA="gl_FragColor = linearToOutputTexel( gl_FragColor );",SA=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,EA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,TA=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,AA=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,CA=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,RA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,LA=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,PA=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,IA=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,FA=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,BA=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,DA=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,zA=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,NA=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,OA=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,UA=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,kA=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,HA=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,VA=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,GA=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,WA=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,qA=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,jA=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,XA=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,$A=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,YA=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,ZA=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,KA=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,JA=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,QA=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,eC=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,tC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,nC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,iC=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,sC=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,rC=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,oC=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,aC=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,lC=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,cC=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,uC=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,hC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,fC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,dC=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,pC=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,mC=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,gC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,yC=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,vC=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,xC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,_C=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,wC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,bC=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,MC=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,SC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,EC=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,TC=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,AC=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,CC=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,RC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,LC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,PC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,IC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,FC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,BC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,DC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,zC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,NC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,OC=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,UC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,kC=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,HC=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,VC=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,GC=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,WC=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,qC=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,jC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const XC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,$C=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,YC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,ZC=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,KC=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,JC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,QC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,eR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,tR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,nR=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,iR=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,sR=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,rR=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,oR=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aR=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lR=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cR=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,uR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hR=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,fR=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,dR=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,pR=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mR=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,gR=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yR=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,vR=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xR=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,_R=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,wR=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,MR=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,SR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,qe={alphamap_fragment:JT,alphamap_pars_fragment:QT,alphatest_fragment:eA,alphatest_pars_fragment:tA,aomap_fragment:nA,aomap_pars_fragment:iA,begin_vertex:sA,beginnormal_vertex:rA,bsdfs:oA,bumpmap_pars_fragment:aA,clipping_planes_fragment:lA,clipping_planes_pars_fragment:cA,clipping_planes_pars_vertex:uA,clipping_planes_vertex:hA,color_fragment:fA,color_pars_fragment:dA,color_pars_vertex:pA,color_vertex:mA,common:gA,cube_uv_reflection_fragment:yA,defaultnormal_vertex:vA,displacementmap_pars_vertex:xA,displacementmap_vertex:_A,emissivemap_fragment:wA,emissivemap_pars_fragment:bA,encodings_fragment:MA,encodings_pars_fragment:SA,envmap_fragment:EA,envmap_common_pars_fragment:TA,envmap_pars_fragment:AA,envmap_pars_vertex:CA,envmap_physical_pars_fragment:UA,envmap_vertex:RA,fog_vertex:LA,fog_pars_vertex:PA,fog_fragment:IA,fog_pars_fragment:FA,gradientmap_pars_fragment:BA,lightmap_fragment:DA,lightmap_pars_fragment:zA,lights_lambert_vertex:NA,lights_pars_begin:OA,lights_toon_fragment:kA,lights_toon_pars_fragment:HA,lights_phong_fragment:VA,lights_phong_pars_fragment:GA,lights_physical_fragment:WA,lights_physical_pars_fragment:qA,lights_fragment_begin:jA,lights_fragment_maps:XA,lights_fragment_end:$A,logdepthbuf_fragment:YA,logdepthbuf_pars_fragment:ZA,logdepthbuf_pars_vertex:KA,logdepthbuf_vertex:JA,map_fragment:QA,map_pars_fragment:eC,map_particle_fragment:tC,map_particle_pars_fragment:nC,metalnessmap_fragment:iC,metalnessmap_pars_fragment:sC,morphcolor_vertex:rC,morphnormal_vertex:oC,morphtarget_pars_vertex:aC,morphtarget_vertex:lC,normal_fragment_begin:cC,normal_fragment_maps:uC,normal_pars_fragment:hC,normal_pars_vertex:fC,normal_vertex:dC,normalmap_pars_fragment:pC,clearcoat_normal_fragment_begin:mC,clearcoat_normal_fragment_maps:gC,clearcoat_pars_fragment:yC,output_fragment:vC,packing:xC,premultiplied_alpha_fragment:_C,project_vertex:wC,dithering_fragment:bC,dithering_pars_fragment:MC,roughnessmap_fragment:SC,roughnessmap_pars_fragment:EC,shadowmap_pars_fragment:TC,shadowmap_pars_vertex:AC,shadowmap_vertex:CC,shadowmask_pars_fragment:RC,skinbase_vertex:LC,skinning_pars_vertex:PC,skinning_vertex:IC,skinnormal_vertex:FC,specularmap_fragment:BC,specularmap_pars_fragment:DC,tonemapping_fragment:zC,tonemapping_pars_fragment:NC,transmission_fragment:OC,transmission_pars_fragment:UC,uv_pars_fragment:kC,uv_pars_vertex:HC,uv_vertex:VC,uv2_pars_fragment:GC,uv2_pars_vertex:WC,uv2_vertex:qC,worldpos_vertex:jC,background_vert:XC,background_frag:$C,cube_vert:YC,cube_frag:ZC,depth_vert:KC,depth_frag:JC,distanceRGBA_vert:QC,distanceRGBA_frag:eR,equirect_vert:tR,equirect_frag:nR,linedashed_vert:iR,linedashed_frag:sR,meshbasic_vert:rR,meshbasic_frag:oR,meshlambert_vert:aR,meshlambert_frag:lR,meshmatcap_vert:cR,meshmatcap_frag:uR,meshnormal_vert:hR,meshnormal_frag:fR,meshphong_vert:dR,meshphong_frag:pR,meshphysical_vert:mR,meshphysical_frag:gR,meshtoon_vert:yR,meshtoon_frag:vR,points_vert:xR,points_frag:_R,shadow_vert:wR,shadow_frag:bR,sprite_vert:MR,sprite_frag:SR},Ee={common:{diffuse:{value:new Me(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Bt},uv2Transform:{value:new Bt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ae(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Me(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Me(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Bt}},sprite:{diffuse:{value:new Me(16777215)},opacity:{value:1},center:{value:new ae(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Bt}}},On={basic:{uniforms:jt([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.fog]),vertexShader:qe.meshbasic_vert,fragmentShader:qe.meshbasic_frag},lambert:{uniforms:jt([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.fog,Ee.lights,{emissive:{value:new Me(0)}}]),vertexShader:qe.meshlambert_vert,fragmentShader:qe.meshlambert_frag},phong:{uniforms:jt([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,Ee.lights,{emissive:{value:new Me(0)},specular:{value:new Me(1118481)},shininess:{value:30}}]),vertexShader:qe.meshphong_vert,fragmentShader:qe.meshphong_frag},standard:{uniforms:jt([Ee.common,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.roughnessmap,Ee.metalnessmap,Ee.fog,Ee.lights,{emissive:{value:new Me(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:qe.meshphysical_vert,fragmentShader:qe.meshphysical_frag},toon:{uniforms:jt([Ee.common,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.gradientmap,Ee.fog,Ee.lights,{emissive:{value:new Me(0)}}]),vertexShader:qe.meshtoon_vert,fragmentShader:qe.meshtoon_frag},matcap:{uniforms:jt([Ee.common,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,{matcap:{value:null}}]),vertexShader:qe.meshmatcap_vert,fragmentShader:qe.meshmatcap_frag},points:{uniforms:jt([Ee.points,Ee.fog]),vertexShader:qe.points_vert,fragmentShader:qe.points_frag},dashed:{uniforms:jt([Ee.common,Ee.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:qe.linedashed_vert,fragmentShader:qe.linedashed_frag},depth:{uniforms:jt([Ee.common,Ee.displacementmap]),vertexShader:qe.depth_vert,fragmentShader:qe.depth_frag},normal:{uniforms:jt([Ee.common,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,{opacity:{value:1}}]),vertexShader:qe.meshnormal_vert,fragmentShader:qe.meshnormal_frag},sprite:{uniforms:jt([Ee.sprite,Ee.fog]),vertexShader:qe.sprite_vert,fragmentShader:qe.sprite_frag},background:{uniforms:{uvTransform:{value:new Bt},t2D:{value:null}},vertexShader:qe.background_vert,fragmentShader:qe.background_frag},cube:{uniforms:jt([Ee.envmap,{opacity:{value:1}}]),vertexShader:qe.cube_vert,fragmentShader:qe.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:qe.equirect_vert,fragmentShader:qe.equirect_frag},distanceRGBA:{uniforms:jt([Ee.common,Ee.displacementmap,{referencePosition:{value:new P},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:qe.distanceRGBA_vert,fragmentShader:qe.distanceRGBA_frag},shadow:{uniforms:jt([Ee.lights,Ee.fog,{color:{value:new Me(0)},opacity:{value:1}}]),vertexShader:qe.shadow_vert,fragmentShader:qe.shadow_frag}};On.physical={uniforms:jt([On.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ae(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new Me(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ae},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Me(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Me(1,1,1)},specularColorMap:{value:null}}]),vertexShader:qe.meshphysical_vert,fragmentShader:qe.meshphysical_frag};function ER(s,e,t,n,i,r){const o=new Me(0);let a=i===!0?0:1,l,c,u=null,h=0,f=null;function d(g,m){let v=!1,y=m.isScene===!0?m.background:null;y&&y.isTexture&&(y=e.get(y));const x=s.xr,_=x.getSession&&x.getSession();_&&_.environmentBlendMode==="additive"&&(y=null),y===null?p(o,a):y&&y.isColor&&(p(y,1),v=!0),(s.autoClear||v)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),y&&(y.isCubeTexture||y.mapping===jo)?(c===void 0&&(c=new xt(new Oi(1,1,1),new Rn({name:"BackgroundCubeMaterial",uniforms:Mo(On.cube.uniforms),vertexShader:On.cube.vertexShader,fragmentShader:On.cube.fragmentShader,side:gn,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(b,S,E){this.matrixWorld.copyPosition(E.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=y,c.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,(u!==y||h!==y.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,u=y,h=y.version,f=s.toneMapping),c.layers.enableAll(),g.unshift(c,c.geometry,c.material,0,0,null)):y&&y.isTexture&&(l===void 0&&(l=new xt(new _s(2,2),new Rn({name:"BackgroundMaterial",uniforms:Mo(On.background.uniforms),vertexShader:On.background.vertexShader,fragmentShader:On.background.fragmentShader,side:cr,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=y,y.matrixAutoUpdate===!0&&y.updateMatrix(),l.material.uniforms.uvTransform.value.copy(y.matrix),(u!==y||h!==y.version||f!==s.toneMapping)&&(l.material.needsUpdate=!0,u=y,h=y.version,f=s.toneMapping),l.layers.enableAll(),g.unshift(l,l.geometry,l.material,0,0,null))}function p(g,m){t.buffers.color.setClear(g.r,g.g,g.b,m,r)}return{getClearColor:function(){return o},setClearColor:function(g,m=1){o.set(g),a=m,p(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(g){a=g,p(o,a)},render:d}}function TR(s,e,t,n){const i=s.getParameter(34921),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},l=m(null);let c=l,u=!1;function h(I,U,D,j,G){let V=!1;if(o){const Y=g(j,D,U);c!==Y&&(c=Y,d(c.object)),V=v(I,j,D,G),V&&y(I,j,D,G)}else{const Y=U.wireframe===!0;(c.geometry!==j.id||c.program!==D.id||c.wireframe!==Y)&&(c.geometry=j.id,c.program=D.id,c.wireframe=Y,V=!0)}G!==null&&t.update(G,34963),(V||u)&&(u=!1,w(I,U,D,j),G!==null&&s.bindBuffer(34963,t.get(G).buffer))}function f(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function d(I){return n.isWebGL2?s.bindVertexArray(I):r.bindVertexArrayOES(I)}function p(I){return n.isWebGL2?s.deleteVertexArray(I):r.deleteVertexArrayOES(I)}function g(I,U,D){const j=D.wireframe===!0;let G=a[I.id];G===void 0&&(G={},a[I.id]=G);let V=G[U.id];V===void 0&&(V={},G[U.id]=V);let Y=V[j];return Y===void 0&&(Y=m(f()),V[j]=Y),Y}function m(I){const U=[],D=[],j=[];for(let G=0;G<i;G++)U[G]=0,D[G]=0,j[G]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:U,enabledAttributes:D,attributeDivisors:j,object:I,attributes:{},index:null}}function v(I,U,D,j){const G=c.attributes,V=U.attributes;let Y=0;const te=D.getAttributes();for(const X in te)if(te[X].location>=0){const me=G[X];let ge=V[X];if(ge===void 0&&(X==="instanceMatrix"&&I.instanceMatrix&&(ge=I.instanceMatrix),X==="instanceColor"&&I.instanceColor&&(ge=I.instanceColor)),me===void 0||me.attribute!==ge||ge&&me.data!==ge.data)return!0;Y++}return c.attributesNum!==Y||c.index!==j}function y(I,U,D,j){const G={},V=U.attributes;let Y=0;const te=D.getAttributes();for(const X in te)if(te[X].location>=0){let me=V[X];me===void 0&&(X==="instanceMatrix"&&I.instanceMatrix&&(me=I.instanceMatrix),X==="instanceColor"&&I.instanceColor&&(me=I.instanceColor));const ge={};ge.attribute=me,me&&me.data&&(ge.data=me.data),G[X]=ge,Y++}c.attributes=G,c.attributesNum=Y,c.index=j}function x(){const I=c.newAttributes;for(let U=0,D=I.length;U<D;U++)I[U]=0}function _(I){b(I,0)}function b(I,U){const D=c.newAttributes,j=c.enabledAttributes,G=c.attributeDivisors;D[I]=1,j[I]===0&&(s.enableVertexAttribArray(I),j[I]=1),G[I]!==U&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](I,U),G[I]=U)}function S(){const I=c.newAttributes,U=c.enabledAttributes;for(let D=0,j=U.length;D<j;D++)U[D]!==I[D]&&(s.disableVertexAttribArray(D),U[D]=0)}function E(I,U,D,j,G,V){n.isWebGL2===!0&&(D===5124||D===5125)?s.vertexAttribIPointer(I,U,D,G,V):s.vertexAttribPointer(I,U,D,j,G,V)}function w(I,U,D,j){if(n.isWebGL2===!1&&(I.isInstancedMesh||j.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;x();const G=j.attributes,V=D.getAttributes(),Y=U.defaultAttributeValues;for(const te in V){const X=V[te];if(X.location>=0){let ue=G[te];if(ue===void 0&&(te==="instanceMatrix"&&I.instanceMatrix&&(ue=I.instanceMatrix),te==="instanceColor"&&I.instanceColor&&(ue=I.instanceColor)),ue!==void 0){const me=ue.normalized,ge=ue.itemSize,Q=t.get(ue);if(Q===void 0)continue;const Pe=Q.buffer,Ae=Q.type,Be=Q.bytesPerElement;if(ue.isInterleavedBufferAttribute){const pe=ue.data,De=pe.stride,re=ue.offset;if(pe.isInstancedInterleavedBuffer){for(let C=0;C<X.locationSize;C++)b(X.location+C,pe.meshPerAttribute);I.isInstancedMesh!==!0&&j._maxInstanceCount===void 0&&(j._maxInstanceCount=pe.meshPerAttribute*pe.count)}else for(let C=0;C<X.locationSize;C++)_(X.location+C);s.bindBuffer(34962,Pe);for(let C=0;C<X.locationSize;C++)E(X.location+C,ge/X.locationSize,Ae,me,De*Be,(re+ge/X.locationSize*C)*Be)}else{if(ue.isInstancedBufferAttribute){for(let pe=0;pe<X.locationSize;pe++)b(X.location+pe,ue.meshPerAttribute);I.isInstancedMesh!==!0&&j._maxInstanceCount===void 0&&(j._maxInstanceCount=ue.meshPerAttribute*ue.count)}else for(let pe=0;pe<X.locationSize;pe++)_(X.location+pe);s.bindBuffer(34962,Pe);for(let pe=0;pe<X.locationSize;pe++)E(X.location+pe,ge/X.locationSize,Ae,me,ge*Be,ge/X.locationSize*pe*Be)}}else if(Y!==void 0){const me=Y[te];if(me!==void 0)switch(me.length){case 2:s.vertexAttrib2fv(X.location,me);break;case 3:s.vertexAttrib3fv(X.location,me);break;case 4:s.vertexAttrib4fv(X.location,me);break;default:s.vertexAttrib1fv(X.location,me)}}}}S()}function A(){k();for(const I in a){const U=a[I];for(const D in U){const j=U[D];for(const G in j)p(j[G].object),delete j[G];delete U[D]}delete a[I]}}function L(I){if(a[I.id]===void 0)return;const U=a[I.id];for(const D in U){const j=U[D];for(const G in j)p(j[G].object),delete j[G];delete U[D]}delete a[I.id]}function N(I){for(const U in a){const D=a[U];if(D[I.id]===void 0)continue;const j=D[I.id];for(const G in j)p(j[G].object),delete j[G];delete D[I.id]}}function k(){O(),u=!0,c!==l&&(c=l,d(c.object))}function O(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:k,resetDefaultState:O,dispose:A,releaseStatesOfGeometry:L,releaseStatesOfProgram:N,initAttributes:x,enableAttribute:_,disableUnusedAttributes:S}}function AR(s,e,t,n){const i=n.isWebGL2;let r;function o(c){r=c}function a(c,u){s.drawArrays(r,c,u),t.update(u,r,1)}function l(c,u,h){if(h===0)return;let f,d;if(i)f=s,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](r,c,u,h),t.update(u,r,h)}this.setMode=o,this.render=a,this.renderInstances=l}function CR(s,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const E=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(E){if(E==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";E="mediump"}return E==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext!="undefined"&&s instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&s instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=s.getParameter(34930),f=s.getParameter(35660),d=s.getParameter(3379),p=s.getParameter(34076),g=s.getParameter(34921),m=s.getParameter(36347),v=s.getParameter(36348),y=s.getParameter(36349),x=f>0,_=o||e.has("OES_texture_float"),b=x&&_,S=o?s.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:p,maxAttributes:g,maxVertexUniforms:m,maxVaryings:v,maxFragmentUniforms:y,vertexTextures:x,floatFragmentTextures:_,floatVertexTextures:b,maxSamples:S}}function RR(s){const e=this;let t=null,n=0,i=!1,r=!1;const o=new ri,a=new Bt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f,d){const p=h.length!==0||f||n!==0||i;return i=f,t=u(h,d,0),n=h.length,p},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1,c()},this.setState=function(h,f,d){const p=h.clippingPlanes,g=h.clipIntersection,m=h.clipShadows,v=s.get(h);if(!i||p===null||p.length===0||r&&!m)r?u(null):c();else{const y=r?0:n,x=y*4;let _=v.clippingState||null;l.value=_,_=u(p,f,x,d);for(let b=0;b!==x;++b)_[b]=t[b];v.clippingState=_,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=y}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,f,d,p){const g=h!==null?h.length:0;let m=null;if(g!==0){if(m=l.value,p!==!0||m===null){const v=d+g*4,y=f.matrixWorldInverse;a.getNormalMatrix(y),(m===null||m.length<v)&&(m=new Float32Array(v));for(let x=0,_=d;x!==g;++x,_+=4)o.copy(h[x]).applyMatrix4(y,a),o.normal.toArray(m,_),m[_+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,m}}function LR(s){let e=new WeakMap;function t(o,a){return a===vo?o.mapping=ys:a===qa&&(o.mapping=vs),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===vo||a===qa)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Hu(l.height/2);return c.fromEquirectangularTexture(s,o),e.set(o,c),o.addEventListener("dispose",i),t(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class Yo extends fl{constructor(e=-1,t=1,n=1,i=-1,r=.1,o=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,o=n+e,a=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}Yo.prototype.isOrthographicCamera=!0;const oo=4,og=[.125,.215,.35,.446,.526,.582],Ys=20,qh=new Yo,ag=new Me;let jh=null;const js=(1+Math.sqrt(5))/2,qr=1/js,lg=[new P(1,1,1),new P(-1,1,1),new P(1,1,-1),new P(-1,1,-1),new P(0,js,qr),new P(0,js,-qr),new P(qr,0,js),new P(-qr,0,js),new P(js,qr,0),new P(-js,qr,0)];class hd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){jh=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=hg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=ug(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(jh),e.scissorTest=!1,ac(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ys||e.mapping===vs?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),jh=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:St,minFilter:St,generateMipmaps:!1,type:_o,format:mn,encoding:Ni,depthBuffer:!1},i=cg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=cg(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=PR(r)),this._blurMaterial=IR(r,e,t)}return i}_compileMaterial(e){const t=new xt(this._lodPlanes[0],e);this._renderer.compile(t,qh)}_sceneToCubeUV(e,t,n,i){const a=new Ft(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,f=u.toneMapping;u.getClearColor(ag),u.toneMapping=oi,u.autoClear=!1;const d=new Wi({name:"PMREM.Background",side:gn,depthWrite:!1,depthTest:!1}),p=new xt(new Oi,d);let g=!1;const m=e.background;m?m.isColor&&(d.color.copy(m),e.background=null,g=!0):(d.color.copy(ag),g=!0);for(let v=0;v<6;v++){const y=v%3;y===0?(a.up.set(0,l[v],0),a.lookAt(c[v],0,0)):y===1?(a.up.set(0,0,l[v]),a.lookAt(0,c[v],0)):(a.up.set(0,l[v],0),a.lookAt(0,0,c[v]));const x=this._cubeSize;ac(i,y*x,v>2?x:0,x,x),u.setRenderTarget(i),g&&u.render(p,a),u.render(e,a)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=f,u.autoClear=h,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===ys||e.mapping===vs;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=hg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=ug());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new xt(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const l=this._cubeSize;ac(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,qh)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=lg[(i-1)%lg.length];this._blur(e,i-1,i,r,o)}t.autoClear=n}_blur(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new xt(this._lodPlanes[i],c),f=c.uniforms,d=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*d):2*Math.PI/(2*Ys-1),g=r/p,m=isFinite(r)?1+Math.floor(u*g):Ys;m>Ys&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Ys}`);const v=[];let y=0;for(let E=0;E<Ys;++E){const w=E/g,A=Math.exp(-w*w/2);v.push(A),E===0?y+=A:E<m&&(y+=2*A)}for(let E=0;E<v.length;E++)v[E]=v[E]/y;f.envMap.value=e.texture,f.samples.value=m,f.weights.value=v,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:x}=this;f.dTheta.value=p,f.mipInt.value=x-n;const _=this._sizeLods[i],b=3*_*(i>x-oo?i-x+oo:0),S=4*(this._cubeSize-_);ac(t,b,S,3*_,2*_),l.setRenderTarget(t),l.render(h,qh)}}function PR(s){const e=[],t=[],n=[];let i=s;const r=s-oo+1+og.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);t.push(a);let l=1/a;o>s-oo?l=og[o-s+oo-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],d=6,p=6,g=3,m=2,v=1,y=new Float32Array(g*p*d),x=new Float32Array(m*p*d),_=new Float32Array(v*p*d);for(let S=0;S<d;S++){const E=S%3*2/3-1,w=S>2?0:-1,A=[E,w,0,E+2/3,w,0,E+2/3,w+1,0,E,w,0,E+2/3,w+1,0,E,w+1,0];y.set(A,g*p*S),x.set(f,m*p*S);const L=[S,S,S,S,S,S];_.set(L,v*p*S)}const b=new ze;b.setAttribute("position",new Qe(y,g)),b.setAttribute("uv",new Qe(x,m)),b.setAttribute("faceIndex",new Qe(_,v)),e.push(b),i>oo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function cg(s,e,t){const n=new en(s,e,t);return n.texture.mapping=jo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ac(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function IR(s,e,t){const n=new Float32Array(Ys),i=new P(0,1,0);return new Rn({name:"SphericalGaussianBlur",defines:{n:Ys,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:cp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Bi,depthTest:!1,depthWrite:!1})}function ug(){return new Rn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:cp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Bi,depthTest:!1,depthWrite:!1})}function hg(){return new Rn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:cp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Bi,depthTest:!1,depthWrite:!1})}function cp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function FR(s){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===vo||l===qa,u=l===ys||l===vs;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=e.get(a);return t===null&&(t=new hd(s)),h=c?t.fromEquirectangular(a,h):t.fromCubemap(a,h),e.set(a,h),h.texture}else{if(e.has(a))return e.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&i(h)){t===null&&(t=new hd(s));const f=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,f),a.addEventListener("dispose",r),f.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function BR(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function DR(s,e,t,n){const i={},r=new WeakMap;function o(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",o),delete i[f.id];const d=r.get(f);d&&(e.remove(d),r.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(h,f){return i[f.id]===!0||(f.addEventListener("dispose",o),i[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const p in f)e.update(f[p],34962);const d=h.morphAttributes;for(const p in d){const g=d[p];for(let m=0,v=g.length;m<v;m++)e.update(g[m],34962)}}function c(h){const f=[],d=h.index,p=h.attributes.position;let g=0;if(d!==null){const y=d.array;g=d.version;for(let x=0,_=y.length;x<_;x+=3){const b=y[x+0],S=y[x+1],E=y[x+2];f.push(b,S,S,E,E,b)}}else{const y=p.array;g=p.version;for(let x=0,_=y.length/3-1;x<_;x+=3){const b=x+0,S=x+1,E=x+2;f.push(b,S,S,E,E,b)}}const m=new(xx(f)?Uu:hl)(f,1);m.version=g;const v=r.get(h);v&&e.remove(v),r.set(h,m)}function u(h){const f=r.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return r.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function zR(s,e,t,n){const i=n.isWebGL2;let r;function o(f){r=f}let a,l;function c(f){a=f.type,l=f.bytesPerElement}function u(f,d){s.drawElements(r,d,a,f*l),t.update(d,r,1)}function h(f,d,p){if(p===0)return;let g,m;if(i)g=s,m="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[m](r,d,a,f*l,p),t.update(d,r,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function NR(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(r/3);break;case 1:t.lines+=a*(r/2);break;case 3:t.lines+=a*(r-1);break;case 2:t.lines+=a*r;break;case 0:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function OR(s,e){return s[0]-e[0]}function UR(s,e){return Math.abs(e[1])-Math.abs(s[1])}function Xh(s,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),s.divideScalar(t)}function kR(s,e,t){const n={},i=new Float32Array(8),r=new WeakMap,o=new Je,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h,f){const d=c.morphTargetInfluences;if(e.isWebGL2===!0){const p=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,g=p!==void 0?p.length:0;let m=r.get(u);if(m===void 0||m.count!==g){let U=function(){O.dispose(),r.delete(u),u.removeEventListener("dispose",U)};m!==void 0&&m.texture.dispose();const x=u.morphAttributes.position!==void 0,_=u.morphAttributes.normal!==void 0,b=u.morphAttributes.color!==void 0,S=u.morphAttributes.position||[],E=u.morphAttributes.normal||[],w=u.morphAttributes.color||[];let A=0;x===!0&&(A=1),_===!0&&(A=2),b===!0&&(A=3);let L=u.attributes.position.count*A,N=1;L>e.maxTextureSize&&(N=Math.ceil(L/e.maxTextureSize),L=e.maxTextureSize);const k=new Float32Array(L*N*4*g),O=new Xo(k,L,N,g);O.type=Li,O.needsUpdate=!0;const I=A*4;for(let D=0;D<g;D++){const j=S[D],G=E[D],V=w[D],Y=L*N*4*D;for(let te=0;te<j.count;te++){const X=te*I;x===!0&&(o.fromBufferAttribute(j,te),j.normalized===!0&&Xh(o,j),k[Y+X+0]=o.x,k[Y+X+1]=o.y,k[Y+X+2]=o.z,k[Y+X+3]=0),_===!0&&(o.fromBufferAttribute(G,te),G.normalized===!0&&Xh(o,G),k[Y+X+4]=o.x,k[Y+X+5]=o.y,k[Y+X+6]=o.z,k[Y+X+7]=0),b===!0&&(o.fromBufferAttribute(V,te),V.normalized===!0&&Xh(o,V),k[Y+X+8]=o.x,k[Y+X+9]=o.y,k[Y+X+10]=o.z,k[Y+X+11]=V.itemSize===4?o.w:1)}}m={count:g,texture:O,size:new ae(L,N)},r.set(u,m),u.addEventListener("dispose",U)}let v=0;for(let x=0;x<d.length;x++)v+=d[x];const y=u.morphTargetsRelative?1:1-v;f.getUniforms().setValue(s,"morphTargetBaseInfluence",y),f.getUniforms().setValue(s,"morphTargetInfluences",d),f.getUniforms().setValue(s,"morphTargetsTexture",m.texture,t),f.getUniforms().setValue(s,"morphTargetsTextureSize",m.size)}else{const p=d===void 0?0:d.length;let g=n[u.id];if(g===void 0||g.length!==p){g=[];for(let _=0;_<p;_++)g[_]=[_,0];n[u.id]=g}for(let _=0;_<p;_++){const b=g[_];b[0]=_,b[1]=d[_]}g.sort(UR);for(let _=0;_<8;_++)_<p&&g[_][1]?(a[_][0]=g[_][0],a[_][1]=g[_][1]):(a[_][0]=Number.MAX_SAFE_INTEGER,a[_][1]=0);a.sort(OR);const m=u.morphAttributes.position,v=u.morphAttributes.normal;let y=0;for(let _=0;_<8;_++){const b=a[_],S=b[0],E=b[1];S!==Number.MAX_SAFE_INTEGER&&E?(m&&u.getAttribute("morphTarget"+_)!==m[S]&&u.setAttribute("morphTarget"+_,m[S]),v&&u.getAttribute("morphNormal"+_)!==v[S]&&u.setAttribute("morphNormal"+_,v[S]),i[_]=E,y+=E):(m&&u.hasAttribute("morphTarget"+_)===!0&&u.deleteAttribute("morphTarget"+_),v&&u.hasAttribute("morphNormal"+_)===!0&&u.deleteAttribute("morphNormal"+_),i[_]=0)}const x=u.morphTargetsRelative?1:1-y;f.getUniforms().setValue(s,"morphTargetBaseInfluence",x),f.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:l}}function HR(s,e,t,n){let i=new WeakMap;function r(l){const c=n.render.frame,u=l.geometry,h=e.get(l,u);return i.get(h)!==c&&(e.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),h}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:r,dispose:o}}const Fx=new _t,Bx=new Xo,Dx=new ul,zx=new $o,fg=[],dg=[],pg=new Float32Array(16),mg=new Float32Array(9),gg=new Float32Array(4);function Zo(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=fg[i];if(r===void 0&&(r=new Float32Array(i),fg[i]=r),e!==0){n.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,s[o].toArray(r,a)}return r}function nn(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function sn(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function Vu(s,e){let t=dg[e];t===void 0&&(t=new Int32Array(e),dg[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function VR(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function GR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(nn(t,e))return;s.uniform2fv(this.addr,e),sn(t,e)}}function WR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(nn(t,e))return;s.uniform3fv(this.addr,e),sn(t,e)}}function qR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(nn(t,e))return;s.uniform4fv(this.addr,e),sn(t,e)}}function jR(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(nn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),sn(t,e)}else{if(nn(t,n))return;gg.set(n),s.uniformMatrix2fv(this.addr,!1,gg),sn(t,n)}}function XR(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(nn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),sn(t,e)}else{if(nn(t,n))return;mg.set(n),s.uniformMatrix3fv(this.addr,!1,mg),sn(t,n)}}function $R(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(nn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),sn(t,e)}else{if(nn(t,n))return;pg.set(n),s.uniformMatrix4fv(this.addr,!1,pg),sn(t,n)}}function YR(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function ZR(s,e){const t=this.cache;nn(t,e)||(s.uniform2iv(this.addr,e),sn(t,e))}function KR(s,e){const t=this.cache;nn(t,e)||(s.uniform3iv(this.addr,e),sn(t,e))}function JR(s,e){const t=this.cache;nn(t,e)||(s.uniform4iv(this.addr,e),sn(t,e))}function QR(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function e2(s,e){const t=this.cache;nn(t,e)||(s.uniform2uiv(this.addr,e),sn(t,e))}function t2(s,e){const t=this.cache;nn(t,e)||(s.uniform3uiv(this.addr,e),sn(t,e))}function n2(s,e){const t=this.cache;nn(t,e)||(s.uniform4uiv(this.addr,e),sn(t,e))}function i2(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Fx,i)}function s2(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Dx,i)}function r2(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||zx,i)}function o2(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Bx,i)}function a2(s){switch(s){case 5126:return VR;case 35664:return GR;case 35665:return WR;case 35666:return qR;case 35674:return jR;case 35675:return XR;case 35676:return $R;case 5124:case 35670:return YR;case 35667:case 35671:return ZR;case 35668:case 35672:return KR;case 35669:case 35673:return JR;case 5125:return QR;case 36294:return e2;case 36295:return t2;case 36296:return n2;case 35678:case 36198:case 36298:case 36306:case 35682:return i2;case 35679:case 36299:case 36307:return s2;case 35680:case 36300:case 36308:case 36293:return r2;case 36289:case 36303:case 36311:case 36292:return o2}}function l2(s,e){s.uniform1fv(this.addr,e)}function c2(s,e){const t=Zo(e,this.size,2);s.uniform2fv(this.addr,t)}function u2(s,e){const t=Zo(e,this.size,3);s.uniform3fv(this.addr,t)}function h2(s,e){const t=Zo(e,this.size,4);s.uniform4fv(this.addr,t)}function f2(s,e){const t=Zo(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function d2(s,e){const t=Zo(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function p2(s,e){const t=Zo(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function m2(s,e){s.uniform1iv(this.addr,e)}function g2(s,e){s.uniform2iv(this.addr,e)}function y2(s,e){s.uniform3iv(this.addr,e)}function v2(s,e){s.uniform4iv(this.addr,e)}function x2(s,e){s.uniform1uiv(this.addr,e)}function _2(s,e){s.uniform2uiv(this.addr,e)}function w2(s,e){s.uniform3uiv(this.addr,e)}function b2(s,e){s.uniform4uiv(this.addr,e)}function M2(s,e,t){const n=e.length,i=Vu(t,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.setTexture2D(e[r]||Fx,i[r])}function S2(s,e,t){const n=e.length,i=Vu(t,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.setTexture3D(e[r]||Dx,i[r])}function E2(s,e,t){const n=e.length,i=Vu(t,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.setTextureCube(e[r]||zx,i[r])}function T2(s,e,t){const n=e.length,i=Vu(t,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.setTexture2DArray(e[r]||Bx,i[r])}function A2(s){switch(s){case 5126:return l2;case 35664:return c2;case 35665:return u2;case 35666:return h2;case 35674:return f2;case 35675:return d2;case 35676:return p2;case 5124:case 35670:return m2;case 35667:case 35671:return g2;case 35668:case 35672:return y2;case 35669:case 35673:return v2;case 5125:return x2;case 36294:return _2;case 36295:return w2;case 36296:return b2;case 35678:case 36198:case 36298:case 36306:case 35682:return M2;case 35679:case 36299:case 36307:return S2;case 35680:case 36300:case 36308:case 36293:return E2;case 36289:case 36303:case 36311:case 36292:return T2}}function C2(s,e,t){this.id=s,this.addr=t,this.cache=[],this.setValue=a2(e.type)}function R2(s,e,t){this.id=s,this.addr=t,this.cache=[],this.size=e.size,this.setValue=A2(e.type)}function Nx(s){this.id=s,this.seq=[],this.map={}}Nx.prototype.setValue=function(s,e,t){const n=this.seq;for(let i=0,r=n.length;i!==r;++i){const o=n[i];o.setValue(s,e[o.id],t)}};const $h=/(\w+)(\])?(\[|\.)?/g;function yg(s,e){s.seq.push(e),s.map[e.id]=e}function L2(s,e,t){const n=s.name,i=n.length;for($h.lastIndex=0;;){const r=$h.exec(n),o=$h.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){yg(t,c===void 0?new C2(a,s,e):new R2(a,s,e));break}else{let h=t.map[a];h===void 0&&(h=new Nx(a),yg(t,h)),t=h}}}function ds(s,e){this.seq=[],this.map={};const t=s.getProgramParameter(e,35718);for(let n=0;n<t;++n){const i=s.getActiveUniform(e,n),r=s.getUniformLocation(e,i.name);L2(i,r,this)}}ds.prototype.setValue=function(s,e,t,n){const i=this.map[e];i!==void 0&&i.setValue(s,t,n)};ds.prototype.setOptional=function(s,e,t){const n=e[t];n!==void 0&&this.setValue(s,t,n)};ds.upload=function(s,e,t,n){for(let i=0,r=e.length;i!==r;++i){const o=e[i],a=t[o.id];a.needsUpdate!==!1&&o.setValue(s,a.value,n)}};ds.seqWithValue=function(s,e){const t=[];for(let n=0,i=s.length;n!==i;++n){const r=s[n];r.id in e&&t.push(r)}return t};function vg(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}let P2=0;function I2(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=i;o<r;o++)n.push(o+1+": "+t[o]);return n.join(`
`)}function F2(s){switch(s){case Ni:return["Linear","( value )"];case it:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function xg(s,e,t){const n=s.getShaderParameter(e,35713),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[0]);return t.toUpperCase()+`

`+i+`

`+I2(s.getShaderSource(e),o)}else return i}function B2(s,e){const t=F2(e);return"vec4 "+s+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function D2(s,e){let t;switch(e){case Wv:t="Linear";break;case qv:t="Reinhard";break;case jv:t="OptimizedCineon";break;case Xv:t="ACESFilmic";break;case $v:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function z2(s){return[s.extensionDerivatives||!!s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ea).join(`
`)}function N2(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function O2(s,e){const t={},n=s.getProgramParameter(e,35721);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),o=r.name;let a=1;r.type===35674&&(a=2),r.type===35675&&(a=3),r.type===35676&&(a=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:a}}return t}function Ea(s){return s!==""}function _g(s,e){return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function wg(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const U2=/^[ \t]*#include +<([\w\d./]+)>/gm;function fd(s){return s.replace(U2,k2)}function k2(s,e){const t=qe[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return fd(t)}const H2=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,V2=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function bg(s){return s.replace(V2,Ox).replace(H2,G2)}function G2(s,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Ox(s,e,t,n)}function Ox(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Mg(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function W2(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===tp?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===np?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===so&&(e="SHADOWMAP_TYPE_VSM"),e}function q2(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case ys:case vs:e="ENVMAP_TYPE_CUBE";break;case jo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function j2(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case vs:e="ENVMAP_MODE_REFRACTION";break}return e}function X2(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case cl:e="ENVMAP_BLENDING_MULTIPLY";break;case Vv:e="ENVMAP_BLENDING_MIX";break;case Gv:e="ENVMAP_BLENDING_ADD";break}return e}function $2(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Y2(s,e,t,n){const i=s.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=W2(t),c=q2(t),u=j2(t),h=X2(t),f=$2(t),d=t.isWebGL2?"":z2(t),p=N2(r),g=i.createProgram();let m,v,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=[p].filter(Ea).join(`
`),m.length>0&&(m+=`
`),v=[d,p].filter(Ea).join(`
`),v.length>0&&(v+=`
`)):(m=[Mg(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ea).join(`
`),v=[d,Mg(t),"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==oi?"#define TONE_MAPPING":"",t.toneMapping!==oi?qe.tonemapping_pars_fragment:"",t.toneMapping!==oi?D2("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",qe.encodings_pars_fragment,B2("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ea).join(`
`)),o=fd(o),o=_g(o,t),o=wg(o,t),a=fd(a),a=_g(a,t),a=wg(a,t),o=bg(o),a=bg(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,v=["#define varying in",t.glslVersion===cd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===cd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const x=y+m+o,_=y+v+a,b=vg(i,35633,x),S=vg(i,35632,_);if(i.attachShader(g,b),i.attachShader(g,S),t.index0AttributeName!==void 0?i.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),s.debug.checkShaderErrors){const A=i.getProgramInfoLog(g).trim(),L=i.getShaderInfoLog(b).trim(),N=i.getShaderInfoLog(S).trim();let k=!0,O=!0;if(i.getProgramParameter(g,35714)===!1){k=!1;const I=xg(i,b,"vertex"),U=xg(i,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,35715)+`

Program Info Log: `+A+`
`+I+`
`+U)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(L===""||N==="")&&(O=!1);O&&(this.diagnostics={runnable:k,programLog:A,vertexShader:{log:L,prefix:m},fragmentShader:{log:N,prefix:v}})}i.deleteShader(b),i.deleteShader(S);let E;this.getUniforms=function(){return E===void 0&&(E=new ds(i,g)),E};let w;return this.getAttributes=function(){return w===void 0&&(w=O2(i,g)),w},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=t.shaderName,this.id=P2++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=b,this.fragmentShader=S,this}let Z2=0;class K2{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const n=new J2(e);t.set(e,n)}return t.get(e)}}class J2{constructor(e){this.id=Z2++,this.code=e,this.usedTimes=0}}function Q2(s,e,t,n,i,r,o){const a=new Ou,l=new K2,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,f=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(w,A,L,N,k){const O=N.fog,I=k.geometry,U=w.isMeshStandardMaterial?N.environment:null,D=(w.isMeshStandardMaterial?t:e).get(w.envMap||U),j=!!D&&D.mapping===jo?D.image.height:null,G=p[w.type];w.precision!==null&&(d=i.getMaxPrecision(w.precision),d!==w.precision&&console.warn("THREE.WebGLProgram.getParameters:",w.precision,"not supported, using",d,"instead."));const V=I.morphAttributes.position||I.morphAttributes.normal||I.morphAttributes.color,Y=V!==void 0?V.length:0;let te=0;I.morphAttributes.position!==void 0&&(te=1),I.morphAttributes.normal!==void 0&&(te=2),I.morphAttributes.color!==void 0&&(te=3);let X,ue,me,ge;if(G){const pe=On[G];X=pe.vertexShader,ue=pe.fragmentShader}else X=w.vertexShader,ue=w.fragmentShader,l.update(w),me=l.getVertexShaderID(w),ge=l.getFragmentShaderID(w);const Q=s.getRenderTarget(),Pe=w.alphaTest>0,Ae=w.clearcoat>0;return{isWebGL2:u,shaderID:G,shaderName:w.type,vertexShader:X,fragmentShader:ue,defines:w.defines,customVertexShaderID:me,customFragmentShaderID:ge,isRawShaderMaterial:w.isRawShaderMaterial===!0,glslVersion:w.glslVersion,precision:d,instancing:k.isInstancedMesh===!0,instancingColor:k.isInstancedMesh===!0&&k.instanceColor!==null,supportsVertexTextures:f,outputEncoding:Q===null?s.outputEncoding:Q.isXRRenderTarget===!0?Q.texture.encoding:Ni,map:!!w.map,matcap:!!w.matcap,envMap:!!D,envMapMode:D&&D.mapping,envMapCubeUVHeight:j,lightMap:!!w.lightMap,aoMap:!!w.aoMap,emissiveMap:!!w.emissiveMap,bumpMap:!!w.bumpMap,normalMap:!!w.normalMap,objectSpaceNormalMap:w.normalMapType===gx,tangentSpaceNormalMap:w.normalMapType===br,decodeVideoTexture:!!w.map&&w.map.isVideoTexture===!0&&w.map.encoding===it,clearcoat:Ae,clearcoatMap:Ae&&!!w.clearcoatMap,clearcoatRoughnessMap:Ae&&!!w.clearcoatRoughnessMap,clearcoatNormalMap:Ae&&!!w.clearcoatNormalMap,displacementMap:!!w.displacementMap,roughnessMap:!!w.roughnessMap,metalnessMap:!!w.metalnessMap,specularMap:!!w.specularMap,specularIntensityMap:!!w.specularIntensityMap,specularColorMap:!!w.specularColorMap,opaque:w.transparent===!1&&w.blending===nr,alphaMap:!!w.alphaMap,alphaTest:Pe,gradientMap:!!w.gradientMap,sheen:w.sheen>0,sheenColorMap:!!w.sheenColorMap,sheenRoughnessMap:!!w.sheenRoughnessMap,transmission:w.transmission>0,transmissionMap:!!w.transmissionMap,thicknessMap:!!w.thicknessMap,combine:w.combine,vertexTangents:!!w.normalMap&&!!I.attributes.tangent,vertexColors:w.vertexColors,vertexAlphas:w.vertexColors===!0&&!!I.attributes.color&&I.attributes.color.itemSize===4,vertexUvs:!!w.map||!!w.bumpMap||!!w.normalMap||!!w.specularMap||!!w.alphaMap||!!w.emissiveMap||!!w.roughnessMap||!!w.metalnessMap||!!w.clearcoatMap||!!w.clearcoatRoughnessMap||!!w.clearcoatNormalMap||!!w.displacementMap||!!w.transmissionMap||!!w.thicknessMap||!!w.specularIntensityMap||!!w.specularColorMap||!!w.sheenColorMap||!!w.sheenRoughnessMap,uvsVertexOnly:!(!!w.map||!!w.bumpMap||!!w.normalMap||!!w.specularMap||!!w.alphaMap||!!w.emissiveMap||!!w.roughnessMap||!!w.metalnessMap||!!w.clearcoatNormalMap||w.transmission>0||!!w.transmissionMap||!!w.thicknessMap||!!w.specularIntensityMap||!!w.specularColorMap||w.sheen>0||!!w.sheenColorMap||!!w.sheenRoughnessMap)&&!!w.displacementMap,fog:!!O,useFog:w.fog===!0,fogExp2:O&&O.isFogExp2,flatShading:!!w.flatShading,sizeAttenuation:w.sizeAttenuation,logarithmicDepthBuffer:h,skinning:k.isSkinnedMesh===!0,morphTargets:I.morphAttributes.position!==void 0,morphNormals:I.morphAttributes.normal!==void 0,morphColors:I.morphAttributes.color!==void 0,morphTargetsCount:Y,morphTextureStride:te,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:w.dithering,shadowMapEnabled:s.shadowMap.enabled&&L.length>0,shadowMapType:s.shadowMap.type,toneMapping:w.toneMapped?s.toneMapping:oi,physicallyCorrectLights:s.physicallyCorrectLights,premultipliedAlpha:w.premultipliedAlpha,doubleSided:w.side===ur,flipSided:w.side===gn,useDepthPacking:!!w.depthPacking,depthPacking:w.depthPacking||0,index0AttributeName:w.index0AttributeName,extensionDerivatives:w.extensions&&w.extensions.derivatives,extensionFragDepth:w.extensions&&w.extensions.fragDepth,extensionDrawBuffers:w.extensions&&w.extensions.drawBuffers,extensionShaderTextureLOD:w.extensions&&w.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:w.customProgramCacheKey()}}function m(w){const A=[];if(w.shaderID?A.push(w.shaderID):(A.push(w.customVertexShaderID),A.push(w.customFragmentShaderID)),w.defines!==void 0)for(const L in w.defines)A.push(L),A.push(w.defines[L]);return w.isRawShaderMaterial===!1&&(v(A,w),y(A,w),A.push(s.outputEncoding)),A.push(w.customProgramCacheKey),A.join()}function v(w,A){w.push(A.precision),w.push(A.outputEncoding),w.push(A.envMapMode),w.push(A.envMapCubeUVHeight),w.push(A.combine),w.push(A.vertexUvs),w.push(A.fogExp2),w.push(A.sizeAttenuation),w.push(A.morphTargetsCount),w.push(A.morphAttributeCount),w.push(A.numDirLights),w.push(A.numPointLights),w.push(A.numSpotLights),w.push(A.numHemiLights),w.push(A.numRectAreaLights),w.push(A.numDirLightShadows),w.push(A.numPointLightShadows),w.push(A.numSpotLightShadows),w.push(A.shadowMapType),w.push(A.toneMapping),w.push(A.numClippingPlanes),w.push(A.numClipIntersection),w.push(A.depthPacking)}function y(w,A){a.disableAll(),A.isWebGL2&&a.enable(0),A.supportsVertexTextures&&a.enable(1),A.instancing&&a.enable(2),A.instancingColor&&a.enable(3),A.map&&a.enable(4),A.matcap&&a.enable(5),A.envMap&&a.enable(6),A.lightMap&&a.enable(7),A.aoMap&&a.enable(8),A.emissiveMap&&a.enable(9),A.bumpMap&&a.enable(10),A.normalMap&&a.enable(11),A.objectSpaceNormalMap&&a.enable(12),A.tangentSpaceNormalMap&&a.enable(13),A.clearcoat&&a.enable(14),A.clearcoatMap&&a.enable(15),A.clearcoatRoughnessMap&&a.enable(16),A.clearcoatNormalMap&&a.enable(17),A.displacementMap&&a.enable(18),A.specularMap&&a.enable(19),A.roughnessMap&&a.enable(20),A.metalnessMap&&a.enable(21),A.gradientMap&&a.enable(22),A.alphaMap&&a.enable(23),A.alphaTest&&a.enable(24),A.vertexColors&&a.enable(25),A.vertexAlphas&&a.enable(26),A.vertexUvs&&a.enable(27),A.vertexTangents&&a.enable(28),A.uvsVertexOnly&&a.enable(29),A.fog&&a.enable(30),w.push(a.mask),a.disableAll(),A.useFog&&a.enable(0),A.flatShading&&a.enable(1),A.logarithmicDepthBuffer&&a.enable(2),A.skinning&&a.enable(3),A.morphTargets&&a.enable(4),A.morphNormals&&a.enable(5),A.morphColors&&a.enable(6),A.premultipliedAlpha&&a.enable(7),A.shadowMapEnabled&&a.enable(8),A.physicallyCorrectLights&&a.enable(9),A.doubleSided&&a.enable(10),A.flipSided&&a.enable(11),A.useDepthPacking&&a.enable(12),A.dithering&&a.enable(13),A.specularIntensityMap&&a.enable(14),A.specularColorMap&&a.enable(15),A.transmission&&a.enable(16),A.transmissionMap&&a.enable(17),A.thicknessMap&&a.enable(18),A.sheen&&a.enable(19),A.sheenColorMap&&a.enable(20),A.sheenRoughnessMap&&a.enable(21),A.decodeVideoTexture&&a.enable(22),A.opaque&&a.enable(23),w.push(a.mask)}function x(w){const A=p[w.type];let L;if(A){const N=On[A];L=Px.clone(N.uniforms)}else L=w.uniforms;return L}function _(w,A){let L;for(let N=0,k=c.length;N<k;N++){const O=c[N];if(O.cacheKey===A){L=O,++L.usedTimes;break}}return L===void 0&&(L=new Y2(s,A,w,r),c.push(L)),L}function b(w){if(--w.usedTimes===0){const A=c.indexOf(w);c[A]=c[c.length-1],c.pop(),w.destroy()}}function S(w){l.remove(w)}function E(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:x,acquireProgram:_,releaseProgram:b,releaseShaderCache:S,programs:c,dispose:E}}function eL(){let s=new WeakMap;function e(r){let o=s.get(r);return o===void 0&&(o={},s.set(r,o)),o}function t(r){s.delete(r)}function n(r,o,a){s.get(r)[o]=a}function i(){s=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function tL(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function Sg(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function Eg(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function o(h,f,d,p,g,m){let v=s[e];return v===void 0?(v={id:h.id,object:h,geometry:f,material:d,groupOrder:p,renderOrder:h.renderOrder,z:g,group:m},s[e]=v):(v.id=h.id,v.object=h,v.geometry=f,v.material=d,v.groupOrder=p,v.renderOrder=h.renderOrder,v.z=g,v.group=m),e++,v}function a(h,f,d,p,g,m){const v=o(h,f,d,p,g,m);d.transmission>0?n.push(v):d.transparent===!0?i.push(v):t.push(v)}function l(h,f,d,p,g,m){const v=o(h,f,d,p,g,m);d.transmission>0?n.unshift(v):d.transparent===!0?i.unshift(v):t.unshift(v)}function c(h,f){t.length>1&&t.sort(h||tL),n.length>1&&n.sort(f||Sg),i.length>1&&i.sort(f||Sg)}function u(){for(let h=e,f=s.length;h<f;h++){const d=s[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:a,unshift:l,finish:u,sort:c}}function nL(){let s=new WeakMap;function e(n,i){let r;return s.has(n)===!1?(r=new Eg,s.set(n,[r])):i>=s.get(n).length?(r=new Eg,s.get(n).push(r)):r=s.get(n)[i],r}function t(){s=new WeakMap}return{get:e,dispose:t}}function iL(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new P,color:new Me};break;case"SpotLight":t={position:new P,direction:new P,color:new Me,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new P,color:new Me,distance:0,decay:0};break;case"HemisphereLight":t={direction:new P,skyColor:new Me,groundColor:new Me};break;case"RectAreaLight":t={color:new Me,position:new P,halfWidth:new P,halfHeight:new P};break}return s[e.id]=t,t}}}function sL(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ae};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ae};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ae,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let rL=0;function oL(s,e){return(e.castShadow?1:0)-(s.castShadow?1:0)}function aL(s,e){const t=new iL,n=sL(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new P);const r=new P,o=new we,a=new we;function l(u,h){let f=0,d=0,p=0;for(let A=0;A<9;A++)i.probe[A].set(0,0,0);let g=0,m=0,v=0,y=0,x=0,_=0,b=0,S=0;u.sort(oL);const E=h!==!0?Math.PI:1;for(let A=0,L=u.length;A<L;A++){const N=u[A],k=N.color,O=N.intensity,I=N.distance,U=N.shadow&&N.shadow.map?N.shadow.map.texture:null;if(N.isAmbientLight)f+=k.r*O*E,d+=k.g*O*E,p+=k.b*O*E;else if(N.isLightProbe)for(let D=0;D<9;D++)i.probe[D].addScaledVector(N.sh.coefficients[D],O);else if(N.isDirectionalLight){const D=t.get(N);if(D.color.copy(N.color).multiplyScalar(N.intensity*E),N.castShadow){const j=N.shadow,G=n.get(N);G.shadowBias=j.bias,G.shadowNormalBias=j.normalBias,G.shadowRadius=j.radius,G.shadowMapSize=j.mapSize,i.directionalShadow[g]=G,i.directionalShadowMap[g]=U,i.directionalShadowMatrix[g]=N.shadow.matrix,_++}i.directional[g]=D,g++}else if(N.isSpotLight){const D=t.get(N);if(D.position.setFromMatrixPosition(N.matrixWorld),D.color.copy(k).multiplyScalar(O*E),D.distance=I,D.coneCos=Math.cos(N.angle),D.penumbraCos=Math.cos(N.angle*(1-N.penumbra)),D.decay=N.decay,N.castShadow){const j=N.shadow,G=n.get(N);G.shadowBias=j.bias,G.shadowNormalBias=j.normalBias,G.shadowRadius=j.radius,G.shadowMapSize=j.mapSize,i.spotShadow[v]=G,i.spotShadowMap[v]=U,i.spotShadowMatrix[v]=N.shadow.matrix,S++}i.spot[v]=D,v++}else if(N.isRectAreaLight){const D=t.get(N);D.color.copy(k).multiplyScalar(O),D.halfWidth.set(N.width*.5,0,0),D.halfHeight.set(0,N.height*.5,0),i.rectArea[y]=D,y++}else if(N.isPointLight){const D=t.get(N);if(D.color.copy(N.color).multiplyScalar(N.intensity*E),D.distance=N.distance,D.decay=N.decay,N.castShadow){const j=N.shadow,G=n.get(N);G.shadowBias=j.bias,G.shadowNormalBias=j.normalBias,G.shadowRadius=j.radius,G.shadowMapSize=j.mapSize,G.shadowCameraNear=j.camera.near,G.shadowCameraFar=j.camera.far,i.pointShadow[m]=G,i.pointShadowMap[m]=U,i.pointShadowMatrix[m]=N.shadow.matrix,b++}i.point[m]=D,m++}else if(N.isHemisphereLight){const D=t.get(N);D.skyColor.copy(N.color).multiplyScalar(O*E),D.groundColor.copy(N.groundColor).multiplyScalar(O*E),i.hemi[x]=D,x++}}y>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Ee.LTC_FLOAT_1,i.rectAreaLTC2=Ee.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Ee.LTC_HALF_1,i.rectAreaLTC2=Ee.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=f,i.ambient[1]=d,i.ambient[2]=p;const w=i.hash;(w.directionalLength!==g||w.pointLength!==m||w.spotLength!==v||w.rectAreaLength!==y||w.hemiLength!==x||w.numDirectionalShadows!==_||w.numPointShadows!==b||w.numSpotShadows!==S)&&(i.directional.length=g,i.spot.length=v,i.rectArea.length=y,i.point.length=m,i.hemi.length=x,i.directionalShadow.length=_,i.directionalShadowMap.length=_,i.pointShadow.length=b,i.pointShadowMap.length=b,i.spotShadow.length=S,i.spotShadowMap.length=S,i.directionalShadowMatrix.length=_,i.pointShadowMatrix.length=b,i.spotShadowMatrix.length=S,w.directionalLength=g,w.pointLength=m,w.spotLength=v,w.rectAreaLength=y,w.hemiLength=x,w.numDirectionalShadows=_,w.numPointShadows=b,w.numSpotShadows=S,i.version=rL++)}function c(u,h){let f=0,d=0,p=0,g=0,m=0;const v=h.matrixWorldInverse;for(let y=0,x=u.length;y<x;y++){const _=u[y];if(_.isDirectionalLight){const b=i.directional[f];b.direction.setFromMatrixPosition(_.matrixWorld),r.setFromMatrixPosition(_.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(v),f++}else if(_.isSpotLight){const b=i.spot[p];b.position.setFromMatrixPosition(_.matrixWorld),b.position.applyMatrix4(v),b.direction.setFromMatrixPosition(_.matrixWorld),r.setFromMatrixPosition(_.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(v),p++}else if(_.isRectAreaLight){const b=i.rectArea[g];b.position.setFromMatrixPosition(_.matrixWorld),b.position.applyMatrix4(v),a.identity(),o.copy(_.matrixWorld),o.premultiply(v),a.extractRotation(o),b.halfWidth.set(_.width*.5,0,0),b.halfHeight.set(0,_.height*.5,0),b.halfWidth.applyMatrix4(a),b.halfHeight.applyMatrix4(a),g++}else if(_.isPointLight){const b=i.point[d];b.position.setFromMatrixPosition(_.matrixWorld),b.position.applyMatrix4(v),d++}else if(_.isHemisphereLight){const b=i.hemi[m];b.direction.setFromMatrixPosition(_.matrixWorld),b.direction.transformDirection(v),m++}}}return{setup:l,setupView:c,state:i}}function Tg(s,e){const t=new aL(s,e),n=[],i=[];function r(){n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function l(h){t.setup(n,h)}function c(h){t.setupView(n,h)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function lL(s,e){let t=new WeakMap;function n(r,o=0){let a;return t.has(r)===!1?(a=new Tg(s,e),t.set(r,[a])):o>=t.get(r).length?(a=new Tg(s,e),t.get(r).push(a)):a=t.get(r)[o],a}function i(){t=new WeakMap}return{get:n,dispose:i}}class Gu extends Ct{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=px,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}Gu.prototype.isMeshDepthMaterial=!0;class Wu extends Ct{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new P,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Wu.prototype.isMeshDistanceMaterial=!0;const cL=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,uL=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Ux(s,e,t){let n=new dl;const i=new ae,r=new ae,o=new Je,a=new Gu({depthPacking:mx}),l=new Wu,c={},u=t.maxTextureSize,h={0:gn,1:cr,2:ur},f=new Rn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ae},radius:{value:4}},vertexShader:cL,fragmentShader:uL}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new ze;p.setAttribute("position",new Qe(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new xt(p,f),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=tp,this.render=function(_,b,S){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||_.length===0)return;const E=s.getRenderTarget(),w=s.getActiveCubeFace(),A=s.getActiveMipmapLevel(),L=s.state;L.setBlending(Bi),L.buffers.color.setClear(1,1,1,1),L.buffers.depth.setTest(!0),L.setScissorTest(!1);for(let N=0,k=_.length;N<k;N++){const O=_[N],I=O.shadow;if(I===void 0){console.warn("THREE.WebGLShadowMap:",O,"has no shadow.");continue}if(I.autoUpdate===!1&&I.needsUpdate===!1)continue;i.copy(I.mapSize);const U=I.getFrameExtents();if(i.multiply(U),r.copy(I.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(r.x=Math.floor(u/U.x),i.x=r.x*U.x,I.mapSize.x=r.x),i.y>u&&(r.y=Math.floor(u/U.y),i.y=r.y*U.y,I.mapSize.y=r.y)),I.map===null&&!I.isPointLightShadow&&this.type===so&&(I.map=new en(i.x,i.y),I.map.texture.name=O.name+".shadowMap",I.mapPass=new en(i.x,i.y),I.camera.updateProjectionMatrix()),I.map===null){const j={minFilter:It,magFilter:It,format:mn};I.map=new en(i.x,i.y,j),I.map.texture.name=O.name+".shadowMap",I.camera.updateProjectionMatrix()}s.setRenderTarget(I.map),s.clear();const D=I.getViewportCount();for(let j=0;j<D;j++){const G=I.getViewport(j);o.set(r.x*G.x,r.y*G.y,r.x*G.z,r.y*G.w),L.viewport(o),I.updateMatrices(O,j),n=I.getFrustum(),x(b,S,I.camera,O,this.type)}!I.isPointLightShadow&&this.type===so&&v(I,S),I.needsUpdate=!1}m.needsUpdate=!1,s.setRenderTarget(E,w,A)};function v(_,b){const S=e.update(g);f.defines.VSM_SAMPLES!==_.blurSamples&&(f.defines.VSM_SAMPLES=_.blurSamples,d.defines.VSM_SAMPLES=_.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),f.uniforms.shadow_pass.value=_.map.texture,f.uniforms.resolution.value=_.mapSize,f.uniforms.radius.value=_.radius,s.setRenderTarget(_.mapPass),s.clear(),s.renderBufferDirect(b,null,S,f,g,null),d.uniforms.shadow_pass.value=_.mapPass.texture,d.uniforms.resolution.value=_.mapSize,d.uniforms.radius.value=_.radius,s.setRenderTarget(_.map),s.clear(),s.renderBufferDirect(b,null,S,d,g,null)}function y(_,b,S,E,w,A){let L=null;const N=S.isPointLight===!0?_.customDistanceMaterial:_.customDepthMaterial;if(N!==void 0?L=N:L=S.isPointLight===!0?l:a,s.localClippingEnabled&&b.clipShadows===!0&&b.clippingPlanes.length!==0||b.displacementMap&&b.displacementScale!==0||b.alphaMap&&b.alphaTest>0){const k=L.uuid,O=b.uuid;let I=c[k];I===void 0&&(I={},c[k]=I);let U=I[O];U===void 0&&(U=L.clone(),I[O]=U),L=U}return L.visible=b.visible,L.wireframe=b.wireframe,A===so?L.side=b.shadowSide!==null?b.shadowSide:b.side:L.side=b.shadowSide!==null?b.shadowSide:h[b.side],L.alphaMap=b.alphaMap,L.alphaTest=b.alphaTest,L.clipShadows=b.clipShadows,L.clippingPlanes=b.clippingPlanes,L.clipIntersection=b.clipIntersection,L.displacementMap=b.displacementMap,L.displacementScale=b.displacementScale,L.displacementBias=b.displacementBias,L.wireframeLinewidth=b.wireframeLinewidth,L.linewidth=b.linewidth,S.isPointLight===!0&&L.isMeshDistanceMaterial===!0&&(L.referencePosition.setFromMatrixPosition(S.matrixWorld),L.nearDistance=E,L.farDistance=w),L}function x(_,b,S,E,w){if(_.visible===!1)return;if(_.layers.test(b.layers)&&(_.isMesh||_.isLine||_.isPoints)&&(_.castShadow||_.receiveShadow&&w===so)&&(!_.frustumCulled||n.intersectsObject(_))){_.modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,_.matrixWorld);const N=e.update(_),k=_.material;if(Array.isArray(k)){const O=N.groups;for(let I=0,U=O.length;I<U;I++){const D=O[I],j=k[D.materialIndex];if(j&&j.visible){const G=y(_,j,E,S.near,S.far,w);s.renderBufferDirect(S,null,N,G,_,D)}}}else if(k.visible){const O=y(_,k,E,S.near,S.far,w);s.renderBufferDirect(S,null,N,O,_,null)}}const L=_.children;for(let N=0,k=L.length;N<k;N++)x(L[N],b,S,E,w)}}function hL(s,e,t){const n=t.isWebGL2;function i(){let H=!1;const ye=new Je;let xe=null;const Ie=new Je(0,0,0,0);return{setMask:function(_e){xe!==_e&&!H&&(s.colorMask(_e,_e,_e,_e),xe=_e)},setLocked:function(_e){H=_e},setClear:function(_e,Fe,be,Ne,at){at===!0&&(_e*=Ne,Fe*=Ne,be*=Ne),ye.set(_e,Fe,be,Ne),Ie.equals(ye)===!1&&(s.clearColor(_e,Fe,be,Ne),Ie.copy(ye))},reset:function(){H=!1,xe=null,Ie.set(-1,0,0,0)}}}function r(){let H=!1,ye=null,xe=null,Ie=null;return{setTest:function(_e){_e?ge(2929):Q(2929)},setMask:function(_e){ye!==_e&&!H&&(s.depthMask(_e),ye=_e)},setFunc:function(_e){if(xe!==_e){if(_e)switch(_e){case Dv:s.depthFunc(512);break;case zv:s.depthFunc(519);break;case Nv:s.depthFunc(513);break;case hu:s.depthFunc(515);break;case Ov:s.depthFunc(514);break;case Uv:s.depthFunc(518);break;case kv:s.depthFunc(516);break;case Hv:s.depthFunc(517);break;default:s.depthFunc(515)}else s.depthFunc(515);xe=_e}},setLocked:function(_e){H=_e},setClear:function(_e){Ie!==_e&&(s.clearDepth(_e),Ie=_e)},reset:function(){H=!1,ye=null,xe=null,Ie=null}}}function o(){let H=!1,ye=null,xe=null,Ie=null,_e=null,Fe=null,be=null,Ne=null,at=null;return{setTest:function(Ye){H||(Ye?ge(2960):Q(2960))},setMask:function(Ye){ye!==Ye&&!H&&(s.stencilMask(Ye),ye=Ye)},setFunc:function(Ye,jn,Xn){(xe!==Ye||Ie!==jn||_e!==Xn)&&(s.stencilFunc(Ye,jn,Xn),xe=Ye,Ie=jn,_e=Xn)},setOp:function(Ye,jn,Xn){(Fe!==Ye||be!==jn||Ne!==Xn)&&(s.stencilOp(Ye,jn,Xn),Fe=Ye,be=jn,Ne=Xn)},setLocked:function(Ye){H=Ye},setClear:function(Ye){at!==Ye&&(s.clearStencil(Ye),at=Ye)},reset:function(){H=!1,ye=null,xe=null,Ie=null,_e=null,Fe=null,be=null,Ne=null,at=null}}}const a=new i,l=new r,c=new o;let u={},h={},f=new WeakMap,d=[],p=null,g=!1,m=null,v=null,y=null,x=null,_=null,b=null,S=null,E=!1,w=null,A=null,L=null,N=null,k=null;const O=s.getParameter(35661);let I=!1,U=0;const D=s.getParameter(7938);D.indexOf("WebGL")!==-1?(U=parseFloat(/^WebGL (\d)/.exec(D)[1]),I=U>=1):D.indexOf("OpenGL ES")!==-1&&(U=parseFloat(/^OpenGL ES (\d)/.exec(D)[1]),I=U>=2);let j=null,G={};const V=s.getParameter(3088),Y=s.getParameter(2978),te=new Je().fromArray(V),X=new Je().fromArray(Y);function ue(H,ye,xe){const Ie=new Uint8Array(4),_e=s.createTexture();s.bindTexture(H,_e),s.texParameteri(H,10241,9728),s.texParameteri(H,10240,9728);for(let Fe=0;Fe<xe;Fe++)s.texImage2D(ye+Fe,0,6408,1,1,0,6408,5121,Ie);return _e}const me={};me[3553]=ue(3553,3553,1),me[34067]=ue(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ge(2929),l.setFunc(hu),B(!1),W(zf),ge(2884),re(Bi);function ge(H){u[H]!==!0&&(s.enable(H),u[H]=!0)}function Q(H){u[H]!==!1&&(s.disable(H),u[H]=!1)}function Pe(H,ye){return h[H]!==ye?(s.bindFramebuffer(H,ye),h[H]=ye,n&&(H===36009&&(h[36160]=ye),H===36160&&(h[36009]=ye)),!0):!1}function Ae(H,ye){let xe=d,Ie=!1;if(H)if(xe=f.get(ye),xe===void 0&&(xe=[],f.set(ye,xe)),H.isWebGLMultipleRenderTargets){const _e=H.texture;if(xe.length!==_e.length||xe[0]!==36064){for(let Fe=0,be=_e.length;Fe<be;Fe++)xe[Fe]=36064+Fe;xe.length=_e.length,Ie=!0}}else xe[0]!==36064&&(xe[0]=36064,Ie=!0);else xe[0]!==1029&&(xe[0]=1029,Ie=!0);Ie&&(t.isWebGL2?s.drawBuffers(xe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(xe))}function Be(H){return p!==H?(s.useProgram(H),p=H,!0):!1}const pe={[$s]:32774,[Sv]:32778,[Ev]:32779};if(n)pe[kf]=32775,pe[Hf]=32776;else{const H=e.get("EXT_blend_minmax");H!==null&&(pe[kf]=H.MIN_EXT,pe[Hf]=H.MAX_EXT)}const De={[Tv]:0,[Av]:1,[Cv]:768,[sp]:770,[Bv]:776,[Iv]:774,[Lv]:772,[Rv]:769,[rp]:771,[Fv]:775,[Pv]:773};function re(H,ye,xe,Ie,_e,Fe,be,Ne){if(H===Bi){g===!0&&(Q(3042),g=!1);return}if(g===!1&&(ge(3042),g=!0),H!==Mv){if(H!==m||Ne!==E){if((v!==$s||_!==$s)&&(s.blendEquation(32774),v=$s,_=$s),Ne)switch(H){case nr:s.blendFuncSeparate(1,771,1,771);break;case Nf:s.blendFunc(1,1);break;case Of:s.blendFuncSeparate(0,769,0,1);break;case Uf:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}else switch(H){case nr:s.blendFuncSeparate(770,771,1,771);break;case Nf:s.blendFunc(770,1);break;case Of:s.blendFuncSeparate(0,769,0,1);break;case Uf:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}y=null,x=null,b=null,S=null,m=H,E=Ne}return}_e=_e||ye,Fe=Fe||xe,be=be||Ie,(ye!==v||_e!==_)&&(s.blendEquationSeparate(pe[ye],pe[_e]),v=ye,_=_e),(xe!==y||Ie!==x||Fe!==b||be!==S)&&(s.blendFuncSeparate(De[xe],De[Ie],De[Fe],De[be]),y=xe,x=Ie,b=Fe,S=be),m=H,E=null}function C(H,ye){H.side===ur?Q(2884):ge(2884);let xe=H.side===gn;ye&&(xe=!xe),B(xe),H.blending===nr&&H.transparent===!1?re(Bi):re(H.blending,H.blendEquation,H.blendSrc,H.blendDst,H.blendEquationAlpha,H.blendSrcAlpha,H.blendDstAlpha,H.premultipliedAlpha),l.setFunc(H.depthFunc),l.setTest(H.depthTest),l.setMask(H.depthWrite),a.setMask(H.colorWrite);const Ie=H.stencilWrite;c.setTest(Ie),Ie&&(c.setMask(H.stencilWriteMask),c.setFunc(H.stencilFunc,H.stencilRef,H.stencilFuncMask),c.setOp(H.stencilFail,H.stencilZFail,H.stencilZPass)),J(H.polygonOffset,H.polygonOffsetFactor,H.polygonOffsetUnits),H.alphaToCoverage===!0?ge(32926):Q(32926)}function B(H){w!==H&&(H?s.frontFace(2304):s.frontFace(2305),w=H)}function W(H){H!==wv?(ge(2884),H!==A&&(H===zf?s.cullFace(1029):H===bv?s.cullFace(1028):s.cullFace(1032))):Q(2884),A=H}function $(H){H!==L&&(I&&s.lineWidth(H),L=H)}function J(H,ye,xe){H?(ge(32823),(N!==ye||k!==xe)&&(s.polygonOffset(ye,xe),N=ye,k=xe)):Q(32823)}function ne(H){H?ge(3089):Q(3089)}function se(H){H===void 0&&(H=33984+O-1),j!==H&&(s.activeTexture(H),j=H)}function ce(H,ye){j===null&&se();let xe=G[j];xe===void 0&&(xe={type:void 0,texture:void 0},G[j]=xe),(xe.type!==H||xe.texture!==ye)&&(s.bindTexture(H,ye||me[H]),xe.type=H,xe.texture=ye)}function he(){const H=G[j];H!==void 0&&H.type!==void 0&&(s.bindTexture(H.type,null),H.type=void 0,H.texture=void 0)}function R(){try{s.compressedTexImage2D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function T(){try{s.texSubImage2D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function q(){try{s.texSubImage3D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Z(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function oe(){try{s.texStorage2D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function de(){try{s.texStorage3D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Se(){try{s.texImage2D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function F(){try{s.texImage3D.apply(s,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function le(H){te.equals(H)===!1&&(s.scissor(H.x,H.y,H.z,H.w),te.copy(H))}function Ce(H){X.equals(H)===!1&&(s.viewport(H.x,H.y,H.z,H.w),X.copy(H))}function ve(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),u={},j=null,G={},h={},f=new WeakMap,d=[],p=null,g=!1,m=null,v=null,y=null,x=null,_=null,b=null,S=null,E=!1,w=null,A=null,L=null,N=null,k=null,te.set(0,0,s.canvas.width,s.canvas.height),X.set(0,0,s.canvas.width,s.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:ge,disable:Q,bindFramebuffer:Pe,drawBuffers:Ae,useProgram:Be,setBlending:re,setMaterial:C,setFlipSided:B,setCullFace:W,setLineWidth:$,setPolygonOffset:J,setScissorTest:ne,activeTexture:se,bindTexture:ce,unbindTexture:he,compressedTexImage2D:R,texImage2D:Se,texImage3D:F,texStorage2D:oe,texStorage3D:de,texSubImage2D:T,texSubImage3D:q,compressedTexSubImage2D:Z,scissor:le,viewport:Ce,reset:ve}}function fL(s,e,t,n,i,r,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let g;const m=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(R,T){return v?new OffscreenCanvas(R,T):Ka("canvas")}function x(R,T,q,Z){let oe=1;if((R.width>Z||R.height>Z)&&(oe=Z/Math.max(R.width,R.height)),oe<1||T===!0)if(typeof HTMLImageElement!="undefined"&&R instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&R instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&R instanceof ImageBitmap){const de=T?mu:Math.floor,Se=de(oe*R.width),F=de(oe*R.height);g===void 0&&(g=y(Se,F));const le=q?y(Se,F):g;return le.width=Se,le.height=F,le.getContext("2d").drawImage(R,0,0,Se,F),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+R.width+"x"+R.height+") to ("+Se+"x"+F+")."),le}else return"data"in R&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+R.width+"x"+R.height+")."),R;return R}function _(R){return ud(R.width)&&ud(R.height)}function b(R){return a?!1:R.wrapS!==qt||R.wrapT!==qt||R.minFilter!==It&&R.minFilter!==St}function S(R,T){return R.generateMipmaps&&T&&R.minFilter!==It&&R.minFilter!==St}function E(R){s.generateMipmap(R)}function w(R,T,q,Z,oe=!1){if(a===!1)return T;if(R!==null){if(s[R]!==void 0)return s[R];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+R+"'")}let de=T;return T===6403&&(q===5126&&(de=33326),q===5131&&(de=33325),q===5121&&(de=33321)),T===33319&&(q===5126&&(de=33328),q===5131&&(de=33327),q===5121&&(de=33323)),T===6408&&(q===5126&&(de=34836),q===5131&&(de=34842),q===5121&&(de=Z===it&&oe===!1?35907:32856),q===32819&&(de=32854),q===32820&&(de=32855)),(de===33325||de===33326||de===33327||de===33328||de===34842||de===34836)&&e.get("EXT_color_buffer_float"),de}function A(R,T,q){return S(R,q)===!0||R.isFramebufferTexture&&R.minFilter!==It&&R.minFilter!==St?Math.log2(Math.max(T.width,T.height))+1:R.mipmaps!==void 0&&R.mipmaps.length>0?R.mipmaps.length:R.isCompressedTexture&&Array.isArray(R.image)?T.mipmaps.length:1}function L(R){return R===It||R===fu||R===du?9728:9729}function N(R){const T=R.target;T.removeEventListener("dispose",N),O(T),T.isVideoTexture&&p.delete(T)}function k(R){const T=R.target;T.removeEventListener("dispose",k),U(T)}function O(R){const T=n.get(R);if(T.__webglInit===void 0)return;const q=R.source,Z=m.get(q);if(Z){const oe=Z[T.__cacheKey];oe.usedTimes--,oe.usedTimes===0&&I(R),Object.keys(Z).length===0&&m.delete(q)}n.remove(R)}function I(R){const T=n.get(R);s.deleteTexture(T.__webglTexture);const q=R.source,Z=m.get(q);delete Z[T.__cacheKey],o.memory.textures--}function U(R){const T=R.texture,q=n.get(R),Z=n.get(T);if(Z.__webglTexture!==void 0&&(s.deleteTexture(Z.__webglTexture),o.memory.textures--),R.depthTexture&&R.depthTexture.dispose(),R.isWebGLCubeRenderTarget)for(let oe=0;oe<6;oe++)s.deleteFramebuffer(q.__webglFramebuffer[oe]),q.__webglDepthbuffer&&s.deleteRenderbuffer(q.__webglDepthbuffer[oe]);else s.deleteFramebuffer(q.__webglFramebuffer),q.__webglDepthbuffer&&s.deleteRenderbuffer(q.__webglDepthbuffer),q.__webglMultisampledFramebuffer&&s.deleteFramebuffer(q.__webglMultisampledFramebuffer),q.__webglColorRenderbuffer&&s.deleteRenderbuffer(q.__webglColorRenderbuffer),q.__webglDepthRenderbuffer&&s.deleteRenderbuffer(q.__webglDepthRenderbuffer);if(R.isWebGLMultipleRenderTargets)for(let oe=0,de=T.length;oe<de;oe++){const Se=n.get(T[oe]);Se.__webglTexture&&(s.deleteTexture(Se.__webglTexture),o.memory.textures--),n.remove(T[oe])}n.remove(T),n.remove(R)}let D=0;function j(){D=0}function G(){const R=D;return R>=l&&console.warn("THREE.WebGLTextures: Trying to use "+R+" texture units while this GPU supports only "+l),D+=1,R}function V(R){const T=[];return T.push(R.wrapS),T.push(R.wrapT),T.push(R.magFilter),T.push(R.minFilter),T.push(R.anisotropy),T.push(R.internalFormat),T.push(R.format),T.push(R.type),T.push(R.generateMipmaps),T.push(R.premultiplyAlpha),T.push(R.flipY),T.push(R.unpackAlignment),T.push(R.encoding),T.join()}function Y(R,T){const q=n.get(R);if(R.isVideoTexture&&ce(R),R.isRenderTargetTexture===!1&&R.version>0&&q.__version!==R.version){const Z=R.image;if(Z===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Z.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ae(q,R,T);return}}t.activeTexture(33984+T),t.bindTexture(3553,q.__webglTexture)}function te(R,T){const q=n.get(R);if(R.version>0&&q.__version!==R.version){Ae(q,R,T);return}t.activeTexture(33984+T),t.bindTexture(35866,q.__webglTexture)}function X(R,T){const q=n.get(R);if(R.version>0&&q.__version!==R.version){Ae(q,R,T);return}t.activeTexture(33984+T),t.bindTexture(32879,q.__webglTexture)}function ue(R,T){const q=n.get(R);if(R.version>0&&q.__version!==R.version){Be(q,R,T);return}t.activeTexture(33984+T),t.bindTexture(34067,q.__webglTexture)}const me={[hr]:10497,[qt]:33071,[ja]:33648},ge={[It]:9728,[fu]:9984,[du]:9986,[St]:9729,[op]:9985,[wr]:9987};function Q(R,T,q){if(q?(s.texParameteri(R,10242,me[T.wrapS]),s.texParameteri(R,10243,me[T.wrapT]),(R===32879||R===35866)&&s.texParameteri(R,32882,me[T.wrapR]),s.texParameteri(R,10240,ge[T.magFilter]),s.texParameteri(R,10241,ge[T.minFilter])):(s.texParameteri(R,10242,33071),s.texParameteri(R,10243,33071),(R===32879||R===35866)&&s.texParameteri(R,32882,33071),(T.wrapS!==qt||T.wrapT!==qt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(R,10240,L(T.magFilter)),s.texParameteri(R,10241,L(T.minFilter)),T.minFilter!==It&&T.minFilter!==St&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const Z=e.get("EXT_texture_filter_anisotropic");if(T.type===Li&&e.has("OES_texture_float_linear")===!1||a===!1&&T.type===_o&&e.has("OES_texture_half_float_linear")===!1)return;(T.anisotropy>1||n.get(T).__currentAnisotropy)&&(s.texParameterf(R,Z.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(T.anisotropy,i.getMaxAnisotropy())),n.get(T).__currentAnisotropy=T.anisotropy)}}function Pe(R,T){let q=!1;R.__webglInit===void 0&&(R.__webglInit=!0,T.addEventListener("dispose",N));const Z=T.source;let oe=m.get(Z);oe===void 0&&(oe={},m.set(Z,oe));const de=V(T);if(de!==R.__cacheKey){oe[de]===void 0&&(oe[de]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,q=!0),oe[de].usedTimes++;const Se=oe[R.__cacheKey];Se!==void 0&&(oe[R.__cacheKey].usedTimes--,Se.usedTimes===0&&I(T)),R.__cacheKey=de,R.__webglTexture=oe[de].texture}return q}function Ae(R,T,q){let Z=3553;T.isDataArrayTexture&&(Z=35866),T.isData3DTexture&&(Z=32879);const oe=Pe(R,T),de=T.source;if(t.activeTexture(33984+q),t.bindTexture(Z,R.__webglTexture),de.version!==de.__currentVersion||oe===!0){s.pixelStorei(37440,T.flipY),s.pixelStorei(37441,T.premultiplyAlpha),s.pixelStorei(3317,T.unpackAlignment),s.pixelStorei(37443,0);const Se=b(T)&&_(T.image)===!1;let F=x(T.image,Se,!1,u);F=he(T,F);const le=_(F)||a,Ce=r.convert(T.format,T.encoding);let ve=r.convert(T.type),H=w(T.internalFormat,Ce,ve,T.encoding,T.isVideoTexture);Q(Z,T,le);let ye;const xe=T.mipmaps,Ie=a&&T.isVideoTexture!==!0,_e=R.__version===void 0||oe===!0,Fe=A(T,F,le);if(T.isDepthTexture)H=6402,a?T.type===Li?H=36012:T.type===Pa?H=33190:T.type===ir?H=35056:H=33189:T.type===Li&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),T.format===fs&&H===6402&&T.type!==xo&&T.type!==Pa&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),T.type=xo,ve=r.convert(T.type)),T.format===fr&&H===6402&&(H=34041,T.type!==ir&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),T.type=ir,ve=r.convert(T.type))),_e&&(Ie?t.texStorage2D(3553,1,H,F.width,F.height):t.texImage2D(3553,0,H,F.width,F.height,0,Ce,ve,null));else if(T.isDataTexture)if(xe.length>0&&le){Ie&&_e&&t.texStorage2D(3553,Fe,H,xe[0].width,xe[0].height);for(let be=0,Ne=xe.length;be<Ne;be++)ye=xe[be],Ie?t.texSubImage2D(3553,be,0,0,ye.width,ye.height,Ce,ve,ye.data):t.texImage2D(3553,be,H,ye.width,ye.height,0,Ce,ve,ye.data);T.generateMipmaps=!1}else Ie?(_e&&t.texStorage2D(3553,Fe,H,F.width,F.height),t.texSubImage2D(3553,0,0,0,F.width,F.height,Ce,ve,F.data)):t.texImage2D(3553,0,H,F.width,F.height,0,Ce,ve,F.data);else if(T.isCompressedTexture){Ie&&_e&&t.texStorage2D(3553,Fe,H,xe[0].width,xe[0].height);for(let be=0,Ne=xe.length;be<Ne;be++)ye=xe[be],T.format!==mn?Ce!==null?Ie?t.compressedTexSubImage2D(3553,be,0,0,ye.width,ye.height,Ce,ye.data):t.compressedTexImage2D(3553,be,H,ye.width,ye.height,0,ye.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ie?t.texSubImage2D(3553,be,0,0,ye.width,ye.height,Ce,ve,ye.data):t.texImage2D(3553,be,H,ye.width,ye.height,0,Ce,ve,ye.data)}else if(T.isDataArrayTexture)Ie?(_e&&t.texStorage3D(35866,Fe,H,F.width,F.height,F.depth),t.texSubImage3D(35866,0,0,0,0,F.width,F.height,F.depth,Ce,ve,F.data)):t.texImage3D(35866,0,H,F.width,F.height,F.depth,0,Ce,ve,F.data);else if(T.isData3DTexture)Ie?(_e&&t.texStorage3D(32879,Fe,H,F.width,F.height,F.depth),t.texSubImage3D(32879,0,0,0,0,F.width,F.height,F.depth,Ce,ve,F.data)):t.texImage3D(32879,0,H,F.width,F.height,F.depth,0,Ce,ve,F.data);else if(T.isFramebufferTexture){if(_e)if(Ie)t.texStorage2D(3553,Fe,H,F.width,F.height);else{let be=F.width,Ne=F.height;for(let at=0;at<Fe;at++)t.texImage2D(3553,at,H,be,Ne,0,Ce,ve,null),be>>=1,Ne>>=1}}else if(xe.length>0&&le){Ie&&_e&&t.texStorage2D(3553,Fe,H,xe[0].width,xe[0].height);for(let be=0,Ne=xe.length;be<Ne;be++)ye=xe[be],Ie?t.texSubImage2D(3553,be,0,0,Ce,ve,ye):t.texImage2D(3553,be,H,Ce,ve,ye);T.generateMipmaps=!1}else Ie?(_e&&t.texStorage2D(3553,Fe,H,F.width,F.height),t.texSubImage2D(3553,0,0,0,Ce,ve,F)):t.texImage2D(3553,0,H,Ce,ve,F);S(T,le)&&E(Z),de.__currentVersion=de.version,T.onUpdate&&T.onUpdate(T)}R.__version=T.version}function Be(R,T,q){if(T.image.length!==6)return;const Z=Pe(R,T),oe=T.source;if(t.activeTexture(33984+q),t.bindTexture(34067,R.__webglTexture),oe.version!==oe.__currentVersion||Z===!0){s.pixelStorei(37440,T.flipY),s.pixelStorei(37441,T.premultiplyAlpha),s.pixelStorei(3317,T.unpackAlignment),s.pixelStorei(37443,0);const de=T.isCompressedTexture||T.image[0].isCompressedTexture,Se=T.image[0]&&T.image[0].isDataTexture,F=[];for(let be=0;be<6;be++)!de&&!Se?F[be]=x(T.image[be],!1,!0,c):F[be]=Se?T.image[be].image:T.image[be],F[be]=he(T,F[be]);const le=F[0],Ce=_(le)||a,ve=r.convert(T.format,T.encoding),H=r.convert(T.type),ye=w(T.internalFormat,ve,H,T.encoding),xe=a&&T.isVideoTexture!==!0,Ie=R.__version===void 0;let _e=A(T,le,Ce);Q(34067,T,Ce);let Fe;if(de){xe&&Ie&&t.texStorage2D(34067,_e,ye,le.width,le.height);for(let be=0;be<6;be++){Fe=F[be].mipmaps;for(let Ne=0;Ne<Fe.length;Ne++){const at=Fe[Ne];T.format!==mn?ve!==null?xe?t.compressedTexSubImage2D(34069+be,Ne,0,0,at.width,at.height,ve,at.data):t.compressedTexImage2D(34069+be,Ne,ye,at.width,at.height,0,at.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):xe?t.texSubImage2D(34069+be,Ne,0,0,at.width,at.height,ve,H,at.data):t.texImage2D(34069+be,Ne,ye,at.width,at.height,0,ve,H,at.data)}}}else{Fe=T.mipmaps,xe&&Ie&&(Fe.length>0&&_e++,t.texStorage2D(34067,_e,ye,F[0].width,F[0].height));for(let be=0;be<6;be++)if(Se){xe?t.texSubImage2D(34069+be,0,0,0,F[be].width,F[be].height,ve,H,F[be].data):t.texImage2D(34069+be,0,ye,F[be].width,F[be].height,0,ve,H,F[be].data);for(let Ne=0;Ne<Fe.length;Ne++){const Ye=Fe[Ne].image[be].image;xe?t.texSubImage2D(34069+be,Ne+1,0,0,Ye.width,Ye.height,ve,H,Ye.data):t.texImage2D(34069+be,Ne+1,ye,Ye.width,Ye.height,0,ve,H,Ye.data)}}else{xe?t.texSubImage2D(34069+be,0,0,0,ve,H,F[be]):t.texImage2D(34069+be,0,ye,ve,H,F[be]);for(let Ne=0;Ne<Fe.length;Ne++){const at=Fe[Ne];xe?t.texSubImage2D(34069+be,Ne+1,0,0,ve,H,at.image[be]):t.texImage2D(34069+be,Ne+1,ye,ve,H,at.image[be])}}}S(T,Ce)&&E(34067),oe.__currentVersion=oe.version,T.onUpdate&&T.onUpdate(T)}R.__version=T.version}function pe(R,T,q,Z,oe){const de=r.convert(q.format,q.encoding),Se=r.convert(q.type),F=w(q.internalFormat,de,Se,q.encoding);n.get(T).__hasExternalTextures||(oe===32879||oe===35866?t.texImage3D(oe,0,F,T.width,T.height,T.depth,0,de,Se,null):t.texImage2D(oe,0,F,T.width,T.height,0,de,Se,null)),t.bindFramebuffer(36160,R),se(T)?f.framebufferTexture2DMultisampleEXT(36160,Z,oe,n.get(q).__webglTexture,0,ne(T)):s.framebufferTexture2D(36160,Z,oe,n.get(q).__webglTexture,0),t.bindFramebuffer(36160,null)}function De(R,T,q){if(s.bindRenderbuffer(36161,R),T.depthBuffer&&!T.stencilBuffer){let Z=33189;if(q||se(T)){const oe=T.depthTexture;oe&&oe.isDepthTexture&&(oe.type===Li?Z=36012:oe.type===Pa&&(Z=33190));const de=ne(T);se(T)?f.renderbufferStorageMultisampleEXT(36161,de,Z,T.width,T.height):s.renderbufferStorageMultisample(36161,de,Z,T.width,T.height)}else s.renderbufferStorage(36161,Z,T.width,T.height);s.framebufferRenderbuffer(36160,36096,36161,R)}else if(T.depthBuffer&&T.stencilBuffer){const Z=ne(T);q&&se(T)===!1?s.renderbufferStorageMultisample(36161,Z,35056,T.width,T.height):se(T)?f.renderbufferStorageMultisampleEXT(36161,Z,35056,T.width,T.height):s.renderbufferStorage(36161,34041,T.width,T.height),s.framebufferRenderbuffer(36160,33306,36161,R)}else{const Z=T.isWebGLMultipleRenderTargets===!0?T.texture[0]:T.texture,oe=r.convert(Z.format,Z.encoding),de=r.convert(Z.type),Se=w(Z.internalFormat,oe,de,Z.encoding),F=ne(T);q&&se(T)===!1?s.renderbufferStorageMultisample(36161,F,Se,T.width,T.height):se(T)?f.renderbufferStorageMultisampleEXT(36161,F,Se,T.width,T.height):s.renderbufferStorage(36161,Se,T.width,T.height)}s.bindRenderbuffer(36161,null)}function re(R,T){if(T&&T.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,R),!(T.depthTexture&&T.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(T.depthTexture).__webglTexture||T.depthTexture.image.width!==T.width||T.depthTexture.image.height!==T.height)&&(T.depthTexture.image.width=T.width,T.depthTexture.image.height=T.height,T.depthTexture.needsUpdate=!0),Y(T.depthTexture,0);const Z=n.get(T.depthTexture).__webglTexture,oe=ne(T);if(T.depthTexture.format===fs)se(T)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,Z,0,oe):s.framebufferTexture2D(36160,36096,3553,Z,0);else if(T.depthTexture.format===fr)se(T)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,Z,0,oe):s.framebufferTexture2D(36160,33306,3553,Z,0);else throw new Error("Unknown depthTexture format")}function C(R){const T=n.get(R),q=R.isWebGLCubeRenderTarget===!0;if(R.depthTexture&&!T.__autoAllocateDepthBuffer){if(q)throw new Error("target.depthTexture not supported in Cube render targets");re(T.__webglFramebuffer,R)}else if(q){T.__webglDepthbuffer=[];for(let Z=0;Z<6;Z++)t.bindFramebuffer(36160,T.__webglFramebuffer[Z]),T.__webglDepthbuffer[Z]=s.createRenderbuffer(),De(T.__webglDepthbuffer[Z],R,!1)}else t.bindFramebuffer(36160,T.__webglFramebuffer),T.__webglDepthbuffer=s.createRenderbuffer(),De(T.__webglDepthbuffer,R,!1);t.bindFramebuffer(36160,null)}function B(R,T,q){const Z=n.get(R);T!==void 0&&pe(Z.__webglFramebuffer,R,R.texture,36064,3553),q!==void 0&&C(R)}function W(R){const T=R.texture,q=n.get(R),Z=n.get(T);R.addEventListener("dispose",k),R.isWebGLMultipleRenderTargets!==!0&&(Z.__webglTexture===void 0&&(Z.__webglTexture=s.createTexture()),Z.__version=T.version,o.memory.textures++);const oe=R.isWebGLCubeRenderTarget===!0,de=R.isWebGLMultipleRenderTargets===!0,Se=_(R)||a;if(oe){q.__webglFramebuffer=[];for(let F=0;F<6;F++)q.__webglFramebuffer[F]=s.createFramebuffer()}else if(q.__webglFramebuffer=s.createFramebuffer(),de)if(i.drawBuffers){const F=R.texture;for(let le=0,Ce=F.length;le<Ce;le++){const ve=n.get(F[le]);ve.__webglTexture===void 0&&(ve.__webglTexture=s.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(a&&R.samples>0&&se(R)===!1){q.__webglMultisampledFramebuffer=s.createFramebuffer(),q.__webglColorRenderbuffer=s.createRenderbuffer(),s.bindRenderbuffer(36161,q.__webglColorRenderbuffer);const F=r.convert(T.format,T.encoding),le=r.convert(T.type),Ce=w(T.internalFormat,F,le,T.encoding),ve=ne(R);s.renderbufferStorageMultisample(36161,ve,Ce,R.width,R.height),t.bindFramebuffer(36160,q.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064,36161,q.__webglColorRenderbuffer),s.bindRenderbuffer(36161,null),R.depthBuffer&&(q.__webglDepthRenderbuffer=s.createRenderbuffer(),De(q.__webglDepthRenderbuffer,R,!0)),t.bindFramebuffer(36160,null)}if(oe){t.bindTexture(34067,Z.__webglTexture),Q(34067,T,Se);for(let F=0;F<6;F++)pe(q.__webglFramebuffer[F],R,T,36064,34069+F);S(T,Se)&&E(34067),t.unbindTexture()}else if(de){const F=R.texture;for(let le=0,Ce=F.length;le<Ce;le++){const ve=F[le],H=n.get(ve);t.bindTexture(3553,H.__webglTexture),Q(3553,ve,Se),pe(q.__webglFramebuffer,R,ve,36064+le,3553),S(ve,Se)&&E(3553)}t.unbindTexture()}else{let F=3553;(R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(a?F=R.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(F,Z.__webglTexture),Q(F,T,Se),pe(q.__webglFramebuffer,R,T,36064,F),S(T,Se)&&E(F),t.unbindTexture()}R.depthBuffer&&C(R)}function $(R){const T=_(R)||a,q=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let Z=0,oe=q.length;Z<oe;Z++){const de=q[Z];if(S(de,T)){const Se=R.isWebGLCubeRenderTarget?34067:3553,F=n.get(de).__webglTexture;t.bindTexture(Se,F),E(Se),t.unbindTexture()}}}function J(R){if(a&&R.samples>0&&se(R)===!1){const T=R.width,q=R.height;let Z=16384;const oe=[36064],de=R.stencilBuffer?33306:36096;R.depthBuffer&&oe.push(de);const Se=n.get(R),F=Se.__ignoreDepthValues!==void 0?Se.__ignoreDepthValues:!1;F===!1&&(R.depthBuffer&&(Z|=256),R.stencilBuffer&&(Z|=1024)),t.bindFramebuffer(36008,Se.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Se.__webglFramebuffer),F===!0&&(s.invalidateFramebuffer(36008,[de]),s.invalidateFramebuffer(36009,[de])),s.blitFramebuffer(0,0,T,q,0,0,T,q,Z,9728),d&&s.invalidateFramebuffer(36008,oe),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,Se.__webglMultisampledFramebuffer)}}function ne(R){return Math.min(h,R.samples)}function se(R){const T=n.get(R);return a&&R.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&T.__useRenderToTexture!==!1}function ce(R){const T=o.render.frame;p.get(R)!==T&&(p.set(R,T),R.update())}function he(R,T){const q=R.encoding,Z=R.format,oe=R.type;return R.isCompressedTexture===!0||R.isVideoTexture===!0||R.format===pu||q!==Ni&&(q===it?a===!1?e.has("EXT_sRGB")===!0&&Z===mn?(R.format=pu,R.minFilter=St,R.generateMipmaps=!1):T=Ts.sRGBToLinear(T):(Z!==mn||oe!==xs)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",q)),T}this.allocateTextureUnit=G,this.resetTextureUnits=j,this.setTexture2D=Y,this.setTexture2DArray=te,this.setTexture3D=X,this.setTextureCube=ue,this.rebindTextures=B,this.setupRenderTarget=W,this.updateRenderTargetMipmap=$,this.updateMultisampleRenderTarget=J,this.setupDepthRenderbuffer=C,this.setupFrameBufferTexture=pe,this.useMultisampledRTT=se}function kx(s,e,t){const n=t.isWebGL2;function i(r,o=null){let a;if(r===xs)return 5121;if(r===Jv)return 32819;if(r===Qv)return 32820;if(r===Yv)return 5120;if(r===Zv)return 5122;if(r===xo)return 5123;if(r===Kv)return 5124;if(r===Pa)return 5125;if(r===Li)return 5126;if(r===_o)return n?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===ex)return 6406;if(r===mn)return 6408;if(r===nx)return 6409;if(r===ix)return 6410;if(r===fs)return 6402;if(r===fr)return 34041;if(r===sx)return 6403;if(r===tx)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===pu)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===rx)return 36244;if(r===ox)return 33319;if(r===ax)return 33320;if(r===lx)return 36249;if(r===Gc||r===Wc||r===qc||r===jc)if(o===it)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===Gc)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Wc)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===qc)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===jc)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===Gc)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Wc)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===qc)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===jc)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Vf||r===Gf||r===Wf||r===qf)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===Vf)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Gf)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Wf)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===qf)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===cx)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===jf||r===Xf)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(r===jf)return o===it?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===Xf)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===$f||r===Yf||r===Zf||r===Kf||r===Jf||r===Qf||r===ed||r===td||r===nd||r===id||r===sd||r===rd||r===od||r===ad)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(r===$f)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===Yf)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Zf)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Kf)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Jf)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Qf)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===ed)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===td)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===nd)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===id)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===sd)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===rd)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===od)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===ad)return o===it?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===ld)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(r===ld)return o===it?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return r===ir?n?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class up extends Ft{constructor(e=[]){super(),this.cameras=e}}up.prototype.isArrayCamera=!0;class Pi extends Ve{constructor(){super(),this.type="Group"}}Pi.prototype.isGroup=!0;const dL={type:"move"};class Yh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Pi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Pi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new P,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new P),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Pi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new P,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new P),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(a!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(dL))),c&&e.hand){o=!0;for(const g of e.hand.values()){const m=t.getJointPose(g,n);if(c.joints[g.jointName]===void 0){const y=new Pi;y.matrixAutoUpdate=!1,y.visible=!1,c.joints[g.jointName]=y,c.add(y)}const v=c.joints[g.jointName];m!==null&&(v.matrix.fromArray(m.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=m.radius),v.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}}class hp extends _t{constructor(e,t,n,i,r,o,a,l,c,u){if(u=u!==void 0?u:fs,u!==fs&&u!==fr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===fs&&(n=xo),n===void 0&&u===fr&&(n=ir),super(null,i,r,o,a,l,u,n,c),this.image={width:e,height:t},this.magFilter=a!==void 0?a:It,this.minFilter=l!==void 0?l:It,this.flipY=!1,this.generateMipmaps=!1}}hp.prototype.isDepthTexture=!0;class pL extends Gi{constructor(e,t){super();const n=this;let i=null,r=1,o=null,a="local-floor",l=null,c=null,u=null,h=null,f=null,d=null;const p=t.getContextAttributes();let g=null,m=null;const v=[],y=new Map,x=new Ft;x.layers.enable(1),x.viewport=new Je;const _=new Ft;_.layers.enable(2),_.viewport=new Je;const b=[x,_],S=new up;S.layers.enable(1),S.layers.enable(2);let E=null,w=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(V){let Y=v[V];return Y===void 0&&(Y=new Yh,v[V]=Y),Y.getTargetRaySpace()},this.getControllerGrip=function(V){let Y=v[V];return Y===void 0&&(Y=new Yh,v[V]=Y),Y.getGripSpace()},this.getHand=function(V){let Y=v[V];return Y===void 0&&(Y=new Yh,v[V]=Y),Y.getHandSpace()};function A(V){const Y=y.get(V.inputSource);Y&&Y.dispatchEvent({type:V.type,data:V.inputSource})}function L(){y.forEach(function(V,Y){V.disconnect(Y)}),y.clear(),E=null,w=null,e.setRenderTarget(g),f=null,h=null,u=null,i=null,m=null,G.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(V){r=V,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(V){a=V,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(V){l=V},this.getBaseLayer=function(){return h!==null?h:f},this.getBinding=function(){return u},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(V){if(i=V,i!==null){if(g=e.getRenderTarget(),i.addEventListener("select",A),i.addEventListener("selectstart",A),i.addEventListener("selectend",A),i.addEventListener("squeeze",A),i.addEventListener("squeezestart",A),i.addEventListener("squeezeend",A),i.addEventListener("end",L),i.addEventListener("inputsourceschange",N),p.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Y={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(i,t,Y),i.updateRenderState({baseLayer:f}),m=new en(f.framebufferWidth,f.framebufferHeight,{format:mn,type:xs,encoding:e.outputEncoding})}else{let Y=null,te=null,X=null;p.depth&&(X=p.stencil?35056:33190,Y=p.stencil?fr:fs,te=p.stencil?ir:xo);const ue={colorFormat:e.outputEncoding===it?35907:32856,depthFormat:X,scaleFactor:r};u=new XRWebGLBinding(i,t),h=u.createProjectionLayer(ue),i.updateRenderState({layers:[h]}),m=new en(h.textureWidth,h.textureHeight,{format:mn,type:xs,depthTexture:new hp(h.textureWidth,h.textureHeight,te,void 0,void 0,void 0,void 0,void 0,void 0,Y),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});const me=e.properties.get(m);me.__ignoreDepthValues=h.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),o=await i.requestReferenceSpace(a),G.setContext(i),G.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function N(V){const Y=i.inputSources;for(let te=0;te<Y.length;te++){const X=Y[te].handedness==="right"?1:0;y.set(Y[te],v[X])}for(let te=0;te<V.removed.length;te++){const X=V.removed[te],ue=y.get(X);ue&&(ue.dispatchEvent({type:"disconnected",data:X}),y.delete(X))}for(let te=0;te<V.added.length;te++){const X=V.added[te],ue=y.get(X);ue&&ue.dispatchEvent({type:"connected",data:X})}}const k=new P,O=new P;function I(V,Y,te){k.setFromMatrixPosition(Y.matrixWorld),O.setFromMatrixPosition(te.matrixWorld);const X=k.distanceTo(O),ue=Y.projectionMatrix.elements,me=te.projectionMatrix.elements,ge=ue[14]/(ue[10]-1),Q=ue[14]/(ue[10]+1),Pe=(ue[9]+1)/ue[5],Ae=(ue[9]-1)/ue[5],Be=(ue[8]-1)/ue[0],pe=(me[8]+1)/me[0],De=ge*Be,re=ge*pe,C=X/(-Be+pe),B=C*-Be;Y.matrixWorld.decompose(V.position,V.quaternion,V.scale),V.translateX(B),V.translateZ(C),V.matrixWorld.compose(V.position,V.quaternion,V.scale),V.matrixWorldInverse.copy(V.matrixWorld).invert();const W=ge+C,$=Q+C,J=De-B,ne=re+(X-B),se=Pe*Q/$*W,ce=Ae*Q/$*W;V.projectionMatrix.makePerspective(J,ne,se,ce,W,$)}function U(V,Y){Y===null?V.matrixWorld.copy(V.matrix):V.matrixWorld.multiplyMatrices(Y.matrixWorld,V.matrix),V.matrixWorldInverse.copy(V.matrixWorld).invert()}this.updateCamera=function(V){if(i===null)return;S.near=_.near=x.near=V.near,S.far=_.far=x.far=V.far,(E!==S.near||w!==S.far)&&(i.updateRenderState({depthNear:S.near,depthFar:S.far}),E=S.near,w=S.far);const Y=V.parent,te=S.cameras;U(S,Y);for(let ue=0;ue<te.length;ue++)U(te[ue],Y);S.matrixWorld.decompose(S.position,S.quaternion,S.scale),V.position.copy(S.position),V.quaternion.copy(S.quaternion),V.scale.copy(S.scale),V.matrix.copy(S.matrix),V.matrixWorld.copy(S.matrixWorld);const X=V.children;for(let ue=0,me=X.length;ue<me;ue++)X[ue].updateMatrixWorld(!0);te.length===2?I(S,x,_):S.projectionMatrix.copy(x.projectionMatrix)},this.getCamera=function(){return S},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(V){h!==null&&(h.fixedFoveation=V),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=V)};let D=null;function j(V,Y){if(c=Y.getViewerPose(l||o),d=Y,c!==null){const X=c.views;f!==null&&(e.setRenderTargetFramebuffer(m,f.framebuffer),e.setRenderTarget(m));let ue=!1;X.length!==S.cameras.length&&(S.cameras.length=0,ue=!0);for(let me=0;me<X.length;me++){const ge=X[me];let Q=null;if(f!==null)Q=f.getViewport(ge);else{const Ae=u.getViewSubImage(h,ge);Q=Ae.viewport,me===0&&(e.setRenderTargetTextures(m,Ae.colorTexture,h.ignoreDepthValues?void 0:Ae.depthStencilTexture),e.setRenderTarget(m))}const Pe=b[me];Pe.matrix.fromArray(ge.transform.matrix),Pe.projectionMatrix.fromArray(ge.projectionMatrix),Pe.viewport.set(Q.x,Q.y,Q.width,Q.height),me===0&&S.matrix.copy(Pe.matrix),ue===!0&&S.cameras.push(Pe)}}const te=i.inputSources;for(let X=0;X<v.length;X++){const ue=te[X],me=y.get(ue);me!==void 0&&me.update(ue,Y,l||o)}D&&D(V,Y),d=null}const G=new Ix;G.setAnimationLoop(j),this.setAnimationLoop=function(V){D=V},this.dispose=function(){}}}function mL(s,e){function t(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,v,y,x){m.isMeshBasicMaterial||m.isMeshLambertMaterial?i(g,m):m.isMeshToonMaterial?(i(g,m),u(g,m)):m.isMeshPhongMaterial?(i(g,m),c(g,m)):m.isMeshStandardMaterial?(i(g,m),h(g,m),m.isMeshPhysicalMaterial&&f(g,m,x)):m.isMeshMatcapMaterial?(i(g,m),d(g,m)):m.isMeshDepthMaterial?i(g,m):m.isMeshDistanceMaterial?(i(g,m),p(g,m)):m.isMeshNormalMaterial?i(g,m):m.isLineBasicMaterial?(r(g,m),m.isLineDashedMaterial&&o(g,m)):m.isPointsMaterial?a(g,m,v,y):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===gn&&(g.bumpScale.value*=-1)),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===gn&&g.normalScale.value.negate()),m.specularMap&&(g.specularMap.value=m.specularMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const v=e.get(m).envMap;if(v&&(g.envMap.value=v,g.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap){g.lightMap.value=m.lightMap;const _=s.physicallyCorrectLights!==!0?Math.PI:1;g.lightMapIntensity.value=m.lightMapIntensity*_}m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let y;m.map?y=m.map:m.specularMap?y=m.specularMap:m.displacementMap?y=m.displacementMap:m.normalMap?y=m.normalMap:m.bumpMap?y=m.bumpMap:m.roughnessMap?y=m.roughnessMap:m.metalnessMap?y=m.metalnessMap:m.alphaMap?y=m.alphaMap:m.emissiveMap?y=m.emissiveMap:m.clearcoatMap?y=m.clearcoatMap:m.clearcoatNormalMap?y=m.clearcoatNormalMap:m.clearcoatRoughnessMap?y=m.clearcoatRoughnessMap:m.specularIntensityMap?y=m.specularIntensityMap:m.specularColorMap?y=m.specularColorMap:m.transmissionMap?y=m.transmissionMap:m.thicknessMap?y=m.thicknessMap:m.sheenColorMap?y=m.sheenColorMap:m.sheenRoughnessMap&&(y=m.sheenRoughnessMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),g.uvTransform.value.copy(y.matrix));let x;m.aoMap?x=m.aoMap:m.lightMap&&(x=m.lightMap),x!==void 0&&(x.isWebGLRenderTarget&&(x=x.texture),x.matrixAutoUpdate===!0&&x.updateMatrix(),g.uv2Transform.value.copy(x.matrix))}function r(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function o(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function a(g,m,v,y){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*v,g.scale.value=y*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let x;m.map?x=m.map:m.alphaMap&&(x=m.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),g.uvTransform.value.copy(x.matrix))}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let v;m.map?v=m.map:m.alphaMap&&(v=m.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),g.uvTransform.value.copy(v.matrix))}function c(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function h(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),e.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m,v){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===gn&&g.clearcoatNormalScale.value.negate())),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=v.texture,g.transmissionSamplerSize.value.set(v.width,v.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap)}function d(g,m){m.matcap&&(g.matcap.value=m.matcap)}function p(g,m){g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function gL(){const s=Ka("canvas");return s.style.display="block",s}function ot(s={}){const e=s.canvas!==void 0?s.canvas:gL(),t=s.context!==void 0?s.context:null,n=s.depth!==void 0?s.depth:!0,i=s.stencil!==void 0?s.stencil:!0,r=s.antialias!==void 0?s.antialias:!1,o=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,a=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,l=s.powerPreference!==void 0?s.powerPreference:"default",c=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=s.alpha!==void 0?s.alpha:!1;let h=null,f=null;const d=[],p=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Ni,this.physicallyCorrectLights=!1,this.toneMapping=oi,this.toneMappingExposure=1;const g=this;let m=!1,v=0,y=0,x=null,_=-1,b=null;const S=new Je,E=new Je;let w=null,A=e.width,L=e.height,N=1,k=null,O=null;const I=new Je(0,0,A,L),U=new Je(0,0,A,L);let D=!1;const j=new dl;let G=!1,V=!1,Y=null;const te=new we,X=new ae,ue=new P,me={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ge(){return x===null?N:1}let Q=t;function Pe(z,K){for(let ie=0;ie<z.length;ie++){const ee=z[ie],fe=e.getContext(ee,K);if(fe!==null)return fe}return null}try{const z={alpha:!0,depth:n,stencil:i,antialias:r,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Du}`),e.addEventListener("webglcontextlost",H,!1),e.addEventListener("webglcontextrestored",ye,!1),Q===null){const K=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&K.shift(),Q=Pe(K,z),Q===null)throw Pe(K)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Q.getShaderPrecisionFormat===void 0&&(Q.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(z){throw console.error("THREE.WebGLRenderer: "+z.message),z}let Ae,Be,pe,De,re,C,B,W,$,J,ne,se,ce,he,R,T,q,Z,oe,de,Se,F,le;function Ce(){Ae=new BR(Q),Be=new CR(Q,Ae,s),Ae.init(Be),F=new kx(Q,Ae,Be),pe=new hL(Q,Ae,Be),De=new NR(Q),re=new eL,C=new fL(Q,Ae,pe,re,Be,F,De),B=new LR(g),W=new FR(g),$=new KT(Q,Be),le=new TR(Q,Ae,$,Be),J=new DR(Q,$,De,le),ne=new HR(Q,J,$,De),oe=new kR(Q,Be,C),T=new RR(re),se=new Q2(g,B,W,Ae,Be,le,T),ce=new mL(g,re),he=new nL,R=new lL(Ae,Be),Z=new ER(g,B,pe,ne,u,o),q=new Ux(g,ne,Be),de=new AR(Q,Ae,De,Be),Se=new zR(Q,Ae,De,Be),De.programs=se.programs,g.capabilities=Be,g.extensions=Ae,g.properties=re,g.renderLists=he,g.shadowMap=q,g.state=pe,g.info=De}Ce();const ve=new pL(g,Q);this.xr=ve,this.getContext=function(){return Q},this.getContextAttributes=function(){return Q.getContextAttributes()},this.forceContextLoss=function(){const z=Ae.get("WEBGL_lose_context");z&&z.loseContext()},this.forceContextRestore=function(){const z=Ae.get("WEBGL_lose_context");z&&z.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(z){z!==void 0&&(N=z,this.setSize(A,L,!1))},this.getSize=function(z){return z.set(A,L)},this.setSize=function(z,K,ie){if(ve.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}A=z,L=K,e.width=Math.floor(z*N),e.height=Math.floor(K*N),ie!==!1&&(e.style.width=z+"px",e.style.height=K+"px"),this.setViewport(0,0,z,K)},this.getDrawingBufferSize=function(z){return z.set(A*N,L*N).floor()},this.setDrawingBufferSize=function(z,K,ie){A=z,L=K,N=ie,e.width=Math.floor(z*ie),e.height=Math.floor(K*ie),this.setViewport(0,0,z,K)},this.getCurrentViewport=function(z){return z.copy(S)},this.getViewport=function(z){return z.copy(I)},this.setViewport=function(z,K,ie,ee){z.isVector4?I.set(z.x,z.y,z.z,z.w):I.set(z,K,ie,ee),pe.viewport(S.copy(I).multiplyScalar(N).floor())},this.getScissor=function(z){return z.copy(U)},this.setScissor=function(z,K,ie,ee){z.isVector4?U.set(z.x,z.y,z.z,z.w):U.set(z,K,ie,ee),pe.scissor(E.copy(U).multiplyScalar(N).floor())},this.getScissorTest=function(){return D},this.setScissorTest=function(z){pe.setScissorTest(D=z)},this.setOpaqueSort=function(z){k=z},this.setTransparentSort=function(z){O=z},this.getClearColor=function(z){return z.copy(Z.getClearColor())},this.setClearColor=function(){Z.setClearColor.apply(Z,arguments)},this.getClearAlpha=function(){return Z.getClearAlpha()},this.setClearAlpha=function(){Z.setClearAlpha.apply(Z,arguments)},this.clear=function(z=!0,K=!0,ie=!0){let ee=0;z&&(ee|=16384),K&&(ee|=256),ie&&(ee|=1024),Q.clear(ee)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",H,!1),e.removeEventListener("webglcontextrestored",ye,!1),he.dispose(),R.dispose(),re.dispose(),B.dispose(),W.dispose(),ne.dispose(),le.dispose(),se.dispose(),ve.dispose(),ve.removeEventListener("sessionstart",Ne),ve.removeEventListener("sessionend",at),Y&&(Y.dispose(),Y=null),Ye.stop()};function H(z){z.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function ye(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const z=De.autoReset,K=q.enabled,ie=q.autoUpdate,ee=q.needsUpdate,fe=q.type;Ce(),De.autoReset=z,q.enabled=K,q.autoUpdate=ie,q.needsUpdate=ee,q.type=fe}function xe(z){const K=z.target;K.removeEventListener("dispose",xe),Ie(K)}function Ie(z){_e(z),re.remove(z)}function _e(z){const K=re.get(z).programs;K!==void 0&&(K.forEach(function(ie){se.releaseProgram(ie)}),z.isShaderMaterial&&se.releaseShaderCache(z))}this.renderBufferDirect=function(z,K,ie,ee,fe,Oe){K===null&&(K=me);const He=fe.isMesh&&fe.matrixWorld.determinant()<0,We=Dw(z,K,ie,ee,fe);pe.setMaterial(ee,He);let Ge=ie.index;const lt=ie.attributes.position;if(Ge===null){if(lt===void 0||lt.count===0)return}else if(Ge.count===0)return;let et=1;ee.wireframe===!0&&(Ge=J.getWireframeAttribute(ie),et=2),le.setup(fe,ee,We,ie,Ge);let tt,yt=de;Ge!==null&&(tt=$.get(Ge),yt=Se,yt.setIndex(tt));const Ls=Ge!==null?Ge.count:lt.count,Rr=ie.drawRange.start*et,Lr=ie.drawRange.count*et,$n=Oe!==null?Oe.start*et:0,nt=Oe!==null?Oe.count*et:1/0,Pr=Math.max(Rr,$n),Rt=Math.min(Ls,Rr+Lr,$n+nt)-1,Yn=Math.max(0,Rt-Pr+1);if(Yn!==0){if(fe.isMesh)ee.wireframe===!0?(pe.setLineWidth(ee.wireframeLinewidth*ge()),yt.setMode(1)):yt.setMode(4);else if(fe.isLine){let ji=ee.linewidth;ji===void 0&&(ji=1),pe.setLineWidth(ji*ge()),fe.isLineSegments?yt.setMode(1):fe.isLineLoop?yt.setMode(2):yt.setMode(3)}else fe.isPoints?yt.setMode(0):fe.isSprite&&yt.setMode(4);if(fe.isInstancedMesh)yt.renderInstances(Pr,Yn,fe.count);else if(ie.isInstancedBufferGeometry){const ji=Math.min(ie.instanceCount,ie._maxInstanceCount);yt.renderInstances(Pr,Yn,ji)}else yt.render(Pr,Yn)}},this.compile=function(z,K){f=R.get(z),f.init(),p.push(f),z.traverseVisible(function(ie){ie.isLight&&ie.layers.test(K.layers)&&(f.pushLight(ie),ie.castShadow&&f.pushShadow(ie))}),f.setupLights(g.physicallyCorrectLights),z.traverse(function(ie){const ee=ie.material;if(ee)if(Array.isArray(ee))for(let fe=0;fe<ee.length;fe++){const Oe=ee[fe];ch(Oe,z,ie)}else ch(ee,z,ie)}),p.pop(),f=null};let Fe=null;function be(z){Fe&&Fe(z)}function Ne(){Ye.stop()}function at(){Ye.start()}const Ye=new Ix;Ye.setAnimationLoop(be),typeof self!="undefined"&&Ye.setContext(self),this.setAnimationLoop=function(z){Fe=z,ve.setAnimationLoop(z),z===null?Ye.stop():Ye.start()},ve.addEventListener("sessionstart",Ne),ve.addEventListener("sessionend",at),this.render=function(z,K){if(K!==void 0&&K.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;z.autoUpdate===!0&&z.updateMatrixWorld(),K.parent===null&&K.updateMatrixWorld(),ve.enabled===!0&&ve.isPresenting===!0&&(ve.cameraAutoUpdate===!0&&ve.updateCamera(K),K=ve.getCamera()),z.isScene===!0&&z.onBeforeRender(g,z,K,x),f=R.get(z,p.length),f.init(),p.push(f),te.multiplyMatrices(K.projectionMatrix,K.matrixWorldInverse),j.setFromProjectionMatrix(te),V=this.localClippingEnabled,G=T.init(this.clippingPlanes,V,K),h=he.get(z,d.length),h.init(),d.push(h),jn(z,K,0,g.sortObjects),h.finish(),g.sortObjects===!0&&h.sort(k,O),G===!0&&T.beginShadows();const ie=f.state.shadowsArray;if(q.render(ie,z,K),G===!0&&T.endShadows(),this.info.autoReset===!0&&this.info.reset(),Z.render(h,z),f.setupLights(g.physicallyCorrectLights),K.isArrayCamera){const ee=K.cameras;for(let fe=0,Oe=ee.length;fe<Oe;fe++){const He=ee[fe];Xn(h,z,He,He.viewport)}}else Xn(h,z,K);x!==null&&(C.updateMultisampleRenderTarget(x),C.updateRenderTargetMipmap(x)),z.isScene===!0&&z.onAfterRender(g,z,K),le.resetDefaultState(),_=-1,b=null,p.pop(),p.length>0?f=p[p.length-1]:f=null,d.pop(),d.length>0?h=d[d.length-1]:h=null};function jn(z,K,ie,ee){if(z.visible===!1)return;if(z.layers.test(K.layers)){if(z.isGroup)ie=z.renderOrder;else if(z.isLOD)z.autoUpdate===!0&&z.update(K);else if(z.isLight)f.pushLight(z),z.castShadow&&f.pushShadow(z);else if(z.isSprite){if(!z.frustumCulled||j.intersectsSprite(z)){ee&&ue.setFromMatrixPosition(z.matrixWorld).applyMatrix4(te);const He=ne.update(z),We=z.material;We.visible&&h.push(z,He,We,ie,ue.z,null)}}else if((z.isMesh||z.isLine||z.isPoints)&&(z.isSkinnedMesh&&z.skeleton.frame!==De.render.frame&&(z.skeleton.update(),z.skeleton.frame=De.render.frame),!z.frustumCulled||j.intersectsObject(z))){ee&&ue.setFromMatrixPosition(z.matrixWorld).applyMatrix4(te);const He=ne.update(z),We=z.material;if(Array.isArray(We)){const Ge=He.groups;for(let lt=0,et=Ge.length;lt<et;lt++){const tt=Ge[lt],yt=We[tt.materialIndex];yt&&yt.visible&&h.push(z,He,yt,ie,ue.z,tt)}}else We.visible&&h.push(z,He,We,ie,ue.z,null)}}const Oe=z.children;for(let He=0,We=Oe.length;He<We;He++)jn(Oe[He],K,ie,ee)}function Xn(z,K,ie,ee){const fe=z.opaque,Oe=z.transmissive,He=z.transparent;f.setupLightsView(ie),Oe.length>0&&Fw(fe,K,ie),ee&&pe.viewport(S.copy(ee)),fe.length>0&&Fl(fe,K,ie),Oe.length>0&&Fl(Oe,K,ie),He.length>0&&Fl(He,K,ie),pe.buffers.depth.setTest(!0),pe.buffers.depth.setMask(!0),pe.buffers.color.setMask(!0),pe.setPolygonOffset(!1)}function Fw(z,K,ie){const ee=Be.isWebGL2;Y===null&&(Y=new en(1,1,{generateMipmaps:!0,type:Ae.has("EXT_color_buffer_half_float")?_o:xs,minFilter:wr,samples:ee&&r===!0?4:0})),g.getDrawingBufferSize(X),ee?Y.setSize(X.x,X.y):Y.setSize(mu(X.x),mu(X.y));const fe=g.getRenderTarget();g.setRenderTarget(Y),g.clear();const Oe=g.toneMapping;g.toneMapping=oi,Fl(z,K,ie),g.toneMapping=Oe,C.updateMultisampleRenderTarget(Y),C.updateRenderTargetMipmap(Y),g.setRenderTarget(fe)}function Fl(z,K,ie){const ee=K.isScene===!0?K.overrideMaterial:null;for(let fe=0,Oe=z.length;fe<Oe;fe++){const He=z[fe],We=He.object,Ge=He.geometry,lt=ee===null?He.material:ee,et=He.group;We.layers.test(ie.layers)&&Bw(We,K,ie,Ge,lt,et)}}function Bw(z,K,ie,ee,fe,Oe){z.onBeforeRender(g,K,ie,ee,fe,Oe),z.modelViewMatrix.multiplyMatrices(ie.matrixWorldInverse,z.matrixWorld),z.normalMatrix.getNormalMatrix(z.modelViewMatrix),fe.onBeforeRender(g,K,ie,ee,z,Oe),fe.transparent===!0&&fe.side===ur?(fe.side=gn,fe.needsUpdate=!0,g.renderBufferDirect(ie,K,ee,fe,z,Oe),fe.side=cr,fe.needsUpdate=!0,g.renderBufferDirect(ie,K,ee,fe,z,Oe),fe.side=ur):g.renderBufferDirect(ie,K,ee,fe,z,Oe),z.onAfterRender(g,K,ie,ee,fe,Oe)}function ch(z,K,ie){K.isScene!==!0&&(K=me);const ee=re.get(z),fe=f.state.lights,Oe=f.state.shadowsArray,He=fe.state.version,We=se.getParameters(z,fe.state,Oe,K,ie),Ge=se.getProgramCacheKey(We);let lt=ee.programs;ee.environment=z.isMeshStandardMaterial?K.environment:null,ee.fog=K.fog,ee.envMap=(z.isMeshStandardMaterial?W:B).get(z.envMap||ee.environment),lt===void 0&&(z.addEventListener("dispose",xe),lt=new Map,ee.programs=lt);let et=lt.get(Ge);if(et!==void 0){if(ee.currentProgram===et&&ee.lightsStateVersion===He)return im(z,We),et}else We.uniforms=se.getUniforms(z),z.onBuild(ie,We,g),z.onBeforeCompile(We,g),et=se.acquireProgram(We,Ge),lt.set(Ge,et),ee.uniforms=We.uniforms;const tt=ee.uniforms;(!z.isShaderMaterial&&!z.isRawShaderMaterial||z.clipping===!0)&&(tt.clippingPlanes=T.uniform),im(z,We),ee.needsLights=Nw(z),ee.lightsStateVersion=He,ee.needsLights&&(tt.ambientLightColor.value=fe.state.ambient,tt.lightProbe.value=fe.state.probe,tt.directionalLights.value=fe.state.directional,tt.directionalLightShadows.value=fe.state.directionalShadow,tt.spotLights.value=fe.state.spot,tt.spotLightShadows.value=fe.state.spotShadow,tt.rectAreaLights.value=fe.state.rectArea,tt.ltc_1.value=fe.state.rectAreaLTC1,tt.ltc_2.value=fe.state.rectAreaLTC2,tt.pointLights.value=fe.state.point,tt.pointLightShadows.value=fe.state.pointShadow,tt.hemisphereLights.value=fe.state.hemi,tt.directionalShadowMap.value=fe.state.directionalShadowMap,tt.directionalShadowMatrix.value=fe.state.directionalShadowMatrix,tt.spotShadowMap.value=fe.state.spotShadowMap,tt.spotShadowMatrix.value=fe.state.spotShadowMatrix,tt.pointShadowMap.value=fe.state.pointShadowMap,tt.pointShadowMatrix.value=fe.state.pointShadowMatrix);const yt=et.getUniforms(),Ls=ds.seqWithValue(yt.seq,tt);return ee.currentProgram=et,ee.uniformsList=Ls,et}function im(z,K){const ie=re.get(z);ie.outputEncoding=K.outputEncoding,ie.instancing=K.instancing,ie.skinning=K.skinning,ie.morphTargets=K.morphTargets,ie.morphNormals=K.morphNormals,ie.morphColors=K.morphColors,ie.morphTargetsCount=K.morphTargetsCount,ie.numClippingPlanes=K.numClippingPlanes,ie.numIntersection=K.numClipIntersection,ie.vertexAlphas=K.vertexAlphas,ie.vertexTangents=K.vertexTangents,ie.toneMapping=K.toneMapping}function Dw(z,K,ie,ee,fe){K.isScene!==!0&&(K=me),C.resetTextureUnits();const Oe=K.fog,He=ee.isMeshStandardMaterial?K.environment:null,We=x===null?g.outputEncoding:x.isXRRenderTarget===!0?x.texture.encoding:Ni,Ge=(ee.isMeshStandardMaterial?W:B).get(ee.envMap||He),lt=ee.vertexColors===!0&&!!ie.attributes.color&&ie.attributes.color.itemSize===4,et=!!ee.normalMap&&!!ie.attributes.tangent,tt=!!ie.morphAttributes.position,yt=!!ie.morphAttributes.normal,Ls=!!ie.morphAttributes.color,Rr=ee.toneMapped?g.toneMapping:oi,Lr=ie.morphAttributes.position||ie.morphAttributes.normal||ie.morphAttributes.color,$n=Lr!==void 0?Lr.length:0,nt=re.get(ee),Pr=f.state.lights;if(G===!0&&(V===!0||z!==b)){const Zn=z===b&&ee.id===_;T.setState(ee,z,Zn)}let Rt=!1;ee.version===nt.__version?(nt.needsLights&&nt.lightsStateVersion!==Pr.state.version||nt.outputEncoding!==We||fe.isInstancedMesh&&nt.instancing===!1||!fe.isInstancedMesh&&nt.instancing===!0||fe.isSkinnedMesh&&nt.skinning===!1||!fe.isSkinnedMesh&&nt.skinning===!0||nt.envMap!==Ge||ee.fog===!0&&nt.fog!==Oe||nt.numClippingPlanes!==void 0&&(nt.numClippingPlanes!==T.numPlanes||nt.numIntersection!==T.numIntersection)||nt.vertexAlphas!==lt||nt.vertexTangents!==et||nt.morphTargets!==tt||nt.morphNormals!==yt||nt.morphColors!==Ls||nt.toneMapping!==Rr||Be.isWebGL2===!0&&nt.morphTargetsCount!==$n)&&(Rt=!0):(Rt=!0,nt.__version=ee.version);let Yn=nt.currentProgram;Rt===!0&&(Yn=ch(ee,K,fe));let ji=!1,la=!1,uh=!1;const Zt=Yn.getUniforms(),ca=nt.uniforms;if(pe.useProgram(Yn.program)&&(ji=!0,la=!0,uh=!0),ee.id!==_&&(_=ee.id,la=!0),ji||b!==z){if(Zt.setValue(Q,"projectionMatrix",z.projectionMatrix),Be.logarithmicDepthBuffer&&Zt.setValue(Q,"logDepthBufFC",2/(Math.log(z.far+1)/Math.LN2)),b!==z&&(b=z,la=!0,uh=!0),ee.isShaderMaterial||ee.isMeshPhongMaterial||ee.isMeshToonMaterial||ee.isMeshStandardMaterial||ee.envMap){const Zn=Zt.map.cameraPosition;Zn!==void 0&&Zn.setValue(Q,ue.setFromMatrixPosition(z.matrixWorld))}(ee.isMeshPhongMaterial||ee.isMeshToonMaterial||ee.isMeshLambertMaterial||ee.isMeshBasicMaterial||ee.isMeshStandardMaterial||ee.isShaderMaterial)&&Zt.setValue(Q,"isOrthographic",z.isOrthographicCamera===!0),(ee.isMeshPhongMaterial||ee.isMeshToonMaterial||ee.isMeshLambertMaterial||ee.isMeshBasicMaterial||ee.isMeshStandardMaterial||ee.isShaderMaterial||ee.isShadowMaterial||fe.isSkinnedMesh)&&Zt.setValue(Q,"viewMatrix",z.matrixWorldInverse)}if(fe.isSkinnedMesh){Zt.setOptional(Q,fe,"bindMatrix"),Zt.setOptional(Q,fe,"bindMatrixInverse");const Zn=fe.skeleton;Zn&&(Be.floatVertexTextures?(Zn.boneTexture===null&&Zn.computeBoneTexture(),Zt.setValue(Q,"boneTexture",Zn.boneTexture,C),Zt.setValue(Q,"boneTextureSize",Zn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const hh=ie.morphAttributes;return(hh.position!==void 0||hh.normal!==void 0||hh.color!==void 0&&Be.isWebGL2===!0)&&oe.update(fe,ie,ee,Yn),(la||nt.receiveShadow!==fe.receiveShadow)&&(nt.receiveShadow=fe.receiveShadow,Zt.setValue(Q,"receiveShadow",fe.receiveShadow)),la&&(Zt.setValue(Q,"toneMappingExposure",g.toneMappingExposure),nt.needsLights&&zw(ca,uh),Oe&&ee.fog===!0&&ce.refreshFogUniforms(ca,Oe),ce.refreshMaterialUniforms(ca,ee,N,L,Y),ds.upload(Q,nt.uniformsList,ca,C)),ee.isShaderMaterial&&ee.uniformsNeedUpdate===!0&&(ds.upload(Q,nt.uniformsList,ca,C),ee.uniformsNeedUpdate=!1),ee.isSpriteMaterial&&Zt.setValue(Q,"center",fe.center),Zt.setValue(Q,"modelViewMatrix",fe.modelViewMatrix),Zt.setValue(Q,"normalMatrix",fe.normalMatrix),Zt.setValue(Q,"modelMatrix",fe.matrixWorld),Yn}function zw(z,K){z.ambientLightColor.needsUpdate=K,z.lightProbe.needsUpdate=K,z.directionalLights.needsUpdate=K,z.directionalLightShadows.needsUpdate=K,z.pointLights.needsUpdate=K,z.pointLightShadows.needsUpdate=K,z.spotLights.needsUpdate=K,z.spotLightShadows.needsUpdate=K,z.rectAreaLights.needsUpdate=K,z.hemisphereLights.needsUpdate=K}function Nw(z){return z.isMeshLambertMaterial||z.isMeshToonMaterial||z.isMeshPhongMaterial||z.isMeshStandardMaterial||z.isShadowMaterial||z.isShaderMaterial&&z.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(z,K,ie){re.get(z.texture).__webglTexture=K,re.get(z.depthTexture).__webglTexture=ie;const ee=re.get(z);ee.__hasExternalTextures=!0,ee.__hasExternalTextures&&(ee.__autoAllocateDepthBuffer=ie===void 0,ee.__autoAllocateDepthBuffer||Ae.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ee.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(z,K){const ie=re.get(z);ie.__webglFramebuffer=K,ie.__useDefaultFramebuffer=K===void 0},this.setRenderTarget=function(z,K=0,ie=0){x=z,v=K,y=ie;let ee=!0;if(z){const Ge=re.get(z);Ge.__useDefaultFramebuffer!==void 0?(pe.bindFramebuffer(36160,null),ee=!1):Ge.__webglFramebuffer===void 0?C.setupRenderTarget(z):Ge.__hasExternalTextures&&C.rebindTextures(z,re.get(z.texture).__webglTexture,re.get(z.depthTexture).__webglTexture)}let fe=null,Oe=!1,He=!1;if(z){const Ge=z.texture;(Ge.isData3DTexture||Ge.isDataArrayTexture)&&(He=!0);const lt=re.get(z).__webglFramebuffer;z.isWebGLCubeRenderTarget?(fe=lt[K],Oe=!0):Be.isWebGL2&&z.samples>0&&C.useMultisampledRTT(z)===!1?fe=re.get(z).__webglMultisampledFramebuffer:fe=lt,S.copy(z.viewport),E.copy(z.scissor),w=z.scissorTest}else S.copy(I).multiplyScalar(N).floor(),E.copy(U).multiplyScalar(N).floor(),w=D;if(pe.bindFramebuffer(36160,fe)&&Be.drawBuffers&&ee&&pe.drawBuffers(z,fe),pe.viewport(S),pe.scissor(E),pe.setScissorTest(w),Oe){const Ge=re.get(z.texture);Q.framebufferTexture2D(36160,36064,34069+K,Ge.__webglTexture,ie)}else if(He){const Ge=re.get(z.texture),lt=K||0;Q.framebufferTextureLayer(36160,36064,Ge.__webglTexture,ie||0,lt)}_=-1},this.readRenderTargetPixels=function(z,K,ie,ee,fe,Oe,He){if(!(z&&z.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let We=re.get(z).__webglFramebuffer;if(z.isWebGLCubeRenderTarget&&He!==void 0&&(We=We[He]),We){pe.bindFramebuffer(36160,We);try{const Ge=z.texture,lt=Ge.format,et=Ge.type;if(lt!==mn&&F.convert(lt)!==Q.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const tt=et===_o&&(Ae.has("EXT_color_buffer_half_float")||Be.isWebGL2&&Ae.has("EXT_color_buffer_float"));if(et!==xs&&F.convert(et)!==Q.getParameter(35738)&&!(et===Li&&(Be.isWebGL2||Ae.has("OES_texture_float")||Ae.has("WEBGL_color_buffer_float")))&&!tt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}K>=0&&K<=z.width-ee&&ie>=0&&ie<=z.height-fe&&Q.readPixels(K,ie,ee,fe,F.convert(lt),F.convert(et),Oe)}finally{const Ge=x!==null?re.get(x).__webglFramebuffer:null;pe.bindFramebuffer(36160,Ge)}}},this.copyFramebufferToTexture=function(z,K,ie=0){if(K.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const ee=Math.pow(2,-ie),fe=Math.floor(K.image.width*ee),Oe=Math.floor(K.image.height*ee);C.setTexture2D(K,0),Q.copyTexSubImage2D(3553,ie,0,0,z.x,z.y,fe,Oe),pe.unbindTexture()},this.copyTextureToTexture=function(z,K,ie,ee=0){const fe=K.image.width,Oe=K.image.height,He=F.convert(ie.format),We=F.convert(ie.type);C.setTexture2D(ie,0),Q.pixelStorei(37440,ie.flipY),Q.pixelStorei(37441,ie.premultiplyAlpha),Q.pixelStorei(3317,ie.unpackAlignment),K.isDataTexture?Q.texSubImage2D(3553,ee,z.x,z.y,fe,Oe,He,We,K.image.data):K.isCompressedTexture?Q.compressedTexSubImage2D(3553,ee,z.x,z.y,K.mipmaps[0].width,K.mipmaps[0].height,He,K.mipmaps[0].data):Q.texSubImage2D(3553,ee,z.x,z.y,He,We,K.image),ee===0&&ie.generateMipmaps&&Q.generateMipmap(3553),pe.unbindTexture()},this.copyTextureToTexture3D=function(z,K,ie,ee,fe=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Oe=z.max.x-z.min.x+1,He=z.max.y-z.min.y+1,We=z.max.z-z.min.z+1,Ge=F.convert(ee.format),lt=F.convert(ee.type);let et;if(ee.isData3DTexture)C.setTexture3D(ee,0),et=32879;else if(ee.isDataArrayTexture)C.setTexture2DArray(ee,0),et=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Q.pixelStorei(37440,ee.flipY),Q.pixelStorei(37441,ee.premultiplyAlpha),Q.pixelStorei(3317,ee.unpackAlignment);const tt=Q.getParameter(3314),yt=Q.getParameter(32878),Ls=Q.getParameter(3316),Rr=Q.getParameter(3315),Lr=Q.getParameter(32877),$n=ie.isCompressedTexture?ie.mipmaps[0]:ie.image;Q.pixelStorei(3314,$n.width),Q.pixelStorei(32878,$n.height),Q.pixelStorei(3316,z.min.x),Q.pixelStorei(3315,z.min.y),Q.pixelStorei(32877,z.min.z),ie.isDataTexture||ie.isData3DTexture?Q.texSubImage3D(et,fe,K.x,K.y,K.z,Oe,He,We,Ge,lt,$n.data):ie.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Q.compressedTexSubImage3D(et,fe,K.x,K.y,K.z,Oe,He,We,Ge,$n.data)):Q.texSubImage3D(et,fe,K.x,K.y,K.z,Oe,He,We,Ge,lt,$n),Q.pixelStorei(3314,tt),Q.pixelStorei(32878,yt),Q.pixelStorei(3316,Ls),Q.pixelStorei(3315,Rr),Q.pixelStorei(32877,Lr),fe===0&&ee.generateMipmaps&&Q.generateMipmap(et),pe.unbindTexture()},this.initTexture=function(z){C.setTexture2D(z,0),pe.unbindTexture()},this.resetState=function(){v=0,y=0,x=null,pe.reset(),le.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}ot.prototype.isWebGLRenderer=!0;class Hx extends ot{}Hx.prototype.isWebGL1Renderer=!0;class pl{constructor(e,t=25e-5){this.name="",this.color=new Me(e),this.density=t}clone(){return new pl(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}pl.prototype.isFogExp2=!0;class ml{constructor(e,t=1,n=1e3){this.name="",this.color=new Me(e),this.near=t,this.far=n}clone(){return new ml(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}ml.prototype.isFog=!0;class gl extends Ve{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}gl.prototype.isScene=!0;class Mr{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=wo,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=yn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=yn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=yn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Mr.prototype.isInterleavedBuffer=!0;const Kt=new P;class ws{constructor(e,t,n,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Kt.fromBufferAttribute(this,t),Kt.applyMatrix4(e),this.setXYZ(t,Kt.x,Kt.y,Kt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Kt.fromBufferAttribute(this,t),Kt.applyNormalMatrix(e),this.setXYZ(t,Kt.x,Kt.y,Kt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Kt.fromBufferAttribute(this,t),Kt.transformDirection(e),this.setXYZ(t,Kt.x,Kt.y,Kt.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Qe(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ws(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}ws.prototype.isInterleavedBufferAttribute=!0;class qu extends Ct{constructor(e){super(),this.type="SpriteMaterial",this.color=new Me(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}qu.prototype.isSpriteMaterial=!0;let jr;const da=new P,Xr=new P,$r=new P,Yr=new ae,pa=new ae,Vx=new we,lc=new P,ma=new P,cc=new P,Ag=new ae,Zh=new ae,Cg=new ae;class ju extends Ve{constructor(e){if(super(),this.type="Sprite",jr===void 0){jr=new ze;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Mr(t,5);jr.setIndex([0,1,2,0,2,3]),jr.setAttribute("position",new ws(n,3,0,!1)),jr.setAttribute("uv",new ws(n,2,3,!1))}this.geometry=jr,this.material=e!==void 0?e:new qu,this.center=new ae(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Xr.setFromMatrixScale(this.matrixWorld),Vx.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),$r.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Xr.multiplyScalar(-$r.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const o=this.center;uc(lc.set(-.5,-.5,0),$r,o,Xr,i,r),uc(ma.set(.5,-.5,0),$r,o,Xr,i,r),uc(cc.set(.5,.5,0),$r,o,Xr,i,r),Ag.set(0,0),Zh.set(1,0),Cg.set(1,1);let a=e.ray.intersectTriangle(lc,ma,cc,!1,da);if(a===null&&(uc(ma.set(-.5,.5,0),$r,o,Xr,i,r),Zh.set(0,1),a=e.ray.intersectTriangle(lc,cc,ma,!1,da),a===null))return;const l=e.ray.origin.distanceTo(da);l<e.near||l>e.far||t.push({distance:l,point:da.clone(),uv:At.getUV(da,lc,ma,cc,Ag,Zh,Cg,new ae),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}ju.prototype.isSprite=!0;function uc(s,e,t,n,i,r){Yr.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(pa.x=r*Yr.x-i*Yr.y,pa.y=i*Yr.x+r*Yr.y):pa.copy(Yr),s.copy(e),s.x+=pa.x,s.y+=pa.y,s.applyMatrix4(Vx)}const hc=new P,Rg=new P;class Gx extends Ve{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){hc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(hc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){hc.setFromMatrixPosition(e.matrixWorld),Rg.setFromMatrixPosition(this.matrixWorld);const n=hc.distanceTo(Rg)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance})}return t}}const Lg=new P,Pg=new Je,Ig=new Je,yL=new P,Fg=new we;class yl extends xt{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new we,this.bindMatrixInverse=new we}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Je,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Pg.fromBufferAttribute(i.attributes.skinIndex,e),Ig.fromBufferAttribute(i.attributes.skinWeight,e),Lg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const o=Ig.getComponent(r);if(o!==0){const a=Pg.getComponent(r);Fg.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(yL.copy(Lg).applyMatrix4(Fg),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}yl.prototype.isSkinnedMesh=!0;class So extends Ve{constructor(){super(),this.type="Bone"}}So.prototype.isBone=!0;class or extends _t{constructor(e=null,t=1,n=1,i,r,o,a,l,c=It,u=It,h,f){super(null,o,a,l,c,u,i,r,h,f),this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}or.prototype.isDataTexture=!0;const Bg=new we,vL=new we;class vl{constructor(e=[],t=[]){this.uuid=yn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new we)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new we;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,o=e.length;r<o;r++){const a=e[r]?e[r].matrixWorld:vL;Bg.multiplyMatrices(a,t[r]),Bg.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new vl(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=vx(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new or(t,e,e,mn,Li);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let o=t[r];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),o=new So),this.bones.push(o),this.boneInverses.push(new we().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class dr extends Qe{constructor(e,t,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}dr.prototype.isInstancedBufferAttribute=!0;const Dg=new we,zg=new we,fc=[],ga=new xt;class fp extends xt{constructor(e,t,n){super(e,t),this.instanceMatrix=new dr(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(ga.geometry=this.geometry,ga.material=this.material,ga.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,Dg),zg.multiplyMatrices(n,Dg),ga.matrixWorld=zg,ga.raycast(e,fc);for(let o=0,a=fc.length;o<a;o++){const l=fc[o];l.instanceId=r,l.object=this,t.push(l)}fc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new dr(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}fp.prototype.isInstancedMesh=!0;class Ot extends Ct{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Me(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}Ot.prototype.isLineBasicMaterial=!0;const Ng=new P,Og=new P,Ug=new we,Kh=new Cs,dc=new As;class fi extends Ve{constructor(e=new ze,t=new Ot){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Ng.fromBufferAttribute(t,i-1),Og.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Ng.distanceTo(Og);e.setAttribute("lineDistance",new Le(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),dc.copy(n.boundingSphere),dc.applyMatrix4(i),dc.radius+=r,e.ray.intersectsSphere(dc)===!1)return;Ug.copy(i).invert(),Kh.copy(e.ray).applyMatrix4(Ug);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new P,u=new P,h=new P,f=new P,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const p=n.index,m=n.attributes.position;if(p!==null){const v=Math.max(0,o.start),y=Math.min(p.count,o.start+o.count);for(let x=v,_=y-1;x<_;x+=d){const b=p.getX(x),S=p.getX(x+1);if(c.fromBufferAttribute(m,b),u.fromBufferAttribute(m,S),Kh.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const w=e.ray.origin.distanceTo(f);w<e.near||w>e.far||t.push({distance:w,point:h.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,o.start),y=Math.min(m.count,o.start+o.count);for(let x=v,_=y-1;x<_;x+=d){if(c.fromBufferAttribute(m,x),u.fromBufferAttribute(m,x+1),Kh.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const S=e.ray.origin.distanceTo(f);S<e.near||S>e.far||t.push({distance:S,point:h.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}fi.prototype.isLine=!0;const kg=new P,Hg=new P;class un extends fi{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)kg.fromBufferAttribute(t,i),Hg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+kg.distanceTo(Hg);e.setAttribute("lineDistance",new Le(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}un.prototype.isLineSegments=!0;class dp extends fi{constructor(e,t){super(e,t),this.type="LineLoop"}}dp.prototype.isLineLoop=!0;class Sr extends Ct{constructor(e){super(),this.type="PointsMaterial",this.color=new Me(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}Sr.prototype.isPointsMaterial=!0;const Vg=new we,dd=new Cs,pc=new As,mc=new P;class xl extends Ve{constructor(e=new ze,t=new Sr){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),pc.copy(n.boundingSphere),pc.applyMatrix4(i),pc.radius+=r,e.ray.intersectsSphere(pc)===!1)return;Vg.copy(i).invert(),dd.copy(e.ray).applyMatrix4(Vg);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a;if(n.isBufferGeometry){const c=n.index,h=n.attributes.position;if(c!==null){const f=Math.max(0,o.start),d=Math.min(c.count,o.start+o.count);for(let p=f,g=d;p<g;p++){const m=c.getX(p);mc.fromBufferAttribute(h,m),Gg(mc,m,l,i,e,t,this)}}else{const f=Math.max(0,o.start),d=Math.min(h.count,o.start+o.count);for(let p=f,g=d;p<g;p++)mc.fromBufferAttribute(h,p),Gg(mc,p,l,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}xl.prototype.isPoints=!0;function Gg(s,e,t,n,i,r,o){const a=dd.distanceSqToPoint(s);if(a<t){const l=new P;dd.closestPointToPoint(s,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;r.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}class Wx extends _t{constructor(e,t,n,i,r,o,a,l,c){super(e,t,n,i,r,o,a,l,c),this.minFilter=o!==void 0?o:St,this.magFilter=r!==void 0?r:St,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Wx.prototype.isVideoTexture=!0;class qx extends _t{constructor(e,t,n){super({width:e,height:t}),this.format=n,this.magFilter=It,this.minFilter=It,this.generateMipmaps=!1,this.needsUpdate=!0}}qx.prototype.isFramebufferTexture=!0;class pp extends _t{constructor(e,t,n,i,r,o,a,l,c,u,h,f){super(null,o,a,l,c,u,i,r,h,f),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}pp.prototype.isCompressedTexture=!0;class jx extends _t{constructor(e,t,n,i,r,o,a,l,c){super(e,t,n,i,r,o,a,l,c),this.needsUpdate=!0}}jx.prototype.isCanvasTexture=!0;class hn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let o;t?o=t:o=e*n[r-1];let a=0,l=r-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(r-1);const u=n[i],f=n[i+1]-u,d=(o-u)/f;return(i+d)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),l=t||(o.isVector2?new ae:new P);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new P,i=[],r=[],o=[],a=new P,l=new we;for(let d=0;d<=e;d++){const p=d/e;i[d]=this.getTangentAt(p,new P)}r[0]=new P,o[0]=new P;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),f=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),f<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let d=1;d<=e;d++){if(r[d]=r[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(i[d-1],i[d]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Et(i[d-1].dot(i[d]),-1,1));r[d].applyMatrix4(l.makeRotationAxis(a,p))}o[d].crossVectors(i[d],r[d])}if(t===!0){let d=Math.acos(Et(r[0].dot(r[e]),-1,1));d/=e,i[0].dot(a.crossVectors(r[0],r[e]))>0&&(d=-d);for(let p=1;p<=e;p++)r[p].applyMatrix4(l.makeRotationAxis(i[p],d*p)),o[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class _l extends hn{constructor(e=0,t=0,n=1,i=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t){const n=t||new ae,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+e*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*u-d*h+this.aX,c=f*h+d*u+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}_l.prototype.isEllipseCurve=!0;class mp extends _l{constructor(e,t,n,i,r,o){super(e,t,n,n,i,r,o),this.type="ArcCurve"}}mp.prototype.isArcCurve=!0;function gp(){let s=0,e=0,t=0,n=0;function i(r,o,a,l){s=r,e=a,t=-3*r+3*o-2*a-l,n=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){i(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,u,h){let f=(o-r)/c-(a-r)/(c+u)+(a-o)/u,d=(a-o)/u-(l-o)/(u+h)+(l-a)/h;f*=u,d*=u,i(o,a,f,d)},calc:function(r){const o=r*r,a=o*r;return s+e*r+t*o+n*a}}}const gc=new P,Jh=new gp,Qh=new gp,ef=new gp;class yp extends hn{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new P){const n=t,i=this.points,r=i.length,o=(r-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%r]:(gc.subVectors(i[0],i[1]).add(i[0]),c=gc);const h=i[a%r],f=i[(a+1)%r];if(this.closed||a+2<r?u=i[(a+2)%r]:(gc.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=gc),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),d),g=Math.pow(h.distanceToSquared(f),d),m=Math.pow(f.distanceToSquared(u),d);g<1e-4&&(g=1),p<1e-4&&(p=g),m<1e-4&&(m=g),Jh.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,p,g,m),Qh.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,p,g,m),ef.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,p,g,m)}else this.curveType==="catmullrom"&&(Jh.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),Qh.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),ef.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return n.set(Jh.calc(l),Qh.calc(l),ef.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new P().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}yp.prototype.isCatmullRomCurve3=!0;function Wg(s,e,t,n,i){const r=(n-e)*.5,o=(i-t)*.5,a=s*s,l=s*a;return(2*t-2*n+r+o)*l+(-3*t+3*n-2*r-o)*a+r*s+t}function xL(s,e){const t=1-s;return t*t*e}function _L(s,e){return 2*(1-s)*s*e}function wL(s,e){return s*s*e}function Fa(s,e,t,n){return xL(s,e)+_L(s,t)+wL(s,n)}function bL(s,e){const t=1-s;return t*t*t*e}function ML(s,e){const t=1-s;return 3*t*t*s*e}function SL(s,e){return 3*(1-s)*s*s*e}function EL(s,e){return s*s*s*e}function Ba(s,e,t,n,i){return bL(s,e)+ML(s,t)+SL(s,n)+EL(s,i)}class Xu extends hn{constructor(e=new ae,t=new ae,n=new ae,i=new ae){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ae){const n=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Ba(e,i.x,r.x,o.x,a.x),Ba(e,i.y,r.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Xu.prototype.isCubicBezierCurve=!0;class vp extends hn{constructor(e=new P,t=new P,n=new P,i=new P){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new P){const n=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Ba(e,i.x,r.x,o.x,a.x),Ba(e,i.y,r.y,o.y,a.y),Ba(e,i.z,r.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}vp.prototype.isCubicBezierCurve3=!0;class wl extends hn{constructor(e=new ae,t=new ae){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ae){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new ae;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}wl.prototype.isLineCurve=!0;class Xx extends hn{constructor(e=new P,t=new P){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new P){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class $u extends hn{constructor(e=new ae,t=new ae,n=new ae){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ae){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(Fa(e,i.x,r.x,o.x),Fa(e,i.y,r.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}$u.prototype.isQuadraticBezierCurve=!0;class Yu extends hn{constructor(e=new P,t=new P,n=new P){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new P){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(Fa(e,i.x,r.x,o.x),Fa(e,i.y,r.y,o.y),Fa(e,i.z,r.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Yu.prototype.isQuadraticBezierCurve3=!0;class Zu extends hn{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new ae){const n=t,i=this.points,r=(i.length-1)*e,o=Math.floor(r),a=r-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(Wg(a,l.x,c.x,u.x,h.x),Wg(a,l.y,c.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ae().fromArray(i))}return this}}Zu.prototype.isSplineCurve=!0;var xp=Object.freeze({__proto__:null,ArcCurve:mp,CatmullRomCurve3:yp,CubicBezierCurve:Xu,CubicBezierCurve3:vp,EllipseCurve:_l,LineCurve:wl,LineCurve3:Xx,QuadraticBezierCurve:$u,QuadraticBezierCurve3:Yu,SplineCurve:Zu});class $x extends hn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new wl(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new xp[i.type]().fromJSON(i))}return this}}class Eo extends $x{constructor(e){super(),this.type="Path",this.currentPoint=new ae,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new wl(this.currentPoint.clone(),new ae(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new $u(this.currentPoint.clone(),new ae(e,t),new ae(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,o){const a=new Xu(this.currentPoint.clone(),new ae(e,t),new ae(n,i),new ae(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Zu(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,n,i,r,o),this}absarc(e,t,n,i,r,o){return this.absellipse(e,t,n,n,i,r,o),this}ellipse(e,t,n,i,r,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+c,t+u,n,i,r,o,a,l),this}absellipse(e,t,n,i,r,o,a,l){const c=new _l(e,t,n,i,r,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class pr extends ze{constructor(e=[new ae(0,.5),new ae(.5,0),new ae(0,-.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Et(i,0,Math.PI*2);const r=[],o=[],a=[],l=[],c=[],u=1/t,h=new P,f=new ae,d=new P,p=new P,g=new P;let m=0,v=0;for(let y=0;y<=e.length-1;y++)switch(y){case 0:m=e[y+1].x-e[y].x,v=e[y+1].y-e[y].y,d.x=v*1,d.y=-m,d.z=v*0,g.copy(d),d.normalize(),l.push(d.x,d.y,d.z);break;case e.length-1:l.push(g.x,g.y,g.z);break;default:m=e[y+1].x-e[y].x,v=e[y+1].y-e[y].y,d.x=v*1,d.y=-m,d.z=v*0,p.copy(d),d.x+=g.x,d.y+=g.y,d.z+=g.z,d.normalize(),l.push(d.x,d.y,d.z),g.copy(p)}for(let y=0;y<=t;y++){const x=n+y*u*i,_=Math.sin(x),b=Math.cos(x);for(let S=0;S<=e.length-1;S++){h.x=e[S].x*_,h.y=e[S].y,h.z=e[S].x*b,o.push(h.x,h.y,h.z),f.x=y/t,f.y=S/(e.length-1),a.push(f.x,f.y);const E=l[3*S+0]*_,w=l[3*S+1],A=l[3*S+0]*b;c.push(E,w,A)}}for(let y=0;y<t;y++)for(let x=0;x<e.length-1;x++){const _=x+y*e.length,b=_,S=_+e.length,E=_+e.length+1,w=_+1;r.push(b,S,w),r.push(E,w,S)}this.setIndex(r),this.setAttribute("position",new Le(o,3)),this.setAttribute("uv",new Le(a,2)),this.setAttribute("normal",new Le(c,3))}static fromJSON(e){return new pr(e.points,e.segments,e.phiStart,e.phiLength)}}class To extends pr{constructor(e=1,t=1,n=4,i=8){const r=new Eo;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new To(e.radius,e.length,e.capSegments,e.radialSegments)}}class Ao extends ze{constructor(e=1,t=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],o=[],a=[],l=[],c=new P,u=new ae;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,f=3;h<=t;h++,f+=3){const d=n+h/t*i;c.x=e*Math.cos(d),c.y=e*Math.sin(d),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[f]/e+1)/2,u.y=(o[f+1]/e+1)/2,l.push(u.x,u.y)}for(let h=1;h<=t;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new Le(o,3)),this.setAttribute("normal",new Le(a,3)),this.setAttribute("uv",new Le(l,2))}static fromJSON(e){return new Ao(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class bs extends ze{constructor(e=1,t=1,n=1,i=8,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const u=[],h=[],f=[],d=[];let p=0;const g=[],m=n/2;let v=0;y(),o===!1&&(e>0&&x(!0),t>0&&x(!1)),this.setIndex(u),this.setAttribute("position",new Le(h,3)),this.setAttribute("normal",new Le(f,3)),this.setAttribute("uv",new Le(d,2));function y(){const _=new P,b=new P;let S=0;const E=(t-e)/n;for(let w=0;w<=r;w++){const A=[],L=w/r,N=L*(t-e)+e;for(let k=0;k<=i;k++){const O=k/i,I=O*l+a,U=Math.sin(I),D=Math.cos(I);b.x=N*U,b.y=-L*n+m,b.z=N*D,h.push(b.x,b.y,b.z),_.set(U,E,D).normalize(),f.push(_.x,_.y,_.z),d.push(O,1-L),A.push(p++)}g.push(A)}for(let w=0;w<i;w++)for(let A=0;A<r;A++){const L=g[A][w],N=g[A+1][w],k=g[A+1][w+1],O=g[A][w+1];u.push(L,N,O),u.push(N,k,O),S+=6}c.addGroup(v,S,0),v+=S}function x(_){const b=p,S=new ae,E=new P;let w=0;const A=_===!0?e:t,L=_===!0?1:-1;for(let k=1;k<=i;k++)h.push(0,m*L,0),f.push(0,L,0),d.push(.5,.5),p++;const N=p;for(let k=0;k<=i;k++){const I=k/i*l+a,U=Math.cos(I),D=Math.sin(I);E.x=A*D,E.y=m*L,E.z=A*U,h.push(E.x,E.y,E.z),f.push(0,L,0),S.x=U*.5+.5,S.y=D*.5*L+.5,d.push(S.x,S.y),p++}for(let k=0;k<i;k++){const O=b+k,I=N+k;_===!0?u.push(I,I+1,O):u.push(I+1,I,O),w+=3}c.addGroup(v,w,_===!0?1:2),v+=w}}static fromJSON(e){return new bs(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Co extends bs{constructor(e=1,t=1,n=8,i=1,r=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,r,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Co(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class di extends ze{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],o=[];a(i),c(n),u(),this.setAttribute("position",new Le(r,3)),this.setAttribute("normal",new Le(r.slice(),3)),this.setAttribute("uv",new Le(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(y){const x=new P,_=new P,b=new P;for(let S=0;S<t.length;S+=3)d(t[S+0],x),d(t[S+1],_),d(t[S+2],b),l(x,_,b,y)}function l(y,x,_,b){const S=b+1,E=[];for(let w=0;w<=S;w++){E[w]=[];const A=y.clone().lerp(_,w/S),L=x.clone().lerp(_,w/S),N=S-w;for(let k=0;k<=N;k++)k===0&&w===S?E[w][k]=A:E[w][k]=A.clone().lerp(L,k/N)}for(let w=0;w<S;w++)for(let A=0;A<2*(S-w)-1;A++){const L=Math.floor(A/2);A%2===0?(f(E[w][L+1]),f(E[w+1][L]),f(E[w][L])):(f(E[w][L+1]),f(E[w+1][L+1]),f(E[w+1][L]))}}function c(y){const x=new P;for(let _=0;_<r.length;_+=3)x.x=r[_+0],x.y=r[_+1],x.z=r[_+2],x.normalize().multiplyScalar(y),r[_+0]=x.x,r[_+1]=x.y,r[_+2]=x.z}function u(){const y=new P;for(let x=0;x<r.length;x+=3){y.x=r[x+0],y.y=r[x+1],y.z=r[x+2];const _=m(y)/2/Math.PI+.5,b=v(y)/Math.PI+.5;o.push(_,1-b)}p(),h()}function h(){for(let y=0;y<o.length;y+=6){const x=o[y+0],_=o[y+2],b=o[y+4],S=Math.max(x,_,b),E=Math.min(x,_,b);S>.9&&E<.1&&(x<.2&&(o[y+0]+=1),_<.2&&(o[y+2]+=1),b<.2&&(o[y+4]+=1))}}function f(y){r.push(y.x,y.y,y.z)}function d(y,x){const _=y*3;x.x=e[_+0],x.y=e[_+1],x.z=e[_+2]}function p(){const y=new P,x=new P,_=new P,b=new P,S=new ae,E=new ae,w=new ae;for(let A=0,L=0;A<r.length;A+=9,L+=6){y.set(r[A+0],r[A+1],r[A+2]),x.set(r[A+3],r[A+4],r[A+5]),_.set(r[A+6],r[A+7],r[A+8]),S.set(o[L+0],o[L+1]),E.set(o[L+2],o[L+3]),w.set(o[L+4],o[L+5]),b.copy(y).add(x).add(_).divideScalar(3);const N=m(b);g(S,L+0,y,N),g(E,L+2,x,N),g(w,L+4,_,N)}}function g(y,x,_,b){b<0&&y.x===1&&(o[x]=y.x-1),_.x===0&&_.z===0&&(o[x]=b/2/Math.PI+.5)}function m(y){return Math.atan2(y.z,-y.x)}function v(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}static fromJSON(e){return new di(e.vertices,e.indices,e.radius,e.details)}}class Ro extends di{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ro(e.radius,e.detail)}}const yc=new P,vc=new P,tf=new P,xc=new At;class _p extends ze{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(sr*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],h=new Array(3),f={},d=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:g,b:m,c:v}=xc;if(g.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),v.fromBufferAttribute(a,c[2]),xc.getNormal(tf),h[0]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,h[1]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,h[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let y=0;y<3;y++){const x=(y+1)%3,_=h[y],b=h[x],S=xc[u[y]],E=xc[u[x]],w=`${_}_${b}`,A=`${b}_${_}`;A in f&&f[A]?(tf.dot(f[A].normal)<=r&&(d.push(S.x,S.y,S.z),d.push(E.x,E.y,E.z)),f[A]=null):w in f||(f[w]={index0:c[y],index1:c[x],normal:tf.clone()})}}for(const p in f)if(f[p]){const{index0:g,index1:m}=f[p];yc.fromBufferAttribute(a,g),vc.fromBufferAttribute(a,m),d.push(yc.x,yc.y,yc.z),d.push(vc.x,vc.y,vc.z)}this.setAttribute("position",new Le(d,3))}}}class ai extends Eo{constructor(e){super(e),this.uuid=yn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Eo().fromJSON(i))}return this}}const TL={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=Yx(s,0,i,t,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,u,h,f,d;if(n&&(r=PL(s,e,r,t)),s.length>80*t){a=c=s[0],l=u=s[1];for(let p=t;p<i;p+=t)h=s[p],f=s[p+1],h<a&&(a=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);d=Math.max(c-a,u-l),d=d!==0?1/d:0}return Ja(r,o,t,a,l,d),o}};function Yx(s,e,t,n,i){let r,o;if(i===VL(s,e,t,n)>0)for(r=e;r<t;r+=n)o=qg(r,s[r],s[r+1],o);else for(r=t-n;r>=e;r-=n)o=qg(r,s[r],s[r+1],o);return o&&Ku(o,o.next)&&(el(o),o=o.next),o}function Ms(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(Ku(t,t.next)||mt(t.prev,t,t.next)===0)){if(el(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ja(s,e,t,n,i,r,o){if(!s)return;!o&&r&&zL(s,n,i,r);let a=s,l,c;for(;s.prev!==s.next;){if(l=s.prev,c=s.next,r?CL(s,n,i,r):AL(s)){e.push(l.i/t),e.push(s.i/t),e.push(c.i/t),el(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=RL(Ms(s),e,t),Ja(s,e,t,n,i,r,2)):o===2&&LL(s,e,t,n,i,r):Ja(Ms(s),e,t,n,i,r,1);break}}}function AL(s){const e=s.prev,t=s,n=s.next;if(mt(e,t,n)>=0)return!1;let i=s.next.next;for(;i!==s.prev;){if(ao(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&mt(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function CL(s,e,t,n){const i=s.prev,r=s,o=s.next;if(mt(i,r,o)>=0)return!1;const a=i.x<r.x?i.x<o.x?i.x:o.x:r.x<o.x?r.x:o.x,l=i.y<r.y?i.y<o.y?i.y:o.y:r.y<o.y?r.y:o.y,c=i.x>r.x?i.x>o.x?i.x:o.x:r.x>o.x?r.x:o.x,u=i.y>r.y?i.y>o.y?i.y:o.y:r.y>o.y?r.y:o.y,h=pd(a,l,e,t,n),f=pd(c,u,e,t,n);let d=s.prevZ,p=s.nextZ;for(;d&&d.z>=h&&p&&p.z<=f;){if(d!==s.prev&&d!==s.next&&ao(i.x,i.y,r.x,r.y,o.x,o.y,d.x,d.y)&&mt(d.prev,d,d.next)>=0||(d=d.prevZ,p!==s.prev&&p!==s.next&&ao(i.x,i.y,r.x,r.y,o.x,o.y,p.x,p.y)&&mt(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=h;){if(d!==s.prev&&d!==s.next&&ao(i.x,i.y,r.x,r.y,o.x,o.y,d.x,d.y)&&mt(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=f;){if(p!==s.prev&&p!==s.next&&ao(i.x,i.y,r.x,r.y,o.x,o.y,p.x,p.y)&&mt(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function RL(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!Ku(i,r)&&Zx(i,n,n.next,r)&&Qa(i,r)&&Qa(r,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(r.i/t),el(n),el(n.next),n=s=r),n=n.next}while(n!==s);return Ms(n)}function LL(s,e,t,n,i,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&UL(o,a)){let l=Kx(o,a);o=Ms(o,o.next),l=Ms(l,l.next),Ja(o,e,t,n,i,r),Ja(l,e,t,n,i,r);return}a=a.next}o=o.next}while(o!==s)}function PL(s,e,t,n){const i=[];let r,o,a,l,c;for(r=0,o=e.length;r<o;r++)a=e[r]*n,l=r<o-1?e[r+1]*n:s.length,c=Yx(s,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(OL(c));for(i.sort(IL),r=0;r<i.length;r++)FL(i[r],t),t=Ms(t,t.next);return t}function IL(s,e){return s.x-e.x}function FL(s,e){if(e=BL(s,e),e){const t=Kx(e,s);Ms(e,e.next),Ms(t,t.next)}}function BL(s,e){let t=e;const n=s.x,i=s.y;let r=-1/0,o;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const f=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=n&&f>r){if(r=f,f===n){if(i===t.y)return t;if(i===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(n===r)return o;const a=o,l=o.x,c=o.y;let u=1/0,h;t=o;do n>=t.x&&t.x>=l&&n!==t.x&&ao(i<c?n:r,i,l,c,i<c?r:n,i,t.x,t.y)&&(h=Math.abs(i-t.y)/(n-t.x),Qa(t,s)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&DL(o,t)))&&(o=t,u=h)),t=t.next;while(t!==a);return o}function DL(s,e){return mt(s.prev,s,e.prev)<0&&mt(e.next,s,s.next)<0}function zL(s,e,t,n){let i=s;do i.z===null&&(i.z=pd(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,NL(i)}function NL(s){let e,t,n,i,r,o,a,l,c=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,n=t,a=0,e=0;e<c&&(a++,n=n.nextZ,!!n);e++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,c*=2}while(o>1);return s}function pd(s,e,t,n,i){return s=32767*(s-t)*i,e=32767*(e-n)*i,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function OL(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function ao(s,e,t,n,i,r,o,a){return(i-o)*(e-a)-(s-o)*(r-a)>=0&&(s-o)*(n-a)-(t-o)*(e-a)>=0&&(t-o)*(r-a)-(i-o)*(n-a)>=0}function UL(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!kL(s,e)&&(Qa(s,e)&&Qa(e,s)&&HL(s,e)&&(mt(s.prev,s,e.prev)||mt(s,e.prev,e))||Ku(s,e)&&mt(s.prev,s,s.next)>0&&mt(e.prev,e,e.next)>0)}function mt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Ku(s,e){return s.x===e.x&&s.y===e.y}function Zx(s,e,t,n){const i=wc(mt(s,e,t)),r=wc(mt(s,e,n)),o=wc(mt(t,n,s)),a=wc(mt(t,n,e));return!!(i!==r&&o!==a||i===0&&_c(s,t,e)||r===0&&_c(s,n,e)||o===0&&_c(t,s,n)||a===0&&_c(t,e,n))}function _c(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function wc(s){return s>0?1:s<0?-1:0}function kL(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&Zx(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Qa(s,e){return mt(s.prev,s,s.next)<0?mt(s,e,s.next)>=0&&mt(s,s.prev,e)>=0:mt(s,e,s.prev)<0||mt(s,s.next,e)<0}function HL(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function Kx(s,e){const t=new md(s.i,s.x,s.y),n=new md(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function qg(s,e,t,n){const i=new md(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function el(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function md(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function VL(s,e,t,n){let i=0;for(let r=e,o=t-n;r<t;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class li{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return li.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];jg(e),Xg(n,e);let o=e.length;t.forEach(jg);for(let l=0;l<t.length;l++)i.push(o),o+=t[l].length,Xg(n,t[l]);const a=TL.triangulate(n,i);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function jg(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function Xg(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class pi extends ze{constructor(e=new ai([new ae(.5,.5),new ae(-.5,.5),new ae(-.5,-.5),new ae(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new Le(i,3)),this.setAttribute("uv",new Le(r,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1;let h=t.depth!==void 0?t.depth:1,f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:d-.1,g=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,y=t.UVGenerator!==void 0?t.UVGenerator:GL;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=t.amount);let x,_=!1,b,S,E,w;v&&(x=v.getSpacedPoints(u),_=!0,f=!1,b=v.computeFrenetFrames(u,!1),S=new P,E=new P,w=new P),f||(m=0,d=0,p=0,g=0);const A=a.extractPoints(c);let L=A.shape;const N=A.holes;if(!li.isClockWise(L)){L=L.reverse();for(let re=0,C=N.length;re<C;re++){const B=N[re];li.isClockWise(B)&&(N[re]=B.reverse())}}const O=li.triangulateShape(L,N),I=L;for(let re=0,C=N.length;re<C;re++){const B=N[re];L=L.concat(B)}function U(re,C,B){return C||console.error("THREE.ExtrudeGeometry: vec does not exist"),C.clone().multiplyScalar(B).add(re)}const D=L.length,j=O.length;function G(re,C,B){let W,$,J;const ne=re.x-C.x,se=re.y-C.y,ce=B.x-re.x,he=B.y-re.y,R=ne*ne+se*se,T=ne*he-se*ce;if(Math.abs(T)>Number.EPSILON){const q=Math.sqrt(R),Z=Math.sqrt(ce*ce+he*he),oe=C.x-se/q,de=C.y+ne/q,Se=B.x-he/Z,F=B.y+ce/Z,le=((Se-oe)*he-(F-de)*ce)/(ne*he-se*ce);W=oe+ne*le-re.x,$=de+se*le-re.y;const Ce=W*W+$*$;if(Ce<=2)return new ae(W,$);J=Math.sqrt(Ce/2)}else{let q=!1;ne>Number.EPSILON?ce>Number.EPSILON&&(q=!0):ne<-Number.EPSILON?ce<-Number.EPSILON&&(q=!0):Math.sign(se)===Math.sign(he)&&(q=!0),q?(W=-se,$=ne,J=Math.sqrt(R)):(W=ne,$=se,J=Math.sqrt(R/2))}return new ae(W/J,$/J)}const V=[];for(let re=0,C=I.length,B=C-1,W=re+1;re<C;re++,B++,W++)B===C&&(B=0),W===C&&(W=0),V[re]=G(I[re],I[B],I[W]);const Y=[];let te,X=V.concat();for(let re=0,C=N.length;re<C;re++){const B=N[re];te=[];for(let W=0,$=B.length,J=$-1,ne=W+1;W<$;W++,J++,ne++)J===$&&(J=0),ne===$&&(ne=0),te[W]=G(B[W],B[J],B[ne]);Y.push(te),X=X.concat(te)}for(let re=0;re<m;re++){const C=re/m,B=d*Math.cos(C*Math.PI/2),W=p*Math.sin(C*Math.PI/2)+g;for(let $=0,J=I.length;$<J;$++){const ne=U(I[$],V[$],W);Pe(ne.x,ne.y,-B)}for(let $=0,J=N.length;$<J;$++){const ne=N[$];te=Y[$];for(let se=0,ce=ne.length;se<ce;se++){const he=U(ne[se],te[se],W);Pe(he.x,he.y,-B)}}}const ue=p+g;for(let re=0;re<D;re++){const C=f?U(L[re],X[re],ue):L[re];_?(E.copy(b.normals[0]).multiplyScalar(C.x),S.copy(b.binormals[0]).multiplyScalar(C.y),w.copy(x[0]).add(E).add(S),Pe(w.x,w.y,w.z)):Pe(C.x,C.y,0)}for(let re=1;re<=u;re++)for(let C=0;C<D;C++){const B=f?U(L[C],X[C],ue):L[C];_?(E.copy(b.normals[re]).multiplyScalar(B.x),S.copy(b.binormals[re]).multiplyScalar(B.y),w.copy(x[re]).add(E).add(S),Pe(w.x,w.y,w.z)):Pe(B.x,B.y,h/u*re)}for(let re=m-1;re>=0;re--){const C=re/m,B=d*Math.cos(C*Math.PI/2),W=p*Math.sin(C*Math.PI/2)+g;for(let $=0,J=I.length;$<J;$++){const ne=U(I[$],V[$],W);Pe(ne.x,ne.y,h+B)}for(let $=0,J=N.length;$<J;$++){const ne=N[$];te=Y[$];for(let se=0,ce=ne.length;se<ce;se++){const he=U(ne[se],te[se],W);_?Pe(he.x,he.y+x[u-1].y,x[u-1].x+B):Pe(he.x,he.y,h+B)}}}me(),ge();function me(){const re=i.length/3;if(f){let C=0,B=D*C;for(let W=0;W<j;W++){const $=O[W];Ae($[2]+B,$[1]+B,$[0]+B)}C=u+m*2,B=D*C;for(let W=0;W<j;W++){const $=O[W];Ae($[0]+B,$[1]+B,$[2]+B)}}else{for(let C=0;C<j;C++){const B=O[C];Ae(B[2],B[1],B[0])}for(let C=0;C<j;C++){const B=O[C];Ae(B[0]+D*u,B[1]+D*u,B[2]+D*u)}}n.addGroup(re,i.length/3-re,0)}function ge(){const re=i.length/3;let C=0;Q(I,C),C+=I.length;for(let B=0,W=N.length;B<W;B++){const $=N[B];Q($,C),C+=$.length}n.addGroup(re,i.length/3-re,1)}function Q(re,C){let B=re.length;for(;--B>=0;){const W=B;let $=B-1;$<0&&($=re.length-1);for(let J=0,ne=u+m*2;J<ne;J++){const se=D*J,ce=D*(J+1),he=C+W+se,R=C+$+se,T=C+$+ce,q=C+W+ce;Be(he,R,T,q)}}}function Pe(re,C,B){l.push(re),l.push(C),l.push(B)}function Ae(re,C,B){pe(re),pe(C),pe(B);const W=i.length/3,$=y.generateTopUV(n,i,W-3,W-2,W-1);De($[0]),De($[1]),De($[2])}function Be(re,C,B,W){pe(re),pe(C),pe(W),pe(C),pe(B),pe(W);const $=i.length/3,J=y.generateSideWallUV(n,i,$-6,$-3,$-2,$-1);De(J[0]),De(J[1]),De(J[3]),De(J[1]),De(J[2]),De(J[3])}function pe(re){i.push(l[re*3+0]),i.push(l[re*3+1]),i.push(l[re*3+2])}function De(re){r.push(re.x),r.push(re.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return WL(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,o=e.shapes.length;r<o;r++){const a=t[e.shapes[r]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new xp[i.type]().fromJSON(i)),new pi(n,e.options)}}const GL={generateTopUV:function(s,e,t,n,i){const r=e[t*3],o=e[t*3+1],a=e[n*3],l=e[n*3+1],c=e[i*3],u=e[i*3+1];return[new ae(r,o),new ae(a,l),new ae(c,u)]},generateSideWallUV:function(s,e,t,n,i,r){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[n*3],u=e[n*3+1],h=e[n*3+2],f=e[i*3],d=e[i*3+1],p=e[i*3+2],g=e[r*3],m=e[r*3+1],v=e[r*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new ae(o,1-l),new ae(c,1-h),new ae(f,1-p),new ae(g,1-v)]:[new ae(a,1-l),new ae(u,1-h),new ae(d,1-p),new ae(m,1-v)]}};function WL(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Lo extends di{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Lo(e.radius,e.detail)}}class mr extends di{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new mr(e.radius,e.detail)}}class Po extends ze{constructor(e=.5,t=1,n=8,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],u=[];let h=e;const f=(t-e)/i,d=new P,p=new ae;for(let g=0;g<=i;g++){for(let m=0;m<=n;m++){const v=r+m/n*o;d.x=h*Math.cos(v),d.y=h*Math.sin(v),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=f}for(let g=0;g<i;g++){const m=g*(n+1);for(let v=0;v<n;v++){const y=v+m,x=y,_=y+n+1,b=y+n+2,S=y+1;a.push(x,_,S),a.push(_,b,S)}}this.setIndex(a),this.setAttribute("position",new Le(l,3)),this.setAttribute("normal",new Le(c,3)),this.setAttribute("uv",new Le(u,2))}static fromJSON(e){return new Po(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class gr extends ze{constructor(e=new ai([new ae(0,.5),new ae(-.5,-.5),new ae(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new Le(i,3)),this.setAttribute("normal",new Le(r,3)),this.setAttribute("uv",new Le(o,2));function c(u){const h=i.length/3,f=u.extractPoints(t);let d=f.shape;const p=f.holes;li.isClockWise(d)===!1&&(d=d.reverse());for(let m=0,v=p.length;m<v;m++){const y=p[m];li.isClockWise(y)===!0&&(p[m]=y.reverse())}const g=li.triangulateShape(d,p);for(let m=0,v=p.length;m<v;m++){const y=p[m];d=d.concat(y)}for(let m=0,v=d.length;m<v;m++){const y=d[m];i.push(y.x,y.y,0),r.push(0,0,1),o.push(y.x,y.y)}for(let m=0,v=g.length;m<v;m++){const y=g[m],x=y[0]+h,_=y[1]+h,b=y[2]+h;n.push(x,_,b),l+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return qL(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const o=t[e.shapes[i]];n.push(o)}return new gr(n,e.curveSegments)}}function qL(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class yr extends ze{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new P,f=new P,d=[],p=[],g=[],m=[];for(let v=0;v<=n;v++){const y=[],x=v/n;let _=0;v==0&&o==0?_=.5/t:v==n&&l==Math.PI&&(_=-.5/t);for(let b=0;b<=t;b++){const S=b/t;h.x=-e*Math.cos(i+S*r)*Math.sin(o+x*a),h.y=e*Math.cos(o+x*a),h.z=e*Math.sin(i+S*r)*Math.sin(o+x*a),p.push(h.x,h.y,h.z),f.copy(h).normalize(),g.push(f.x,f.y,f.z),m.push(S+_,1-x),y.push(c++)}u.push(y)}for(let v=0;v<n;v++)for(let y=0;y<t;y++){const x=u[v][y+1],_=u[v][y],b=u[v+1][y],S=u[v+1][y+1];(v!==0||o>0)&&d.push(x,_,S),(v!==n-1||l<Math.PI)&&d.push(_,b,S)}this.setIndex(d),this.setAttribute("position",new Le(p,3)),this.setAttribute("normal",new Le(g,3)),this.setAttribute("uv",new Le(m,2))}static fromJSON(e){return new yr(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Io extends di{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Io(e.radius,e.detail)}}class Fo extends ze{constructor(e=1,t=.4,n=8,i=6,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],l=[],c=[],u=new P,h=new P,f=new P;for(let d=0;d<=n;d++)for(let p=0;p<=i;p++){const g=p/i*r,m=d/n*Math.PI*2;h.x=(e+t*Math.cos(m))*Math.cos(g),h.y=(e+t*Math.cos(m))*Math.sin(g),h.z=t*Math.sin(m),a.push(h.x,h.y,h.z),u.x=e*Math.cos(g),u.y=e*Math.sin(g),f.subVectors(h,u).normalize(),l.push(f.x,f.y,f.z),c.push(p/i),c.push(d/n)}for(let d=1;d<=n;d++)for(let p=1;p<=i;p++){const g=(i+1)*d+p-1,m=(i+1)*(d-1)+p-1,v=(i+1)*(d-1)+p,y=(i+1)*d+p;o.push(g,m,y),o.push(m,v,y)}this.setIndex(o),this.setAttribute("position",new Le(a,3)),this.setAttribute("normal",new Le(l,3)),this.setAttribute("uv",new Le(c,2))}static fromJSON(e){return new Fo(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Bo extends ze{constructor(e=1,t=.4,n=64,i=8,r=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],c=[],u=[],h=new P,f=new P,d=new P,p=new P,g=new P,m=new P,v=new P;for(let x=0;x<=n;++x){const _=x/n*r*Math.PI*2;y(_,r,o,e,d),y(_+.01,r,o,e,p),m.subVectors(p,d),v.addVectors(p,d),g.crossVectors(m,v),v.crossVectors(g,m),g.normalize(),v.normalize();for(let b=0;b<=i;++b){const S=b/i*Math.PI*2,E=-t*Math.cos(S),w=t*Math.sin(S);h.x=d.x+(E*v.x+w*g.x),h.y=d.y+(E*v.y+w*g.y),h.z=d.z+(E*v.z+w*g.z),l.push(h.x,h.y,h.z),f.subVectors(h,d).normalize(),c.push(f.x,f.y,f.z),u.push(x/n),u.push(b/i)}}for(let x=1;x<=n;x++)for(let _=1;_<=i;_++){const b=(i+1)*(x-1)+(_-1),S=(i+1)*x+(_-1),E=(i+1)*x+_,w=(i+1)*(x-1)+_;a.push(b,S,w),a.push(S,E,w)}this.setIndex(a),this.setAttribute("position",new Le(l,3)),this.setAttribute("normal",new Le(c,3)),this.setAttribute("uv",new Le(u,2));function y(x,_,b,S,E){const w=Math.cos(x),A=Math.sin(x),L=b/_*x,N=Math.cos(L);E.x=S*(2+N)*.5*w,E.y=S*(2+N)*A*.5,E.z=S*Math.sin(L)*.5}}static fromJSON(e){return new Bo(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Do extends ze{constructor(e=new Yu(new P(-1,-1,0),new P(-1,1,0),new P(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new P,l=new P,c=new ae;let u=new P;const h=[],f=[],d=[],p=[];g(),this.setIndex(p),this.setAttribute("position",new Le(h,3)),this.setAttribute("normal",new Le(f,3)),this.setAttribute("uv",new Le(d,2));function g(){for(let x=0;x<t;x++)m(x);m(r===!1?t:0),y(),v()}function m(x){u=e.getPointAt(x/t,u);const _=o.normals[x],b=o.binormals[x];for(let S=0;S<=i;S++){const E=S/i*Math.PI*2,w=Math.sin(E),A=-Math.cos(E);l.x=A*_.x+w*b.x,l.y=A*_.y+w*b.y,l.z=A*_.z+w*b.z,l.normalize(),f.push(l.x,l.y,l.z),a.x=u.x+n*l.x,a.y=u.y+n*l.y,a.z=u.z+n*l.z,h.push(a.x,a.y,a.z)}}function v(){for(let x=1;x<=t;x++)for(let _=1;_<=i;_++){const b=(i+1)*(x-1)+(_-1),S=(i+1)*x+(_-1),E=(i+1)*x+_,w=(i+1)*(x-1)+_;p.push(b,S,w),p.push(S,E,w)}}function y(){for(let x=0;x<=t;x++)for(let _=0;_<=i;_++)c.x=x/t,c.y=_/i,d.push(c.x,c.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Do(new xp[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class wp extends ze{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new P,r=new P;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const h=l[c],f=h.start,d=h.count;for(let p=f,g=f+d;p<g;p+=3)for(let m=0;m<3;m++){const v=a.getX(p+m),y=a.getX(p+(m+1)%3);i.fromBufferAttribute(o,v),r.fromBufferAttribute(o,y),$g(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const u=3*a+c,h=3*a+(c+1)%3;i.fromBufferAttribute(o,u),r.fromBufferAttribute(o,h),$g(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Le(t,3))}}}function $g(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Yg=Object.freeze({__proto__:null,BoxGeometry:Oi,BoxBufferGeometry:Oi,CapsuleGeometry:To,CapsuleBufferGeometry:To,CircleGeometry:Ao,CircleBufferGeometry:Ao,ConeGeometry:Co,ConeBufferGeometry:Co,CylinderGeometry:bs,CylinderBufferGeometry:bs,DodecahedronGeometry:Ro,DodecahedronBufferGeometry:Ro,EdgesGeometry:_p,ExtrudeGeometry:pi,ExtrudeBufferGeometry:pi,IcosahedronGeometry:Lo,IcosahedronBufferGeometry:Lo,LatheGeometry:pr,LatheBufferGeometry:pr,OctahedronGeometry:mr,OctahedronBufferGeometry:mr,PlaneGeometry:_s,PlaneBufferGeometry:_s,PolyhedronGeometry:di,PolyhedronBufferGeometry:di,RingGeometry:Po,RingBufferGeometry:Po,ShapeGeometry:gr,ShapeBufferGeometry:gr,SphereGeometry:yr,SphereBufferGeometry:yr,TetrahedronGeometry:Io,TetrahedronBufferGeometry:Io,TorusGeometry:Fo,TorusBufferGeometry:Fo,TorusKnotGeometry:Bo,TorusKnotBufferGeometry:Bo,TubeGeometry:Do,TubeBufferGeometry:Do,WireframeGeometry:wp});class bp extends Ct{constructor(e){super(),this.type="ShadowMaterial",this.color=new Me(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}bp.prototype.isShadowMaterial=!0;class Mp extends Rn{constructor(e){super(e),this.type="RawShaderMaterial"}}Mp.prototype.isRawShaderMaterial=!0;class bl extends Ct{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Me(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Me(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=br,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}bl.prototype.isMeshStandardMaterial=!0;class Sp extends bl{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ae(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Et(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new Me(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Me(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Me(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}Sp.prototype.isMeshPhysicalMaterial=!0;class po extends Ct{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Me(16777215),this.specular=new Me(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Me(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=br,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=cl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}po.prototype.isMeshPhongMaterial=!0;class Ep extends Ct{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Me(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Me(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=br,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}Ep.prototype.isMeshToonMaterial=!0;class Tp extends Ct{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=br,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}Tp.prototype.isMeshNormalMaterial=!0;class Ju extends Ct{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Me(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Me(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=cl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}Ju.prototype.isMeshLambertMaterial=!0;class Ap extends Ct{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Me(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=br,this.normalScale=new ae(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}Ap.prototype.isMeshMatcapMaterial=!0;class Cp extends Ot{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Cp.prototype.isLineDashedMaterial=!0;const jL={ShadowMaterial:bp,SpriteMaterial:qu,RawShaderMaterial:Mp,ShaderMaterial:Rn,PointsMaterial:Sr,MeshPhysicalMaterial:Sp,MeshStandardMaterial:bl,MeshPhongMaterial:po,MeshToonMaterial:Ep,MeshNormalMaterial:Tp,MeshLambertMaterial:Ju,MeshDepthMaterial:Gu,MeshDistanceMaterial:Wu,MeshBasicMaterial:Wi,MeshMatcapMaterial:Ap,LineDashedMaterial:Cp,LineBasicMaterial:Ot,Material:Ct};Ct.fromType=function(s){return new jL[s]};const ht={arraySlice:function(s,e,t){return ht.isTypedArray(s)?new s.constructor(s.subarray(e,t!==void 0?t:s.length)):s.slice(e,t)},convertArray:function(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)},isTypedArray:function(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)},getKeyframeOrder:function(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n},sortedArray:function(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,o=0;o!==n;++r){const a=t[r]*e;for(let l=0;l!==e;++l)i[o++]=s[a+l]}return i},flattenJSON:function(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let o=r[n];if(o!==void 0)if(Array.isArray(o))do o=r[n],o!==void 0&&(e.push(r.time),t.push.apply(t,o)),r=s[i++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[n],o!==void 0&&(e.push(r.time),o.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do o=r[n],o!==void 0&&(e.push(r.time),t.push(o)),r=s[i++];while(r!==void 0)},subclip:function(s,e,t,n,i=30){const r=s.clone();r.name=e;const o=[];for(let l=0;l<r.tracks.length;++l){const c=r.tracks[l],u=c.getValueSize(),h=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*i;if(!(p<t||p>=n)){h.push(c.times[d]);for(let g=0;g<u;++g)f.push(c.values[d*u+g])}}h.length!==0&&(c.times=ht.convertArray(h,c.times.constructor),c.values=ht.convertArray(f,c.values.constructor),o.push(c))}r.tracks=o;let a=1/0;for(let l=0;l<r.tracks.length;++l)a>r.tracks[l].times[0]&&(a=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*a);return r.resetDuration(),r},makeClipAdditive:function(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=s.tracks.find(function(v){return v.name===a.name&&v.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=a.times.length-1;let g;if(r<=a.times[0]){const v=u,y=h-u;g=ht.arraySlice(a.values,v,y)}else if(r>=a.times[p]){const v=p*h+u,y=v+h-u;g=ht.arraySlice(a.values,v,y)}else{const v=a.createInterpolant(),y=u,x=h-u;v.evaluate(r),g=ht.arraySlice(v.resultBuffer,y,x)}l==="quaternion"&&new gt().fromArray(g).normalize().conjugate().toArray(g);const m=c.times.length;for(let v=0;v<m;++v){const y=v*d+f;if(l==="quaternion")gt.multiplyQuaternionsFlat(c.values,y,g,0,c.values,y);else{const x=d-f*2;for(let _=0;_<x;++_)c.values[y+_]-=g[_]}}}return s.blendMode=ap,s}};class Ui{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,r)}if(n===a)break;if(r=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=r)){const a=t[1];e<a&&(n=2,r=a);for(let l=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===l)break;if(i=r,r=t[--n-1],e>=r)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,r,e)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let o=0;o!==i;++o)t[o]=n[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Ui.prototype.beforeStart_=Ui.prototype.copySampleValue_;Ui.prototype.afterEnd_=Ui.prototype.copySampleValue_;class Jx extends Ui{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ks,endingEnd:Ks}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,o=e+1,a=i[r],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case Js:r=e,a=2*t-n;break;case Ya:r=i.length-2,a=t+i[r]-i[r+1];break;default:r=e,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Js:o=e,l=2*n-t;break;case Ya:o=1,l=n+i[1]-i[0];break;default:o=e-1,l=t}const c=(n-t)*.5,u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-n),this._offsetPrev=r*u,this._offsetNext=o*u}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(n-t)/(i-t),g=p*p,m=g*p,v=-f*m+2*f*g-f*p,y=(1+f)*m+(-1.5-2*f)*g+(-.5+f)*p+1,x=(-1-d)*m+(1.5+d)*g+.5*p,_=d*m-d*g;for(let b=0;b!==a;++b)r[b]=v*o[u+b]+y*o[c+b]+x*o[l+b]+_*o[h+b];return r}}class Rp extends Ui{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=(n-t)/(i-t),h=1-u;for(let f=0;f!==a;++f)r[f]=o[c+f]*h+o[l+f]*u;return r}}class Qx extends Ui{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class qn{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ht.convertArray(t,this.TimeBufferType),this.values=ht.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ht.convertArray(e.times,Array),values:ht.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Qx(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Rp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Jx(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Xa:t=this.InterpolantFactoryMethodDiscrete;break;case $a:t=this.InterpolantFactoryMethodLinear;break;case Xc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Xa;case this.InterpolantFactoryMethodLinear:return $a;case this.InterpolantFactoryMethodSmooth:return Xc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,o=i-1;for(;r!==i&&n[r]<e;)++r;for(;o!==-1&&n[o]>t;)--o;if(++o,r!==0||o!==i){r>=o&&(o=Math.max(o,1),r=o-1);const a=this.getValueSize();this.times=ht.arraySlice(n,r,o),this.values=ht.arraySlice(this.values,r*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==r;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(i!==void 0&&ht.isTypedArray(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=ht.arraySlice(this.times),t=ht.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===Xc,r=e.length-1;let o=1;for(let a=1;a<r;++a){let l=!1;const c=e[a],u=e[a+1];if(c!==u&&(a!==1||c!==e[0]))if(i)l=!0;else{const h=a*n,f=h-n,d=h+n;for(let p=0;p!==n;++p){const g=t[h+p];if(g!==t[f+p]||g!==t[d+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*n,f=o*n;for(let d=0;d!==n;++d)t[f+d]=t[h+d]}++o}}if(r>0){e[o]=e[r];for(let a=r*n,l=o*n,c=0;c!==n;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=ht.arraySlice(e,0,o),this.values=ht.arraySlice(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=ht.arraySlice(this.times,0),t=ht.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}qn.prototype.TimeBufferType=Float32Array;qn.prototype.ValueBufferType=Float32Array;qn.prototype.DefaultInterpolation=$a;class Er extends qn{}Er.prototype.ValueTypeName="bool";Er.prototype.ValueBufferType=Array;Er.prototype.DefaultInterpolation=Xa;Er.prototype.InterpolantFactoryMethodLinear=void 0;Er.prototype.InterpolantFactoryMethodSmooth=void 0;class Lp extends qn{}Lp.prototype.ValueTypeName="color";class zo extends qn{}zo.prototype.ValueTypeName="number";class e_ extends Ui{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(i-t);let c=e*a;for(let u=c+a;c!==u;c+=4)gt.slerpFlat(r,0,o,c-a,o,c,l);return r}}class Tr extends qn{InterpolantFactoryMethodLinear(e){return new e_(this.times,this.values,this.getValueSize(),e)}}Tr.prototype.ValueTypeName="quaternion";Tr.prototype.DefaultInterpolation=$a;Tr.prototype.InterpolantFactoryMethodSmooth=void 0;class Ar extends qn{}Ar.prototype.ValueTypeName="string";Ar.prototype.ValueBufferType=Array;Ar.prototype.DefaultInterpolation=Xa;Ar.prototype.InterpolantFactoryMethodLinear=void 0;Ar.prototype.InterpolantFactoryMethodSmooth=void 0;class No extends qn{}No.prototype.ValueTypeName="vector";class Oo{constructor(e,t=-1,n,i=Nu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=yn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push($L(n[o]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=n.length;r!==o;++r)t.push(qn.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,o=[];for(let a=0;a<r;a++){let l=[],c=[];l.push((a+r-1)%r,a,(a+1)%r),c.push(0,1,0);const u=ht.getKeyframeOrder(l);l=ht.sortedArray(l,1,u),c=ht.sortedArray(c,1,u),!i&&l[0]===0&&(l.push(r),c.push(c[0])),o.push(new zo(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],u=c.name.match(r);if(u&&u.length>1){const h=u[1];let f=i[h];f||(i[h]=f=[]),f.push(c)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,f,d,p,g){if(d.length!==0){const m=[],v=[];ht.flattenJSON(d,m,v,p),m.length!==0&&g.push(new h(f,m,v))}},i=[],r=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const f=c[h].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let g=0;g<f[p].morphTargets.length;g++)d[f[p].morphTargets[g]]=-1;for(const g in d){const m=[],v=[];for(let y=0;y!==f[p].morphTargets.length;++y){const x=f[p];m.push(x.time),v.push(x.morphTarget===g?1:0)}i.push(new zo(".morphTargetInfluence["+g+"]",m,v))}l=d.length*o}else{const d=".bones["+t[h].name+"]";n(No,d+".position",f,"pos",i),n(Tr,d+".quaternion",f,"rot",i),n(No,d+".scale",f,"scl",i)}}return i.length===0?null:new this(r,l,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function XL(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return zo;case"vector":case"vector2":case"vector3":case"vector4":return No;case"color":return Lp;case"quaternion":return Tr;case"bool":case"boolean":return Er;case"string":return Ar}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function $L(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=XL(s.type);if(s.times===void 0){const t=[],n=[];ht.flattenJSON(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const vr={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Qu{constructor(e,t,n){const i=this;let r=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,r===!1&&i.onStart!==void 0&&i.onStart(u,o,a),r=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],p=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return p}return null}}}const t_=new Qu;class Yt{constructor(e){this.manager=e!==void 0?e:t_,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Mi={};class Gn extends Yt{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=vr.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Mi[e]!==void 0){Mi[e].push({onLoad:t,onProgress:n,onError:i});return}Mi[e]=[],Mi[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||c.body===void 0||c.body.getReader===void 0)return c;const u=Mi[e],h=c.body.getReader(),f=c.headers.get("Content-Length"),d=f?parseInt(f):0,p=d!==0;let g=0;const m=new ReadableStream({start(v){y();function y(){h.read().then(({done:x,value:_})=>{if(x)v.close();else{g+=_.byteLength;const b=new ProgressEvent("progress",{lengthComputable:p,loaded:g,total:d});for(let S=0,E=u.length;S<E;S++){const w=u[S];w.onProgress&&w.onProgress(b)}v.enqueue(_),y()}})}}});return new Response(m)}else throw Error(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a===void 0)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),f=h&&h[1]?h[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(p=>d.decode(p))}}}).then(c=>{vr.add(e,c);const u=Mi[e];delete Mi[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onLoad&&d.onLoad(c)}}).catch(c=>{const u=Mi[e];if(u===void 0)throw this.manager.itemError(e),c;delete Mi[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class YL extends Yt{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Gn(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Oo.parse(e[n]);t.push(i)}return t}}class ZL extends Yt{constructor(e){super(e)}load(e,t,n,i){const r=this,o=[],a=new pp,l=new Gn(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(r.withCredentials);let c=0;function u(h){l.load(e[h],function(f){const d=r.parse(f,!0);o[h]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},c+=1,c===6&&(d.mipmapCount===1&&(a.minFilter=St),a.image=o,a.format=d.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let h=0,f=e.length;h<f;++h)u(h);else l.load(e,function(h){const f=r.parse(h,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let p=0;p<d;p++){o[p]={mipmaps:[]};for(let g=0;g<f.mipmapCount;g++)o[p].mipmaps.push(f.mipmaps[p*f.mipmapCount+g]),o[p].format=f.format,o[p].width=f.width,o[p].height=f.height}a.image=o}else a.image.width=f.width,a.image.height=f.height,a.mipmaps=f.mipmaps;f.mipmapCount===1&&(a.minFilter=St),a.format=f.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class tl extends Yt{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=vr.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const a=Ka("img");function l(){u(),vr.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(h){u(),i&&i(h),r.manager.itemError(e),r.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class n_ extends Yt{constructor(e){super(e)}load(e,t,n,i){const r=new $o,o=new tl(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(u){r.images[c]=u,a++,a===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return r}}class i_ extends Yt{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new or,a=new Gn(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,function(l){const c=r.parse(l);!c||(c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:qt,o.wrapT=c.wrapT!==void 0?c.wrapT:qt,o.magFilter=c.magFilter!==void 0?c.magFilter:St,o.minFilter=c.minFilter!==void 0?c.minFilter:St,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.encoding!==void 0&&(o.encoding=c.encoding),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=wr),c.mipmapCount===1&&(o.minFilter=St),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c))},n,i),o}}class eh extends Yt{constructor(e){super(e)}load(e,t,n,i){const r=new _t,o=new tl(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){r.image=a,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class Wn extends Ve{constructor(e,t=1){super(),this.type="Light",this.color=new Me(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}Wn.prototype.isLight=!0;class Pp extends Wn{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(Ve.DefaultUp),this.updateMatrix(),this.groundColor=new Me(t)}copy(e){return Wn.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}Pp.prototype.isHemisphereLight=!0;const Zg=new we,Kg=new P,Jg=new P;class Ip{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ae(512,512),this.map=null,this.mapPass=null,this.matrix=new we,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new dl,this._frameExtents=new ae(1,1),this._viewportCount=1,this._viewports=[new Je(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Kg.setFromMatrixPosition(e.matrixWorld),t.position.copy(Kg),Jg.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Jg),t.updateMatrixWorld(),Zg.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Zg),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class s_ extends Ip{constructor(){super(new Ft(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=Za*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}s_.prototype.isSpotLightShadow=!0;class th extends Wn{constructor(e,t,n=0,i=Math.PI/3,r=0,o=1){super(e,t),this.type="SpotLight",this.position.copy(Ve.DefaultUp),this.updateMatrix(),this.target=new Ve,this.distance=n,this.angle=i,this.penumbra=r,this.decay=o,this.shadow=new s_}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}th.prototype.isSpotLight=!0;const Qg=new we,ya=new P,nf=new P;class r_ extends Ip{constructor(){super(new Ft(90,1,.5,500)),this._frameExtents=new ae(4,2),this._viewportCount=6,this._viewports=[new Je(2,1,1,1),new Je(0,1,1,1),new Je(3,1,1,1),new Je(1,1,1,1),new Je(3,0,1,1),new Je(1,0,1,1)],this._cubeDirections=[new P(1,0,0),new P(-1,0,0),new P(0,0,1),new P(0,0,-1),new P(0,1,0),new P(0,-1,0)],this._cubeUps=[new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,0,1),new P(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),ya.setFromMatrixPosition(e.matrixWorld),n.position.copy(ya),nf.copy(n.position),nf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(nf),n.updateMatrixWorld(),i.makeTranslation(-ya.x,-ya.y,-ya.z),Qg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Qg)}}r_.prototype.isPointLightShadow=!0;class nl extends Wn{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new r_}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}nl.prototype.isPointLight=!0;class o_ extends Ip{constructor(){super(new Yo(-5,5,5,-5,.5,500))}}o_.prototype.isDirectionalLightShadow=!0;class Ml extends Wn{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Ve.DefaultUp),this.updateMatrix(),this.target=new Ve,this.shadow=new o_}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Ml.prototype.isDirectionalLight=!0;class Sl extends Wn{constructor(e,t){super(e,t),this.type="AmbientLight"}}Sl.prototype.isAmbientLight=!0;class Fp extends Wn{constructor(e,t,n=10,i=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}Fp.prototype.isRectAreaLight=!0;class Bp{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new P)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(n*r)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*n*r),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}Bp.prototype.isSphericalHarmonics3=!0;class El extends Wn{constructor(e=new Bp,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}El.prototype.isLightProbe=!0;class a_ extends Yt{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,o=new Gn(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=Ct.fromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Me().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const o=e.uniforms[r];switch(i.uniforms[r]={},o.type){case"t":i.uniforms[r].value=n(o.value);break;case"c":i.uniforms[r].value=new Me().setHex(o.value);break;case"v2":i.uniforms[r].value=new ae().fromArray(o.value);break;case"v3":i.uniforms[r].value=new P().fromArray(o.value);break;case"v4":i.uniforms[r].value=new Je().fromArray(o.value);break;case"m3":i.uniforms[r].value=new Bt().fromArray(o.value);break;case"m4":i.uniforms[r].value=new we().fromArray(o.value);break;default:i.uniforms[r].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.shading!==void 0&&(i.flatShading=e.shading===1),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new ae().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ae().fromArray(e.clearcoatNormalScale)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}}class xr{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Dp extends ze{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}Dp.prototype.isInstancedBufferGeometry=!0;class l_ extends Yt{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Gn(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(d,p){if(t[p]!==void 0)return t[p];const m=d.interleavedBuffers[p],v=r(d,m.buffer),y=ro(m.type,v),x=new Mr(y,m.stride);return x.uuid=m.uuid,t[p]=x,x}function r(d,p){if(n[p]!==void 0)return n[p];const m=d.arrayBuffers[p],v=new Uint32Array(m).buffer;return n[p]=v,v}const o=e.isInstancedBufferGeometry?new Dp:new ze,a=e.data.index;if(a!==void 0){const d=ro(a.type,a.array);o.setIndex(new Qe(d,1))}const l=e.data.attributes;for(const d in l){const p=l[d];let g;if(p.isInterleavedBufferAttribute){const m=i(e.data,p.data);g=new ws(m,p.itemSize,p.offset,p.normalized)}else{const m=ro(p.type,p.array),v=p.isInstancedBufferAttribute?dr:Qe;g=new v(m,p.itemSize,p.normalized)}p.name!==void 0&&(g.name=p.name),p.usage!==void 0&&g.setUsage(p.usage),p.updateRange!==void 0&&(g.updateRange.offset=p.updateRange.offset,g.updateRange.count=p.updateRange.count),o.setAttribute(d,g)}const c=e.data.morphAttributes;if(c)for(const d in c){const p=c[d],g=[];for(let m=0,v=p.length;m<v;m++){const y=p[m];let x;if(y.isInterleavedBufferAttribute){const _=i(e.data,y.data);x=new ws(_,y.itemSize,y.offset,y.normalized)}else{const _=ro(y.type,y.array);x=new Qe(_,y.itemSize,y.normalized)}y.name!==void 0&&(x.name=y.name),g.push(x)}o.morphAttributes[d]=g}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let d=0,p=h.length;d!==p;++d){const g=h[d];o.addGroup(g.start,g.count,g.materialIndex)}const f=e.data.boundingSphere;if(f!==void 0){const d=new P;f.center!==void 0&&d.fromArray(f.center),o.boundingSphere=new As(d,f.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class KL extends Yt{constructor(e){super(e)}load(e,t,n,i){const r=this,o=this.path===""?xr.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Gn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(c,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?xr.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new Gn(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const o=await r.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,r,l,a,n),u=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,u),t!==void 0){let h=!1;for(const f in o)if(o[f]instanceof HTMLImageElement){h=!0;break}h===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,i,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new ai().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=new vl().fromJSON(e[r],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new l_;for(let r=0,o=e.length;r<o;r++){let a;const l=e[r];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:l.type in Yg?a=Yg[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),a.isBufferGeometry===!0&&l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new a_;r.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];if(l.type==="MultiMaterial"){const c=[];for(let u=0;u<l.materials.length;u++){const h=l.materials[u];n[h.uuid]===void 0&&(n[h.uuid]=r.parse(h)),c.push(n[h.uuid])}i[l.uuid]=c}else n[l.uuid]===void 0&&(n[l.uuid]=r.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=Oo.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function o(l){return n.manager.itemStart(l),r.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return o(u)}else return l.data?{data:ro(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new Qu(t);r=new tl(l),r.setCrossOrigin(this.crossOrigin);for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.url;if(Array.isArray(f)){const d=[];for(let p=0,g=f.length;p<g;p++){const m=f[p],v=a(m);v!==null&&(v instanceof HTMLImageElement?d.push(v):d.push(new or(v.data,v.width,v.height)))}i[h.uuid]=new Qs(d)}else{const d=a(h.url);i[h.uuid]=new Qs(d)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(l)}else return o.data?{data:ro(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new tl(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){const u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h],p=await r(d);p!==null&&(p instanceof HTMLImageElement?u.push(p):u.push(new or(p.data,p.width,p.height)))}n[l.uuid]=new Qs(u)}else{const u=await r(l.url);n[l.uuid]=new Qs(u)}}}return n}parseTextures(e,t){function n(r,o){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),o[r])}const i={};if(e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=e[r];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let u;Array.isArray(c)?(u=new $o,c.length===6&&(u.needsUpdate=!0)):(c&&c.data?u=new or:u=new _t,c&&(u.needsUpdate=!0)),u.source=l,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,JL)),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],e0),u.wrapT=n(a.wrap[1],e0)),a.format!==void 0&&(u.format=a.format),a.type!==void 0&&(u.type=a.type),a.encoding!==void 0&&(u.encoding=a.encoding),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,t0)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,t0)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.userData!==void 0&&(u.userData=a.userData),i[a.uuid]=u}return i}parseObject(e,t,n,i,r){let o;function a(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let p=0,g=f.length;p<g;p++){const m=f[p];n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),d.push(n[m])}return d}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function c(f){return i[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),i[f]}let u,h;switch(e.type){case"Scene":o=new gl,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Me(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new ml(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new pl(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new Ft(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new Yo(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new Sl(e.color,e.intensity);break;case"DirectionalLight":o=new Ml(e.color,e.intensity);break;case"PointLight":o=new nl(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new Fp(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new th(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new Pp(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new El().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),h=l(e.material),o=new yl(u,h),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),h=l(e.material),o=new xt(u,h);break;case"InstancedMesh":u=a(e.geometry),h=l(e.material);const f=e.count,d=e.instanceMatrix,p=e.instanceColor;o=new fp(u,h,f),o.instanceMatrix=new dr(new Float32Array(d.array),16),p!==void 0&&(o.instanceColor=new dr(new Float32Array(p.array),p.itemSize));break;case"LOD":o=new Gx;break;case"Line":o=new fi(a(e.geometry),l(e.material));break;case"LineLoop":o=new dp(a(e.geometry),l(e.material));break;case"LineSegments":o=new un(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new xl(a(e.geometry),l(e.material));break;case"Sprite":o=new ju(l(e.material));break;case"Group":o=new Pi;break;case"Bone":o=new So;break;default:o=new Ve}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let d=0;d<f.length;d++)o.add(this.parseObject(f[d],t,n,i,r))}if(e.animations!==void 0){const f=e.animations;for(let d=0;d<f.length;d++){const p=f[d];o.animations.push(r[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const f=e.levels;for(let d=0;d<f.length;d++){const p=f[d],g=o.getObjectByProperty("uuid",p.object);g!==void 0&&o.addLevel(g,p.distance)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const JL={UVMapping:zu,CubeReflectionMapping:ys,CubeRefractionMapping:vs,EquirectangularReflectionMapping:vo,EquirectangularRefractionMapping:qa,CubeUVReflectionMapping:jo},e0={RepeatWrapping:hr,ClampToEdgeWrapping:qt,MirroredRepeatWrapping:ja},t0={NearestFilter:It,NearestMipmapNearestFilter:fu,NearestMipmapLinearFilter:du,LinearFilter:St,LinearMipmapNearestFilter:op,LinearMipmapLinearFilter:wr};class c_ extends Yt{constructor(e){super(e),typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=vr.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(l){vr.add(e,l),t&&t(l),r.manager.itemEnd(e)}).catch(function(l){i&&i(l),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}c_.prototype.isImageBitmapLoader=!0;let bc;const zp={getContext:function(){return bc===void 0&&(bc=new(window.AudioContext||window.webkitAudioContext)),bc},setContext:function(s){bc=s}};class u_ extends Yt{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Gn(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const l=a.slice(0);zp.getContext().decodeAudioData(l,function(u){t(u)})}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}}class h_ extends El{constructor(e,t,n=1){super(void 0,n);const i=new Me().set(e),r=new Me().set(t),o=new P(i.r,i.g,i.b),a=new P(r.r,r.g,r.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c)}}h_.prototype.isHemisphereLightProbe=!0;class f_ extends El{constructor(e,t=1){super(void 0,t);const n=new Me().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}f_.prototype.isAmbientLightProbe=!0;const n0=new we,i0=new we,Ds=new we;class QL{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Ft,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Ft,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Ds.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,o=t.near*Math.tan(sr*t.fov*.5)/t.zoom;let a,l;i0.elements[12]=-i,n0.elements[12]=i,a=-o*t.aspect+r,l=o*t.aspect+r,Ds.elements[0]=2*t.near/(l-a),Ds.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(Ds),a=-o*t.aspect-r,l=o*t.aspect-r,Ds.elements[0]=2*t.near/(l-a),Ds.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(Ds)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(i0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(n0)}}class d_{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=s0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=s0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function s0(){return(typeof performance=="undefined"?Date:performance).now()}const zs=new P,r0=new gt,eP=new P,Ns=new P;class tP extends Ve{constructor(){super(),this.type="AudioListener",this.context=zp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new d_}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(zs,r0,eP),Ns.set(0,0,-1).applyQuaternion(r0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(zs.x,i),t.positionY.linearRampToValueAtTime(zs.y,i),t.positionZ.linearRampToValueAtTime(zs.z,i),t.forwardX.linearRampToValueAtTime(Ns.x,i),t.forwardY.linearRampToValueAtTime(Ns.y,i),t.forwardZ.linearRampToValueAtTime(Ns.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(zs.x,zs.y,zs.z),t.setOrientation(Ns.x,Ns.y,Ns.z,n.x,n.y,n.z)}}class Np extends Ve{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Os=new P,o0=new gt,nP=new P,Us=new P;class iP extends Np{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Os,o0,nP),Us.set(0,0,1).applyQuaternion(o0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Os.x,n),t.positionY.linearRampToValueAtTime(Os.y,n),t.positionZ.linearRampToValueAtTime(Os.z,n),t.orientationX.linearRampToValueAtTime(Us.x,n),t.orientationY.linearRampToValueAtTime(Us.y,n),t.orientationZ.linearRampToValueAtTime(Us.z,n)}else t.setPosition(Os.x,Os.y,Os.z),t.setOrientation(Us.x,Us.y,Us.z)}}class p_{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class m_{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,o;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[r+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,r,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-r,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,o=i;r!==o;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let o=0;o!==r;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){gt.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const o=this._workIndex*r;gt.multiplyQuaternionsFlat(e,o,e,t,e,n),gt.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,r){const o=1-i;for(let a=0;a!==r;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,r){for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const Op="\\[\\]\\.:\\/",sP=new RegExp("["+Op+"]","g"),Up="[^"+Op+"]",rP="[^"+Op.replace("\\.","")+"]",oP=/((?:WC+[\/:])*)/.source.replace("WC",Up),aP=/(WCOD+)?/.source.replace("WCOD",rP),lP=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Up),cP=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Up),uP=new RegExp("^"+oP+aP+lP+cP+"$"),hP=["material","materials","bones"];class fP{constructor(e,t,n){const i=n||Xe.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Xe{constructor(e,t,n){this.path=t,this.parsedPath=n||Xe.parseTrackName(t),this.node=Xe.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Xe.Composite(e,t,n):new Xe(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(sP,"")}static parseTrackName(e){const t=uP.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);hP.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let o=0;o<r.length;o++){const a=r[o];if(a.name===t||a.uuid===t)return a;const l=n(a.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Xe.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===c){c=u;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[i];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Xe.Composite=fP;Xe.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Xe.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Xe.prototype.GetterByBindingType=[Xe.prototype._getValue_direct,Xe.prototype._getValue_array,Xe.prototype._getValue_arrayElement,Xe.prototype._getValue_toArray];Xe.prototype.SetterByBindingTypeAndVersioning=[[Xe.prototype._setValue_direct,Xe.prototype._setValue_direct_setNeedsUpdate,Xe.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Xe.prototype._setValue_array,Xe.prototype._setValue_array_setNeedsUpdate,Xe.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Xe.prototype._setValue_arrayElement,Xe.prototype._setValue_arrayElement_setNeedsUpdate,Xe.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Xe.prototype._setValue_fromArray,Xe.prototype._setValue_fromArray_setNeedsUpdate,Xe.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class g_{constructor(){this.uuid=yn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,o=r.length;let a,l=e.length,c=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const f=arguments[u],d=f.uuid;let p=t[d];if(p===void 0){p=l++,t[d]=p,e.push(f);for(let g=0,m=o;g!==m;++g)r[g].push(new Xe(f,n[g],i[g]))}else if(p<c){a=e[p];const g=--c,m=e[g];t[m.uuid]=p,e[p]=m,t[d]=g,e[g]=f;for(let v=0,y=o;v!==y;++v){const x=r[v],_=x[g];let b=x[p];x[p]=_,b===void 0&&(b=new Xe(f,n[v],i[v])),x[g]=b}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,u=t[c];if(u!==void 0&&u>=r){const h=r++,f=e[h];t[f.uuid]=u,e[u]=f,t[c]=h,e[h]=l;for(let d=0,p=i;d!==p;++d){const g=n[d],m=g[h],v=g[u];g[u]=m,g[h]=v}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],u=c.uuid,h=t[u];if(h!==void 0)if(delete t[u],h<r){const f=--r,d=e[f],p=--o,g=e[p];t[d.uuid]=h,e[h]=d,t[g.uuid]=f,e[f]=g,e.pop();for(let m=0,v=i;m!==v;++m){const y=n[m],x=y[f],_=y[p];y[h]=x,y[f]=_,y.pop()}}else{const f=--o,d=e[f];f>0&&(t[d.uuid]=h),e[h]=d,e.pop();for(let p=0,g=i;p!==g;++p){const m=n[p];m[h]=m[f],m.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,u=this.nCachedObjects_,h=new Array(c);i=r.length,n[e]=i,o.push(e),a.push(t),r.push(h);for(let f=u,d=l.length;f!==d;++f){const p=l[f];h[f]=new Xe(p,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=n,o[n]=l,o.pop(),r[n]=r[a],r.pop(),i[n]=i[a],i.pop()}}}g_.prototype.isAnimationObjectGroup=!0;class dP{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,o=r.length,a=new Array(o),l={endingStart:Ks,endingEnd:Ks};for(let c=0;c!==o;++c){const u=r[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=hx,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,o=r/i,a=i/r;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=r,l[1]=r+n,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*n;if(l<0||n===0)return;this._startTime=null,t=n*l}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case ap:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case Nu:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const o=n===fx;if(e===0)return r===-1?i:o&&(r&1)===1?t-i:i;if(n===ux){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,r+=Math.abs(a);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Js,i.endingEnd=Js):(e?i.endingStart=this.zeroSlopeAtStart?Js:Ks:i.endingStart=Ya,t?i.endingEnd=this.zeroSlopeAtEnd?Js:Ks:i.endingEnd=Ya)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=r,l[0]=t,a[1]=r+e,l[1]=n,this}}class kp extends Gi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let h=0;h!==r;++h){const f=i[h],d=f.name;let p=u[d];if(p!==void 0)++p.referenceCount,o[h]=p;else{if(p=o[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const g=t&&t._propertyBindings[h].binding.parsedPath;p=new m_(Xe.create(n,d,g),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),o[h]=p}a[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,a=o[r],l=a.knownActions,c=l[l.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),e._byClipCacheIndex=null;const h=a.actionByRoot,f=(e._localRoot||this._root).uuid;delete h[f],l.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,o=this._bindingsByRootAndName,a=o[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[r],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Rp(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let o=typeof e=="string"?Oo.findByName(i,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=Nu),l!==void 0){const h=l.actionByRoot[r];if(h!==void 0&&h.blendMode===n)return h;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const u=new dP(this,o,t,n);return this._bindAction(u,c),this._addInactiveAction(u,a,r),u}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?Oo.findByName(n,e):e,o=r?r.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,r,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const o=r.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const o in r){const a=r[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}kp.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class nh{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new nh(this.value.clone===void 0?this.value:this.value.clone())}}class y_ extends Mr{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}y_.prototype.isInstancedInterleavedBuffer=!0;class v_{constructor(e,t,n,i,r){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}v_.prototype.isGLBufferAttribute=!0;class x_{constructor(e,t,n=0,i=1/0){this.ray=new Cs(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Ou,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return gd(e,this,n,t),n.sort(a0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)gd(e[i],this,n,t);return n.sort(a0),n}}function a0(s,e){return s.distance-e.distance}function gd(s,e,t,n){if(s.layers.test(e.layers)&&s.raycast(e,t),n===!0){const i=s.children;for(let r=0,o=i.length;r<o;r++)gd(i[r],e,t,!0)}}class yd{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Et(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class pP{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const l0=new ae;class Ko{constructor(e=new ae(1/0,1/0),t=new ae(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=l0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return l0.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Ko.prototype.isBox2=!0;const c0=new P,Mc=new P;class __{constructor(e=new P,t=new P){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){c0.subVectors(e,this.start),Mc.subVectors(this.end,this.start);const n=Mc.dot(Mc);let r=Mc.dot(c0)/n;return t&&(r=Et(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const u0=new P;class mP extends Ve{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new ze,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,u=a/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new Le(i,3));const r=new Ot({fog:!1,toneMapped:!1});this.cone=new un(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),u0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(u0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ns=new P,Sc=new we,sf=new we;class w_ extends un{constructor(e){const t=b_(e),n=new ze,i=[],r=[],o=new Me(0,0,1),a=new Me(0,1,0);for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(o.r,o.g,o.b),r.push(a.r,a.g,a.b))}n.setAttribute("position",new Le(i,3)),n.setAttribute("color",new Le(r,3));const l=new Ot({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");sf.copy(this.root.matrixWorld).invert();for(let r=0,o=0;r<t.length;r++){const a=t[r];a.parent&&a.parent.isBone&&(Sc.multiplyMatrices(sf,a.matrixWorld),ns.setFromMatrixPosition(Sc),i.setXYZ(o,ns.x,ns.y,ns.z),Sc.multiplyMatrices(sf,a.parent.matrixWorld),ns.setFromMatrixPosition(Sc),i.setXYZ(o+1,ns.x,ns.y,ns.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function b_(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,b_(s.children[t]));return e}class gP extends xt{constructor(e,t,n){const i=new yr(t,4,2),r=new Wi({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const yP=new P,h0=new Me,f0=new Me;class vP extends Ve{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new mr(t);i.rotateY(Math.PI*.5),this.material=new Wi({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),o=new Float32Array(r.count*3);i.setAttribute("color",new Qe(o,3)),this.add(new xt(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");h0.copy(this.light.color),f0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?h0:f0;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}e.lookAt(yP.setFromMatrixPosition(this.light.matrixWorld).negate())}}class M_ extends un{constructor(e=10,t=10,n=4473924,i=8947848){n=new Me(n),i=new Me(i);const r=t/2,o=e/t,a=e/2,l=[],c=[];for(let f=0,d=0,p=-a;f<=t;f++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const g=f===r?n:i;g.toArray(c,d),d+=3,g.toArray(c,d),d+=3,g.toArray(c,d),d+=3,g.toArray(c,d),d+=3}const u=new ze;u.setAttribute("position",new Le(l,3)),u.setAttribute("color",new Le(c,3));const h=new Ot({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}}class xP extends un{constructor(e=10,t=16,n=8,i=64,r=4473924,o=8947848){r=new Me(r),o=new Me(o);const a=[],l=[];for(let h=0;h<=t;h++){const f=h/t*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;a.push(0,0,0),a.push(d,0,p);const g=h&1?r:o;l.push(g.r,g.g,g.b),l.push(g.r,g.g,g.b)}for(let h=0;h<=n;h++){const f=h&1?r:o,d=e-e/n*h;for(let p=0;p<i;p++){let g=p/i*(Math.PI*2),m=Math.sin(g)*d,v=Math.cos(g)*d;a.push(m,0,v),l.push(f.r,f.g,f.b),g=(p+1)/i*(Math.PI*2),m=Math.sin(g)*d,v=Math.cos(g)*d,a.push(m,0,v),l.push(f.r,f.g,f.b)}}const c=new ze;c.setAttribute("position",new Le(a,3)),c.setAttribute("color",new Le(l,3));const u=new Ot({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}}const d0=new P,Ec=new P,p0=new P;class _P extends Ve{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);let i=new ze;i.setAttribute("position",new Le([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Ot({fog:!1,toneMapped:!1});this.lightPlane=new fi(i,r),this.add(this.lightPlane),i=new ze,i.setAttribute("position",new Le([0,0,0,0,0,1],3)),this.targetLine=new fi(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){d0.setFromMatrixPosition(this.light.matrixWorld),Ec.setFromMatrixPosition(this.light.target.matrixWorld),p0.subVectors(Ec,d0),this.lightPlane.lookAt(Ec),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Ec),this.targetLine.scale.z=p0.length()}}const Tc=new P,vt=new fl;class wP extends un{constructor(e){const t=new ze,n=new Ot({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],o={},a=new Me(16755200),l=new Me(16711680),c=new Me(43775),u=new Me(16777215),h=new Me(3355443);f("n1","n2",a),f("n2","n4",a),f("n4","n3",a),f("n3","n1",a),f("f1","f2",a),f("f2","f4",a),f("f4","f3",a),f("f3","f1",a),f("n1","f1",a),f("n2","f2",a),f("n3","f3",a),f("n4","f4",a),f("p","n1",l),f("p","n2",l),f("p","n3",l),f("p","n4",l),f("u1","u2",c),f("u2","u3",c),f("u3","u1",c),f("c","t",u),f("p","c",h),f("cn1","cn2",h),f("cn3","cn4",h),f("cf1","cf2",h),f("cf3","cf4",h);function f(p,g,m){d(p,m),d(g,m)}function d(p,g){i.push(0,0,0),r.push(g.r,g.g,g.b),o[p]===void 0&&(o[p]=[]),o[p].push(i.length/3-1)}t.setAttribute("position",new Le(i,3)),t.setAttribute("color",new Le(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;vt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),wt("c",t,e,vt,0,0,-1),wt("t",t,e,vt,0,0,1),wt("n1",t,e,vt,-n,-i,-1),wt("n2",t,e,vt,n,-i,-1),wt("n3",t,e,vt,-n,i,-1),wt("n4",t,e,vt,n,i,-1),wt("f1",t,e,vt,-n,-i,1),wt("f2",t,e,vt,n,-i,1),wt("f3",t,e,vt,-n,i,1),wt("f4",t,e,vt,n,i,1),wt("u1",t,e,vt,n*.7,i*1.1,-1),wt("u2",t,e,vt,-n*.7,i*1.1,-1),wt("u3",t,e,vt,0,i*2,-1),wt("cf1",t,e,vt,-n,0,1),wt("cf2",t,e,vt,n,0,1),wt("cf3",t,e,vt,0,-i,1),wt("cf4",t,e,vt,0,i,1),wt("cn1",t,e,vt,-n,0,-1),wt("cn2",t,e,vt,n,0,-1),wt("cn3",t,e,vt,0,-i,-1),wt("cn4",t,e,vt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function wt(s,e,t,n,i,r,o){Tc.set(i,r,o).unproject(n);const a=e[s];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,u=a.length;c<u;c++)l.setXYZ(a[c],Tc.x,Tc.y,Tc.z)}}const Ac=new xn;class S_ extends un{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new ze;r.setIndex(new Qe(n,1)),r.setAttribute("position",new Qe(i,3)),super(r,new Ot({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Ac.setFromObject(this.object),Ac.isEmpty())return;const t=Ac.min,n=Ac.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return un.prototype.copy.call(this,e),this.object=e.object,this}}class bP extends un{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new ze;r.setIndex(new Qe(n,1)),r.setAttribute("position",new Le(i,3)),super(r,new Ot({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class MP extends fi{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new ze;o.setAttribute("position",new Le(r,3)),o.computeBoundingSphere(),super(o,new Ot({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],l=new ze;l.setAttribute("position",new Le(a,3)),l.computeBoundingSphere(),this.add(new xt(l,new Wi({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?gn:cr,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const m0=new P;let Cc,rf;class SP extends Ve{constructor(e=new P(0,0,1),t=new P(0,0,0),n=1,i=16776960,r=n*.2,o=r*.2){super(),this.type="ArrowHelper",Cc===void 0&&(Cc=new ze,Cc.setAttribute("position",new Le([0,0,0,0,1,0],3)),rf=new bs(0,.5,1,5,1),rf.translate(0,-.5,0)),this.position.copy(t),this.line=new fi(Cc,new Ot({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new xt(rf,new Wi({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{m0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(m0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class E_ extends un{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new ze;i.setAttribute("position",new Le(t,3)),i.setAttribute("color",new Le(n,3));const r=new Ot({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new Me,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class EP{constructor(){this.type="ShapePath",this.color=new Me,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Eo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,o){return this.currentPath.bezierCurveTo(e,t,n,i,r,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function n(y){const x=[];for(let _=0,b=y.length;_<b;_++){const S=y[_],E=new ai;E.curves=S.curves,x.push(E)}return x}function i(y,x){const _=x.length;let b=!1;for(let S=_-1,E=0;E<_;S=E++){let w=x[S],A=x[E],L=A.x-w.x,N=A.y-w.y;if(Math.abs(N)>Number.EPSILON){if(N<0&&(w=x[E],L=-L,A=x[S],N=-N),y.y<w.y||y.y>A.y)continue;if(y.y===w.y){if(y.x===w.x)return!0}else{const k=N*(y.x-w.x)-L*(y.y-w.y);if(k===0)return!0;if(k<0)continue;b=!b}}else{if(y.y!==w.y)continue;if(A.x<=y.x&&y.x<=w.x||w.x<=y.x&&y.x<=A.x)return!0}}return b}const r=li.isClockWise,o=this.subPaths;if(o.length===0)return[];if(t===!0)return n(o);let a,l,c;const u=[];if(o.length===1)return l=o[0],c=new ai,c.curves=l.curves,u.push(c),u;let h=!r(o[0].getPoints());h=e?!h:h;const f=[],d=[];let p=[],g=0,m;d[g]=void 0,p[g]=[];for(let y=0,x=o.length;y<x;y++)l=o[y],m=l.getPoints(),a=r(m),a=e?!a:a,a?(!h&&d[g]&&g++,d[g]={s:new ai,p:m},d[g].s.curves=l.curves,h&&g++,p[g]=[]):p[g].push({h:l,p:m[0]});if(!d[0])return n(o);if(d.length>1){let y=!1,x=0;for(let _=0,b=d.length;_<b;_++)f[_]=[];for(let _=0,b=d.length;_<b;_++){const S=p[_];for(let E=0;E<S.length;E++){const w=S[E];let A=!0;for(let L=0;L<d.length;L++)i(w.p,d[L].p)&&(_!==L&&x++,A?(A=!1,f[L].push(w)):y=!0);A&&f[_].push(w)}}x>0&&y===!1&&(p=f)}let v;for(let y=0,x=d.length;y<x;y++){c=d[y].s,u.push(c),v=p[y];for(let _=0,b=v.length;_<b;_++)c.holes.push(v[_].h)}return u}}class TP{static toHalfFloat(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=Et(e,-65504,65504),g0[0]=e;const t=y0[0],n=t>>23&511;return Dn[n]+((t&8388607)>>zn[n])}static fromHalfFloat(e){const t=e>>10;return y0[0]=Hp[A_[t]+(e&1023)]+Jo[t],g0[0]}}const T_=new ArrayBuffer(4),g0=new Float32Array(T_),y0=new Uint32Array(T_),Dn=new Uint32Array(512),zn=new Uint32Array(512);for(let s=0;s<256;++s){const e=s-127;e<-27?(Dn[s]=0,Dn[s|256]=32768,zn[s]=24,zn[s|256]=24):e<-14?(Dn[s]=1024>>-e-14,Dn[s|256]=1024>>-e-14|32768,zn[s]=-e-1,zn[s|256]=-e-1):e<=15?(Dn[s]=e+15<<10,Dn[s|256]=e+15<<10|32768,zn[s]=13,zn[s|256]=13):e<128?(Dn[s]=31744,Dn[s|256]=64512,zn[s]=24,zn[s|256]=24):(Dn[s]=31744,Dn[s|256]=64512,zn[s]=13,zn[s|256]=13)}const Hp=new Uint32Array(2048),Jo=new Uint32Array(64),A_=new Uint32Array(64);for(let s=1;s<1024;++s){let e=s<<13,t=0;for(;(e&8388608)===0;)e<<=1,t-=8388608;e&=-8388609,t+=947912704,Hp[s]=e|t}for(let s=1024;s<2048;++s)Hp[s]=939524096+(s-1024<<13);for(let s=1;s<31;++s)Jo[s]=s<<23;Jo[31]=1199570944;Jo[32]=2147483648;for(let s=33;s<63;++s)Jo[s]=2147483648+(s-32<<23);Jo[63]=3347054592;for(let s=1;s<64;++s)s!==32&&(A_[s]=1024);const AP=0,CP=1,RP=0,LP=1,PP=2;function IP(s){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),s}function FP(s=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),s.isMultiMaterial=!0,s.materials=s,s.clone=function(){return s.slice()},s}class BP extends xl{constructor(e,t){console.warn("THREE.PointCloud has been renamed to THREE.Points."),super(e,t)}}class DP extends ju{constructor(e){console.warn("THREE.Particle has been renamed to THREE.Sprite."),super(e)}}class zP extends xl{constructor(e,t){console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),super(e,t)}}class NP extends Sr{constructor(e){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class OP extends Sr{constructor(e){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class UP extends Sr{constructor(e){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class kP extends P{constructor(e,t,n){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),super(e,t,n)}}class HP extends Qe{constructor(e,t){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),super(e,t),this.setUsage(bo)}}class VP extends Sx{constructor(e,t){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),super(e,t)}}class GP extends Ex{constructor(e,t){console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),super(e,t)}}class WP extends Tx{constructor(e,t){console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),super(e,t)}}class qP extends Ax{constructor(e,t){console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),super(e,t)}}class jP extends hl{constructor(e,t){console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),super(e,t)}}class XP extends Cx{constructor(e,t){console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),super(e,t)}}class $P extends Uu{constructor(e,t){console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),super(e,t)}}class YP extends Le{constructor(e,t){console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),super(e,t)}}class ZP extends Lx{constructor(e,t){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),super(e,t)}}hn.create=function(s,e){return console.log("THREE.Curve.create() has been deprecated"),s.prototype=Object.create(hn.prototype),s.prototype.constructor=s,s.prototype.getPoint=e,s};Eo.prototype.fromPoints=function(s){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(s)};class KP extends E_{constructor(e){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),super(e)}}class JP extends S_{constructor(e,t){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),super(e,t)}}class QP extends un{constructor(e,t){console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),super(new _p(e.geometry),new Ot({color:t!==void 0?t:16777215}))}}M_.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};w_.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};class e3 extends un{constructor(e,t){console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),super(new wp(e.geometry),new Ot({color:t!==void 0?t:16777215}))}}Yt.prototype.extractUrlBase=function(s){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),xr.extractUrlBase(s)};Yt.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};class t3 extends Gn{constructor(e){console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),super(e)}}class n3 extends i_{constructor(e){console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),super(e)}}Ko.prototype.center=function(s){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(s)};Ko.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Ko.prototype.isIntersectionBox=function(s){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(s)};Ko.prototype.size=function(s){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(s)};xn.prototype.center=function(s){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(s)};xn.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};xn.prototype.isIntersectionBox=function(s){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(s)};xn.prototype.isIntersectionSphere=function(s){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(s)};xn.prototype.size=function(s){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(s)};ln.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")};As.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};dl.prototype.setFromMatrix=function(s){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(s)};__.prototype.center=function(s){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(s)};Bt.prototype.flattenToArrayOffset=function(s,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(s,e)};Bt.prototype.multiplyVector3=function(s){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),s.applyMatrix3(this)};Bt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};Bt.prototype.applyToBufferAttribute=function(s){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),s.applyMatrix3(this)};Bt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};Bt.prototype.getInverse=function(s){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(s).invert()};we.prototype.extractPosition=function(s){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(s)};we.prototype.flattenToArrayOffset=function(s,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(s,e)};we.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new P().setFromMatrixColumn(this,3)};we.prototype.setRotationFromQuaternion=function(s){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(s)};we.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};we.prototype.multiplyVector3=function(s){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)};we.prototype.multiplyVector4=function(s){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)};we.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};we.prototype.rotateAxis=function(s){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),s.transformDirection(this)};we.prototype.crossVector=function(s){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)};we.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};we.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};we.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};we.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};we.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};we.prototype.applyToBufferAttribute=function(s){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)};we.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};we.prototype.makeFrustum=function(s,e,t,n,i,r){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(s,e,n,t,i,r)};we.prototype.getInverse=function(s){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(s).invert()};ri.prototype.isIntersectionLine=function(s){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(s)};gt.prototype.multiplyVector3=function(s){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),s.applyQuaternion(this)};gt.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};Cs.prototype.isIntersectionBox=function(s){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(s)};Cs.prototype.isIntersectionPlane=function(s){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(s)};Cs.prototype.isIntersectionSphere=function(s){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(s)};At.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};At.prototype.barycoordFromPoint=function(s,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(s,e)};At.prototype.midpoint=function(s){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(s)};At.prototypenormal=function(s){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(s)};At.prototype.plane=function(s){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(s)};At.barycoordFromPoint=function(s,e,t,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),At.getBarycoord(s,e,t,n,i)};At.normal=function(s,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),At.getNormal(s,e,t,n)};ai.prototype.extractAllPoints=function(s){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(s)};ai.prototype.extrude=function(s){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new pi(this,s)};ai.prototype.makeGeometry=function(s){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new gr(this,s)};ae.prototype.fromAttribute=function(s,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(s,e,t)};ae.prototype.distanceToManhattan=function(s){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(s)};ae.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};P.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};P.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};P.prototype.getPositionFromMatrix=function(s){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(s)};P.prototype.getScaleFromMatrix=function(s){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(s)};P.prototype.getColumnFromMatrix=function(s,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,s)};P.prototype.applyProjection=function(s){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(s)};P.prototype.fromAttribute=function(s,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(s,e,t)};P.prototype.distanceToManhattan=function(s){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(s)};P.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Je.prototype.fromAttribute=function(s,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(s,e,t)};Je.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Ve.prototype.getChildByName=function(s){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(s)};Ve.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};Ve.prototype.translate=function(s,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,s)};Ve.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};Ve.prototype.applyMatrix=function(s){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(s)};Object.defineProperties(Ve.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(s){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=s}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});xt.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(xt.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),dx},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});yl.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Ft.prototype.setLens=function(s,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(s)};Object.defineProperties(Wn.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(s){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=s}},shadowCameraLeft:{set:function(s){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=s}},shadowCameraRight:{set:function(s){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=s}},shadowCameraTop:{set:function(s){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=s}},shadowCameraBottom:{set:function(s){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=s}},shadowCameraNear:{set:function(s){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=s}},shadowCameraFar:{set:function(s){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=s}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(s){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=s}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(s){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=s}},shadowMapHeight:{set:function(s){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=s}}});Object.defineProperties(Qe.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===bo},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(bo)}}});Qe.prototype.setDynamic=function(s){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(s===!0?bo:wo),this};Qe.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Qe.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};ze.prototype.addIndex=function(s){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(s)};ze.prototype.addAttribute=function(s,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(s,new Qe(arguments[1],arguments[2]))):s==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(s,e)};ze.prototype.addDrawCall=function(s,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(s,e)};ze.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};ze.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};ze.prototype.removeAttribute=function(s){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(s)};ze.prototype.applyMatrix=function(s){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(s)};Object.defineProperties(ze.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Mr.prototype.setDynamic=function(s){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(s===!0?bo:wo),this};Mr.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};pi.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};pi.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};pi.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};gl.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};nh.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this};Object.defineProperties(Ct.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Me}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(s){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=s===ip}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(s){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=s}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(Rn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(s){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=s}}});ot.prototype.clearTarget=function(s,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(s),this.clear(e,t,n)};ot.prototype.animate=function(s){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(s)};ot.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};ot.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};ot.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};ot.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};ot.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};ot.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};ot.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};ot.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};ot.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};ot.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};ot.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};ot.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};ot.prototype.enableScissorTest=function(s){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(s)};ot.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};ot.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};ot.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};ot.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};ot.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};ot.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};ot.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};ot.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};ot.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};ot.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(ot.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(s){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=s}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(s){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=s}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(s){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=s===!0?it:Ni}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(Ux.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});class i3 extends Hu{constructor(e,t,n){console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),super(e,n)}}Object.defineProperties(en.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(s){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=s}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(s){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=s}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(s){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=s}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(s){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=s}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(s){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=s}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(s){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=s}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(s){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=s}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(s){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=s}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(s){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=s}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(s){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=s}}});Np.prototype.load=function(s){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new u_().load(s,function(n){e.setBuffer(n)}),this};p_.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};ku.prototype.updateCubeMap=function(s,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(s,e)};ku.prototype.clear=function(s,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(s,e,t,n)};Ts.crossOrigin=void 0;Ts.loadTexture=function(s,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new eh;i.setCrossOrigin(this.crossOrigin);const r=i.load(s,t,void 0,n);return e&&(r.mapping=e),r};Ts.loadTextureCube=function(s,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new n_;i.setCrossOrigin(this.crossOrigin);const r=i.load(s,t,void 0,n);return e&&(r.mapping=e),r};Ts.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Ts.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function s3(){console.error("THREE.CanvasRenderer has been removed")}function r3(){console.error("THREE.JSONLoader has been removed.")}const o3={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function a3(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}class l3 extends ze{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),super()}}class c3 extends ze{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),super()}}function u3(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function h3(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function f3(){console.error("THREE.ImmediateRenderObject has been removed.")}class d3 extends en{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class p3 extends Xo{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,i)}}class m3 extends ul{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Du}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Du);var g3=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Xv,AddEquation:$s,AddOperation:Gv,AdditiveAnimationBlendMode:ap,AdditiveBlending:Nf,AlphaFormat:ex,AlwaysDepth:zv,AlwaysStencilFunc:yx,AmbientLight:Sl,AmbientLightProbe:f_,AnimationClip:Oo,AnimationLoader:YL,AnimationMixer:kp,AnimationObjectGroup:g_,AnimationUtils:ht,ArcCurve:mp,ArrayCamera:up,ArrowHelper:SP,Audio:Np,AudioAnalyser:p_,AudioContext:zp,AudioListener:tP,AudioLoader:u_,AxesHelper:E_,AxisHelper:KP,BackSide:gn,BasicDepthPacking:px,BasicShadowMap:GE,BinaryTextureLoader:n3,Bone:So,BooleanKeyframeTrack:Er,BoundingBoxHelper:JP,Box2:Ko,Box3:xn,Box3Helper:bP,BoxBufferGeometry:Oi,BoxGeometry:Oi,BoxHelper:S_,BufferAttribute:Qe,BufferGeometry:ze,BufferGeometryLoader:l_,ByteType:Yv,Cache:vr,Camera:fl,CameraHelper:wP,CanvasRenderer:s3,CanvasTexture:jx,CapsuleBufferGeometry:To,CapsuleGeometry:To,CatmullRomCurve3:yp,CineonToneMapping:jv,CircleBufferGeometry:Ao,CircleGeometry:Ao,ClampToEdgeWrapping:qt,Clock:d_,Color:Me,ColorKeyframeTrack:Lp,ColorManagement:wn,CompressedTexture:pp,CompressedTextureLoader:ZL,ConeBufferGeometry:Co,ConeGeometry:Co,CubeCamera:ku,CubeReflectionMapping:ys,CubeRefractionMapping:vs,CubeTexture:$o,CubeTextureLoader:n_,CubeUVReflectionMapping:jo,CubicBezierCurve:Xu,CubicBezierCurve3:vp,CubicInterpolant:Jx,CullFaceBack:zf,CullFaceFront:bv,CullFaceFrontBack:VE,CullFaceNone:wv,Curve:hn,CurvePath:$x,CustomBlending:Mv,CustomToneMapping:$v,CylinderBufferGeometry:bs,CylinderGeometry:bs,Cylindrical:pP,Data3DTexture:ul,DataArrayTexture:Xo,DataTexture:or,DataTexture2DArray:p3,DataTexture3D:m3,DataTextureLoader:i_,DataUtils:TP,DecrementStencilOp:tT,DecrementWrapStencilOp:iT,DefaultLoadingManager:t_,DepthFormat:fs,DepthStencilFormat:fr,DepthTexture:hp,DirectionalLight:Ml,DirectionalLightHelper:_P,DiscreteInterpolant:Qx,DodecahedronBufferGeometry:Ro,DodecahedronGeometry:Ro,DoubleSide:ur,DstAlphaFactor:Lv,DstColorFactor:Iv,DynamicBufferAttribute:HP,DynamicCopyUsage:yT,DynamicDrawUsage:bo,DynamicReadUsage:pT,EdgesGeometry:_p,EdgesHelper:QP,EllipseCurve:_l,EqualDepth:Ov,EqualStencilFunc:aT,EquirectangularReflectionMapping:vo,EquirectangularRefractionMapping:qa,Euler:ln,EventDispatcher:Gi,ExtrudeBufferGeometry:pi,ExtrudeGeometry:pi,FaceColors:LP,FileLoader:Gn,FlatShading:ip,Float16BufferAttribute:Rx,Float32Attribute:YP,Float32BufferAttribute:Le,Float64Attribute:ZP,Float64BufferAttribute:Lx,FloatType:Li,Fog:ml,FogExp2:pl,Font:h3,FontLoader:u3,FramebufferTexture:qx,FrontSide:cr,Frustum:dl,GLBufferAttribute:v_,GLSL1:xT,GLSL3:cd,GreaterDepth:kv,GreaterEqualDepth:Uv,GreaterEqualStencilFunc:hT,GreaterStencilFunc:cT,GridHelper:M_,Group:Pi,HalfFloatType:_o,HemisphereLight:Pp,HemisphereLightHelper:vP,HemisphereLightProbe:h_,IcosahedronBufferGeometry:Lo,IcosahedronGeometry:Lo,ImageBitmapLoader:c_,ImageLoader:tl,ImageUtils:Ts,ImmediateRenderObject:f3,IncrementStencilOp:eT,IncrementWrapStencilOp:nT,InstancedBufferAttribute:dr,InstancedBufferGeometry:Dp,InstancedInterleavedBuffer:y_,InstancedMesh:fp,Int16Attribute:qP,Int16BufferAttribute:Ax,Int32Attribute:XP,Int32BufferAttribute:Cx,Int8Attribute:VP,Int8BufferAttribute:Sx,IntType:Kv,InterleavedBuffer:Mr,InterleavedBufferAttribute:ws,Interpolant:Ui,InterpolateDiscrete:Xa,InterpolateLinear:$a,InterpolateSmooth:Xc,InvertStencilOp:sT,JSONLoader:r3,KeepStencilOp:$c,KeyframeTrack:qn,LOD:Gx,LatheBufferGeometry:pr,LatheGeometry:pr,Layers:Ou,LensFlare:a3,LessDepth:Nv,LessEqualDepth:hu,LessEqualStencilFunc:lT,LessStencilFunc:oT,Light:Wn,LightProbe:El,Line:fi,Line3:__,LineBasicMaterial:Ot,LineCurve:wl,LineCurve3:Xx,LineDashedMaterial:Cp,LineLoop:dp,LinePieces:CP,LineSegments:un,LineStrip:AP,LinearEncoding:Ni,LinearFilter:St,LinearInterpolant:Rp,LinearMipMapLinearFilter:$E,LinearMipMapNearestFilter:XE,LinearMipmapLinearFilter:wr,LinearMipmapNearestFilter:op,LinearSRGBColorSpace:ls,LinearToneMapping:Wv,Loader:Yt,LoaderUtils:xr,LoadingManager:Qu,LoopOnce:ux,LoopPingPong:fx,LoopRepeat:hx,LuminanceAlphaFormat:ix,LuminanceFormat:nx,MOUSE:Ws,Material:Ct,MaterialLoader:a_,Math:En,MathUtils:En,Matrix3:Bt,Matrix4:we,MaxEquation:Hf,Mesh:xt,MeshBasicMaterial:Wi,MeshDepthMaterial:Gu,MeshDistanceMaterial:Wu,MeshFaceMaterial:IP,MeshLambertMaterial:Ju,MeshMatcapMaterial:Ap,MeshNormalMaterial:Tp,MeshPhongMaterial:po,MeshPhysicalMaterial:Sp,MeshStandardMaterial:bl,MeshToonMaterial:Ep,MinEquation:kf,MirroredRepeatWrapping:ja,MixOperation:Vv,MultiMaterial:FP,MultiplyBlending:Uf,MultiplyOperation:cl,NearestFilter:It,NearestMipMapLinearFilter:jE,NearestMipMapNearestFilter:qE,NearestMipmapLinearFilter:du,NearestMipmapNearestFilter:fu,NeverDepth:Dv,NeverStencilFunc:rT,NoBlending:Bi,NoColorSpace:KE,NoColors:RP,NoToneMapping:oi,NormalAnimationBlendMode:Nu,NormalBlending:nr,NotEqualDepth:Hv,NotEqualStencilFunc:uT,NumberKeyframeTrack:zo,Object3D:Ve,ObjectLoader:KL,ObjectSpaceNormalMap:gx,OctahedronBufferGeometry:mr,OctahedronGeometry:mr,OneFactor:Av,OneMinusDstAlphaFactor:Pv,OneMinusDstColorFactor:Fv,OneMinusSrcAlphaFactor:rp,OneMinusSrcColorFactor:Rv,OrthographicCamera:Yo,PCFShadowMap:tp,PCFSoftShadowMap:np,PMREMGenerator:hd,ParametricGeometry:l3,Particle:DP,ParticleBasicMaterial:OP,ParticleSystem:zP,ParticleSystemMaterial:UP,Path:Eo,PerspectiveCamera:Ft,Plane:ri,PlaneBufferGeometry:_s,PlaneGeometry:_s,PlaneHelper:MP,PointCloud:BP,PointCloudMaterial:NP,PointLight:nl,PointLightHelper:gP,Points:xl,PointsMaterial:Sr,PolarGridHelper:xP,PolyhedronBufferGeometry:di,PolyhedronGeometry:di,PositionalAudio:iP,PropertyBinding:Xe,PropertyMixer:m_,QuadraticBezierCurve:$u,QuadraticBezierCurve3:Yu,Quaternion:gt,QuaternionKeyframeTrack:Tr,QuaternionLinearInterpolant:e_,REVISION:Du,RGBADepthPacking:mx,RGBAFormat:mn,RGBAIntegerFormat:lx,RGBA_ASTC_10x10_Format:rd,RGBA_ASTC_10x5_Format:nd,RGBA_ASTC_10x6_Format:id,RGBA_ASTC_10x8_Format:sd,RGBA_ASTC_12x10_Format:od,RGBA_ASTC_12x12_Format:ad,RGBA_ASTC_4x4_Format:$f,RGBA_ASTC_5x4_Format:Yf,RGBA_ASTC_5x5_Format:Zf,RGBA_ASTC_6x5_Format:Kf,RGBA_ASTC_6x6_Format:Jf,RGBA_ASTC_8x5_Format:Qf,RGBA_ASTC_8x6_Format:ed,RGBA_ASTC_8x8_Format:td,RGBA_BPTC_Format:ld,RGBA_ETC2_EAC_Format:Xf,RGBA_PVRTC_2BPPV1_Format:qf,RGBA_PVRTC_4BPPV1_Format:Wf,RGBA_S3TC_DXT1_Format:Wc,RGBA_S3TC_DXT3_Format:qc,RGBA_S3TC_DXT5_Format:jc,RGBFormat:tx,RGB_ETC1_Format:cx,RGB_ETC2_Format:jf,RGB_PVRTC_2BPPV1_Format:Gf,RGB_PVRTC_4BPPV1_Format:Vf,RGB_S3TC_DXT1_Format:Gc,RGFormat:ox,RGIntegerFormat:ax,RawShaderMaterial:Mp,Ray:Cs,Raycaster:x_,RectAreaLight:Fp,RedFormat:sx,RedIntegerFormat:rx,ReinhardToneMapping:qv,RepeatWrapping:hr,ReplaceStencilOp:QE,ReverseSubtractEquation:Ev,RingBufferGeometry:Po,RingGeometry:Po,SRGBColorSpace:si,Scene:gl,SceneUtils:o3,ShaderChunk:qe,ShaderLib:On,ShaderMaterial:Rn,ShadowMaterial:bp,Shape:ai,ShapeBufferGeometry:gr,ShapeGeometry:gr,ShapePath:EP,ShapeUtils:li,ShortType:Zv,Skeleton:vl,SkeletonHelper:w_,SkinnedMesh:yl,SmoothShading:WE,Source:Qs,Sphere:As,SphereBufferGeometry:yr,SphereGeometry:yr,Spherical:yd,SphericalHarmonics3:Bp,SplineCurve:Zu,SpotLight:th,SpotLightHelper:mP,Sprite:ju,SpriteMaterial:qu,SrcAlphaFactor:sp,SrcAlphaSaturateFactor:Bv,SrcColorFactor:Cv,StaticCopyUsage:gT,StaticDrawUsage:wo,StaticReadUsage:dT,StereoCamera:QL,StreamCopyUsage:vT,StreamDrawUsage:fT,StreamReadUsage:mT,StringKeyframeTrack:Ar,SubtractEquation:Sv,SubtractiveBlending:Of,TOUCH:qs,TangentSpaceNormalMap:br,TetrahedronBufferGeometry:Io,TetrahedronGeometry:Io,TextGeometry:c3,Texture:_t,TextureLoader:eh,TorusBufferGeometry:Fo,TorusGeometry:Fo,TorusKnotBufferGeometry:Bo,TorusKnotGeometry:Bo,Triangle:At,TriangleFanDrawMode:ZE,TriangleStripDrawMode:YE,TrianglesDrawMode:dx,TubeBufferGeometry:Do,TubeGeometry:Do,UVMapping:zu,Uint16Attribute:jP,Uint16BufferAttribute:hl,Uint32Attribute:$P,Uint32BufferAttribute:Uu,Uint8Attribute:GP,Uint8BufferAttribute:Ex,Uint8ClampedAttribute:WP,Uint8ClampedBufferAttribute:Tx,Uniform:nh,UniformsLib:Ee,UniformsUtils:Px,UnsignedByteType:xs,UnsignedInt248Type:ir,UnsignedIntType:Pa,UnsignedShort4444Type:Jv,UnsignedShort5551Type:Qv,UnsignedShortType:xo,VSMShadowMap:so,Vector2:ae,Vector3:P,Vector4:Je,VectorKeyframeTrack:No,Vertex:kP,VertexColors:PP,VideoTexture:Wx,WebGL1Renderer:Hx,WebGL3DRenderTarget:bx,WebGLArrayRenderTarget:wx,WebGLCubeRenderTarget:Hu,WebGLMultipleRenderTargets:Mx,WebGLMultisampleRenderTarget:d3,WebGLRenderTarget:en,WebGLRenderTargetCube:i3,WebGLRenderer:ot,WebGLUtils:kx,WireframeGeometry:wp,WireframeHelper:e3,WrapAroundEnding:Ya,XHRLoader:t3,ZeroCurvatureEnding:Ks,ZeroFactor:Tv,ZeroSlopeEnding:Js,ZeroStencilOp:JE,_SRGBAFormat:pu,sRGBEncoding:it},Symbol.toStringTag,{value:"Module"}));class y3{constructor(){this.matrix={}}get(e,t){let{id:n}=e,{id:i}=t;if(i>n){const r=i;i=n,n=r}return`${n}-${i}`in this.matrix}set(e,t,n){let{id:i}=e,{id:r}=t;if(r>i){const o=r;r=i,i=o}n?this.matrix[`${i}-${r}`]=!0:delete this.matrix[`${i}-${r}`]}reset(){this.matrix={}}setNumObjects(e){}}class Tn{constructor(e){e===void 0&&(e=[0,0,0,0,0,0,0,0,0]),this.elements=e}identity(){const e=this.elements;e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1}setZero(){const e=this.elements;e[0]=0,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=0,e[6]=0,e[7]=0,e[8]=0}setTrace(e){const t=this.elements;t[0]=e.x,t[4]=e.y,t[8]=e.z}getTrace(e){e===void 0&&(e=new M);const t=this.elements;return e.x=t[0],e.y=t[4],e.z=t[8],e}vmult(e,t){t===void 0&&(t=new M);const n=this.elements,i=e.x,r=e.y,o=e.z;return t.x=n[0]*i+n[1]*r+n[2]*o,t.y=n[3]*i+n[4]*r+n[5]*o,t.z=n[6]*i+n[7]*r+n[8]*o,t}smult(e){for(let t=0;t<this.elements.length;t++)this.elements[t]*=e}mmult(e,t){t===void 0&&(t=new Tn);const n=this.elements,i=e.elements,r=t.elements,o=n[0],a=n[1],l=n[2],c=n[3],u=n[4],h=n[5],f=n[6],d=n[7],p=n[8],g=i[0],m=i[1],v=i[2],y=i[3],x=i[4],_=i[5],b=i[6],S=i[7],E=i[8];return r[0]=o*g+a*y+l*b,r[1]=o*m+a*x+l*S,r[2]=o*v+a*_+l*E,r[3]=c*g+u*y+h*b,r[4]=c*m+u*x+h*S,r[5]=c*v+u*_+h*E,r[6]=f*g+d*y+p*b,r[7]=f*m+d*x+p*S,r[8]=f*v+d*_+p*E,t}scale(e,t){t===void 0&&(t=new Tn);const n=this.elements,i=t.elements;for(let r=0;r!==3;r++)i[3*r+0]=e.x*n[3*r+0],i[3*r+1]=e.y*n[3*r+1],i[3*r+2]=e.z*n[3*r+2];return t}solve(e,t){t===void 0&&(t=new M);const n=3,i=4,r=[];let o,a;for(o=0;o<n*i;o++)r.push(0);for(o=0;o<3;o++)for(a=0;a<3;a++)r[o+i*a]=this.elements[o+3*a];r[3+4*0]=e.x,r[3+4*1]=e.y,r[3+4*2]=e.z;let l=3;const c=l;let u;const h=4;let f;do{if(o=c-l,r[o+i*o]===0){for(a=o+1;a<c;a++)if(r[o+i*a]!==0){u=h;do f=h-u,r[f+i*o]+=r[f+i*a];while(--u);break}}if(r[o+i*o]!==0)for(a=o+1;a<c;a++){const d=r[o+i*a]/r[o+i*o];u=h;do f=h-u,r[f+i*a]=f<=o?0:r[f+i*a]-r[f+i*o]*d;while(--u)}}while(--l);if(t.z=r[2*i+3]/r[2*i+2],t.y=(r[1*i+3]-r[1*i+2]*t.z)/r[1*i+1],t.x=(r[0*i+3]-r[0*i+2]*t.z-r[0*i+1]*t.y)/r[0*i+0],isNaN(t.x)||isNaN(t.y)||isNaN(t.z)||t.x===1/0||t.y===1/0||t.z===1/0)throw`Could not solve equation! Got x=[${t.toString()}], b=[${e.toString()}], A=[${this.toString()}]`;return t}e(e,t,n){if(n===void 0)return this.elements[t+3*e];this.elements[t+3*e]=n}copy(e){for(let t=0;t<e.elements.length;t++)this.elements[t]=e.elements[t];return this}toString(){let e="";const t=",";for(let n=0;n<9;n++)e+=this.elements[n]+t;return e}reverse(e){e===void 0&&(e=new Tn);const t=3,n=6,i=v3;let r,o;for(r=0;r<3;r++)for(o=0;o<3;o++)i[r+n*o]=this.elements[r+3*o];i[3+6*0]=1,i[3+6*1]=0,i[3+6*2]=0,i[4+6*0]=0,i[4+6*1]=1,i[4+6*2]=0,i[5+6*0]=0,i[5+6*1]=0,i[5+6*2]=1;let a=3;const l=a;let c;const u=n;let h;do{if(r=l-a,i[r+n*r]===0){for(o=r+1;o<l;o++)if(i[r+n*o]!==0){c=u;do h=u-c,i[h+n*r]+=i[h+n*o];while(--c);break}}if(i[r+n*r]!==0)for(o=r+1;o<l;o++){const f=i[r+n*o]/i[r+n*r];c=u;do h=u-c,i[h+n*o]=h<=r?0:i[h+n*o]-i[h+n*r]*f;while(--c)}}while(--a);r=2;do{o=r-1;do{const f=i[r+n*o]/i[r+n*r];c=n;do h=n-c,i[h+n*o]=i[h+n*o]-i[h+n*r]*f;while(--c)}while(o--)}while(--r);r=2;do{const f=1/i[r+n*r];c=n;do h=n-c,i[h+n*r]=i[h+n*r]*f;while(--c)}while(r--);r=2;do{o=2;do{if(h=i[t+o+n*r],isNaN(h)||h===1/0)throw`Could not reverse! A=[${this.toString()}]`;e.e(r,o,h)}while(o--)}while(r--);return e}setRotationFromQuaternion(e){const t=e.x,n=e.y,i=e.z,r=e.w,o=t+t,a=n+n,l=i+i,c=t*o,u=t*a,h=t*l,f=n*a,d=n*l,p=i*l,g=r*o,m=r*a,v=r*l,y=this.elements;return y[3*0+0]=1-(f+p),y[3*0+1]=u-v,y[3*0+2]=h+m,y[3*1+0]=u+v,y[3*1+1]=1-(c+p),y[3*1+2]=d-g,y[3*2+0]=h-m,y[3*2+1]=d+g,y[3*2+2]=1-(c+f),this}transpose(e){e===void 0&&(e=new Tn);const t=this.elements,n=e.elements;let i;return n[0]=t[0],n[4]=t[4],n[8]=t[8],i=t[1],n[1]=t[3],n[3]=i,i=t[2],n[2]=t[6],n[6]=i,i=t[5],n[5]=t[7],n[7]=i,e}}const v3=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class M{constructor(e,t,n){e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0),this.x=e,this.y=t,this.z=n}cross(e,t){t===void 0&&(t=new M);const n=e.x,i=e.y,r=e.z,o=this.x,a=this.y,l=this.z;return t.x=a*r-l*i,t.y=l*n-o*r,t.z=o*i-a*n,t}set(e,t,n){return this.x=e,this.y=t,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(e,t){if(t)t.x=e.x+this.x,t.y=e.y+this.y,t.z=e.z+this.z;else return new M(this.x+e.x,this.y+e.y,this.z+e.z)}vsub(e,t){if(t)t.x=this.x-e.x,t.y=this.y-e.y,t.z=this.z-e.z;else return new M(this.x-e.x,this.y-e.y,this.z-e.z)}crossmat(){return new Tn([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const e=this.x,t=this.y,n=this.z,i=Math.sqrt(e*e+t*t+n*n);if(i>0){const r=1/i;this.x*=r,this.y*=r,this.z*=r}else this.x=0,this.y=0,this.z=0;return i}unit(e){e===void 0&&(e=new M);const t=this.x,n=this.y,i=this.z;let r=Math.sqrt(t*t+n*n+i*i);return r>0?(r=1/r,e.x=t*r,e.y=n*r,e.z=i*r):(e.x=1,e.y=0,e.z=0),e}length(){const e=this.x,t=this.y,n=this.z;return Math.sqrt(e*e+t*t+n*n)}lengthSquared(){return this.dot(this)}distanceTo(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,a=e.z;return Math.sqrt((r-t)*(r-t)+(o-n)*(o-n)+(a-i)*(a-i))}distanceSquared(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,a=e.z;return(r-t)*(r-t)+(o-n)*(o-n)+(a-i)*(a-i)}scale(e,t){t===void 0&&(t=new M);const n=this.x,i=this.y,r=this.z;return t.x=e*n,t.y=e*i,t.z=e*r,t}vmul(e,t){return t===void 0&&(t=new M),t.x=e.x*this.x,t.y=e.y*this.y,t.z=e.z*this.z,t}addScaledVector(e,t,n){return n===void 0&&(n=new M),n.x=this.x+e*t.x,n.y=this.y+e*t.y,n.z=this.z+e*t.z,n}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(e){return e===void 0&&(e=new M),e.x=-this.x,e.y=-this.y,e.z=-this.z,e}tangents(e,t){const n=this.length();if(n>0){const i=x3,r=1/n;i.set(this.x*r,this.y*r,this.z*r);const o=_3;Math.abs(i.x)<.9?(o.set(1,0,0),i.cross(o,e)):(o.set(0,1,0),i.cross(o,e)),i.cross(e,t)}else e.set(1,0,0),t.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}lerp(e,t,n){const i=this.x,r=this.y,o=this.z;n.x=i+(e.x-i)*t,n.y=r+(e.y-r)*t,n.z=o+(e.z-o)*t}almostEquals(e,t){return t===void 0&&(t=1e-6),!(Math.abs(this.x-e.x)>t||Math.abs(this.y-e.y)>t||Math.abs(this.z-e.z)>t)}almostZero(e){return e===void 0&&(e=1e-6),!(Math.abs(this.x)>e||Math.abs(this.y)>e||Math.abs(this.z)>e)}isAntiparallelTo(e,t){return this.negate(v0),v0.almostEquals(e,t)}clone(){return new M(this.x,this.y,this.z)}}M.ZERO=new M(0,0,0);M.UNIT_X=new M(1,0,0);M.UNIT_Y=new M(0,1,0);M.UNIT_Z=new M(0,0,1);const x3=new M,_3=new M,v0=new M;class ft{constructor(e){e===void 0&&(e={}),this.lowerBound=new M,this.upperBound=new M,e.lowerBound&&this.lowerBound.copy(e.lowerBound),e.upperBound&&this.upperBound.copy(e.upperBound)}setFromPoints(e,t,n,i){const r=this.lowerBound,o=this.upperBound,a=n;r.copy(e[0]),a&&a.vmult(r,r),o.copy(r);for(let l=1;l<e.length;l++){let c=e[l];a&&(a.vmult(c,x0),c=x0),c.x>o.x&&(o.x=c.x),c.x<r.x&&(r.x=c.x),c.y>o.y&&(o.y=c.y),c.y<r.y&&(r.y=c.y),c.z>o.z&&(o.z=c.z),c.z<r.z&&(r.z=c.z)}return t&&(t.vadd(r,r),t.vadd(o,o)),i&&(r.x-=i,r.y-=i,r.z-=i,o.x+=i,o.y+=i,o.z+=i),this}copy(e){return this.lowerBound.copy(e.lowerBound),this.upperBound.copy(e.upperBound),this}clone(){return new ft().copy(this)}extend(e){this.lowerBound.x=Math.min(this.lowerBound.x,e.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,e.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,e.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,e.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,e.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,e.upperBound.z)}overlaps(e){const t=this.lowerBound,n=this.upperBound,i=e.lowerBound,r=e.upperBound,o=i.x<=n.x&&n.x<=r.x||t.x<=r.x&&r.x<=n.x,a=i.y<=n.y&&n.y<=r.y||t.y<=r.y&&r.y<=n.y,l=i.z<=n.z&&n.z<=r.z||t.z<=r.z&&r.z<=n.z;return o&&a&&l}volume(){const e=this.lowerBound,t=this.upperBound;return(t.x-e.x)*(t.y-e.y)*(t.z-e.z)}contains(e){const t=this.lowerBound,n=this.upperBound,i=e.lowerBound,r=e.upperBound;return t.x<=i.x&&n.x>=r.x&&t.y<=i.y&&n.y>=r.y&&t.z<=i.z&&n.z>=r.z}getCorners(e,t,n,i,r,o,a,l){const c=this.lowerBound,u=this.upperBound;e.copy(c),t.set(u.x,c.y,c.z),n.set(u.x,u.y,c.z),i.set(c.x,u.y,u.z),r.set(u.x,c.y,u.z),o.set(c.x,u.y,c.z),a.set(c.x,c.y,u.z),l.copy(u)}toLocalFrame(e,t){const n=_0,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7];this.getCorners(i,r,o,a,l,c,u,h);for(let f=0;f!==8;f++){const d=n[f];e.pointToLocal(d,d)}return t.setFromPoints(n)}toWorldFrame(e,t){const n=_0,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7];this.getCorners(i,r,o,a,l,c,u,h);for(let f=0;f!==8;f++){const d=n[f];e.pointToWorld(d,d)}return t.setFromPoints(n)}overlapsRay(e){const{direction:t,from:n}=e,i=1/t.x,r=1/t.y,o=1/t.z,a=(this.lowerBound.x-n.x)*i,l=(this.upperBound.x-n.x)*i,c=(this.lowerBound.y-n.y)*r,u=(this.upperBound.y-n.y)*r,h=(this.lowerBound.z-n.z)*o,f=(this.upperBound.z-n.z)*o,d=Math.max(Math.max(Math.min(a,l),Math.min(c,u)),Math.min(h,f)),p=Math.min(Math.min(Math.max(a,l),Math.max(c,u)),Math.max(h,f));return!(p<0||d>p)}}const x0=new M,_0=[new M,new M,new M,new M,new M,new M,new M,new M];class vd{constructor(){this.matrix=[]}get(e,t){let{index:n}=e,{index:i}=t;if(i>n){const r=i;i=n,n=r}return this.matrix[(n*(n+1)>>1)+i-1]}set(e,t,n){let{index:i}=e,{index:r}=t;if(r>i){const o=r;r=i,i=o}this.matrix[(i*(i+1)>>1)+r-1]=n?1:0}reset(){for(let e=0,t=this.matrix.length;e!==t;e++)this.matrix[e]=0}setNumObjects(e){this.matrix.length=e*(e-1)>>1}}class Vp{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;return n[e]===void 0&&(n[e]=[]),n[e].includes(t)||n[e].push(t),this}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return!!(n[e]!==void 0&&n[e].includes(t))}hasAnyEventListener(e){return this._listeners===void 0?!1:this._listeners[e]!==void 0}removeEventListener(e,t){if(this._listeners===void 0)return this;const n=this._listeners;if(n[e]===void 0)return this;const i=n[e].indexOf(t);return i!==-1&&n[e].splice(i,1),this}dispatchEvent(e){if(this._listeners===void 0)return this;const n=this._listeners[e.type];if(n!==void 0){e.target=this;for(let i=0,r=n.length;i<r;i++)n[i].call(this,e)}return this}}class pt{constructor(e,t,n,i){e===void 0&&(e=0),t===void 0&&(t=0),n===void 0&&(n=0),i===void 0&&(i=1),this.x=e,this.y=t,this.z=n,this.w=i}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(e,t){const n=Math.sin(t*.5);return this.x=e.x*n,this.y=e.y*n,this.z=e.z*n,this.w=Math.cos(t*.5),this}toAxisAngle(e){e===void 0&&(e=new M),this.normalize();const t=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(e.x=this.x,e.y=this.y,e.z=this.z):(e.x=this.x/n,e.y=this.y/n,e.z=this.z/n),[e,t]}setFromVectors(e,t){if(e.isAntiparallelTo(t)){const n=w3,i=b3;e.tangents(n,i),this.setFromAxisAngle(n,Math.PI)}else{const n=e.cross(t);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(e.length()**2*t.length()**2)+e.dot(t),this.normalize()}return this}mult(e,t){t===void 0&&(t=new pt);const n=this.x,i=this.y,r=this.z,o=this.w,a=e.x,l=e.y,c=e.z,u=e.w;return t.x=n*u+o*a+i*c-r*l,t.y=i*u+o*l+r*a-n*c,t.z=r*u+o*c+n*l-i*a,t.w=o*u-n*a-i*l-r*c,t}inverse(e){e===void 0&&(e=new pt);const t=this.x,n=this.y,i=this.z,r=this.w;this.conjugate(e);const o=1/(t*t+n*n+i*i+r*r);return e.x*=o,e.y*=o,e.z*=o,e.w*=o,e}conjugate(e){return e===void 0&&(e=new pt),e.x=-this.x,e.y=-this.y,e.z=-this.z,e.w=this.w,e}normalize(){let e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return e===0?(this.x=0,this.y=0,this.z=0,this.w=0):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}normalizeFast(){const e=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return e===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}vmult(e,t){t===void 0&&(t=new M);const n=e.x,i=e.y,r=e.z,o=this.x,a=this.y,l=this.z,c=this.w,u=c*n+a*r-l*i,h=c*i+l*n-o*r,f=c*r+o*i-a*n,d=-o*n-a*i-l*r;return t.x=u*c+d*-o+h*-l-f*-a,t.y=h*c+d*-a+f*-o-u*-l,t.z=f*c+d*-l+u*-a-h*-o,t}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}toEuler(e,t){t===void 0&&(t="YZX");let n,i,r;const o=this.x,a=this.y,l=this.z,c=this.w;switch(t){case"YZX":const u=o*a+l*c;if(u>.499&&(n=2*Math.atan2(o,c),i=Math.PI/2,r=0),u<-.499&&(n=-2*Math.atan2(o,c),i=-Math.PI/2,r=0),n===void 0){const h=o*o,f=a*a,d=l*l;n=Math.atan2(2*a*c-2*o*l,1-2*f-2*d),i=Math.asin(2*u),r=Math.atan2(2*o*c-2*a*l,1-2*h-2*d)}break;default:throw new Error(`Euler order ${t} not supported yet.`)}e.y=n,e.z=i,e.x=r}setFromEuler(e,t,n,i){i===void 0&&(i="XYZ");const r=Math.cos(e/2),o=Math.cos(t/2),a=Math.cos(n/2),l=Math.sin(e/2),c=Math.sin(t/2),u=Math.sin(n/2);return i==="XYZ"?(this.x=l*o*a+r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a-l*c*u):i==="YXZ"?(this.x=l*o*a+r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a+l*c*u):i==="ZXY"?(this.x=l*o*a-r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a-l*c*u):i==="ZYX"?(this.x=l*o*a-r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a+l*c*u):i==="YZX"?(this.x=l*o*a+r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a-l*c*u):i==="XZY"&&(this.x=l*o*a-r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a+l*c*u),this}clone(){return new pt(this.x,this.y,this.z,this.w)}slerp(e,t,n){n===void 0&&(n=new pt);const i=this.x,r=this.y,o=this.z,a=this.w;let l=e.x,c=e.y,u=e.z,h=e.w,f,d,p,g,m;return d=i*l+r*c+o*u+a*h,d<0&&(d=-d,l=-l,c=-c,u=-u,h=-h),1-d>1e-6?(f=Math.acos(d),p=Math.sin(f),g=Math.sin((1-t)*f)/p,m=Math.sin(t*f)/p):(g=1-t,m=t),n.x=g*i+m*l,n.y=g*r+m*c,n.z=g*o+m*u,n.w=g*a+m*h,n}integrate(e,t,n,i){i===void 0&&(i=new pt);const r=e.x*n.x,o=e.y*n.y,a=e.z*n.z,l=this.x,c=this.y,u=this.z,h=this.w,f=t*.5;return i.x+=f*(r*h+o*u-a*c),i.y+=f*(o*h+a*l-r*u),i.z+=f*(a*h+r*c-o*l),i.w+=f*(-r*l-o*c-a*u),i}}const w3=new M,b3=new M,C_={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class Te{constructor(e){e===void 0&&(e={}),this.id=Te.idCounter++,this.type=e.type||0,this.boundingSphereRadius=0,this.collisionResponse=e.collisionResponse?e.collisionResponse:!0,this.collisionFilterGroup=e.collisionFilterGroup!==void 0?e.collisionFilterGroup:1,this.collisionFilterMask=e.collisionFilterMask!==void 0?e.collisionFilterMask:-1,this.material=e.material?e.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(e,t){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(e,t,n,i){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}Te.idCounter=0;Te.types=C_;class Ke{constructor(e){e===void 0&&(e={}),this.position=new M,this.quaternion=new pt,e.position&&this.position.copy(e.position),e.quaternion&&this.quaternion.copy(e.quaternion)}pointToLocal(e,t){return Ke.pointToLocalFrame(this.position,this.quaternion,e,t)}pointToWorld(e,t){return Ke.pointToWorldFrame(this.position,this.quaternion,e,t)}vectorToWorldFrame(e,t){return t===void 0&&(t=new M),this.quaternion.vmult(e,t),t}static pointToLocalFrame(e,t,n,i){return i===void 0&&(i=new M),n.vsub(e,i),t.conjugate(w0),w0.vmult(i,i),i}static pointToWorldFrame(e,t,n,i){return i===void 0&&(i=new M),t.vmult(n,i),i.vadd(e,i),i}static vectorToWorldFrame(e,t,n){return n===void 0&&(n=new M),e.vmult(t,n),n}static vectorToLocalFrame(e,t,n,i){return i===void 0&&(i=new M),t.w*=-1,t.vmult(n,i),t.w*=-1,i}}const w0=new pt;class ci extends Te{constructor(e){e===void 0&&(e={});const{vertices:t=[],faces:n=[],normals:i=[],axes:r,boundingSphereRadius:o}=e;super({type:Te.types.CONVEXPOLYHEDRON}),this.vertices=t,this.faces=n,this.faceNormals=i,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=r?r.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const e=this.faces,t=this.vertices,n=this.uniqueEdges;n.length=0;const i=new M;for(let r=0;r!==e.length;r++){const o=e[r],a=o.length;for(let l=0;l!==a;l++){const c=(l+1)%a;t[o[l]].vsub(t[o[c]],i),i.normalize();let u=!1;for(let h=0;h!==n.length;h++)if(n[h].almostEquals(i)||n[h].almostEquals(i)){u=!0;break}u||n.push(i.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let e=0;e<this.faces.length;e++){for(let i=0;i<this.faces[e].length;i++)if(!this.vertices[this.faces[e][i]])throw new Error(`Vertex ${this.faces[e][i]} not found!`);const t=this.faceNormals[e]||new M;this.getFaceNormal(e,t),t.negate(t),this.faceNormals[e]=t;const n=this.vertices[this.faces[e][0]];if(t.dot(n)<0){console.error(`.faceNormals[${e}] = Vec3(${t.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let i=0;i<this.faces[e].length;i++)console.warn(`.vertices[${this.faces[e][i]}] = Vec3(${this.vertices[this.faces[e][i]].toString()})`)}}}getFaceNormal(e,t){const n=this.faces[e],i=this.vertices[n[0]],r=this.vertices[n[1]],o=this.vertices[n[2]];ci.computeNormal(i,r,o,t)}static computeNormal(e,t,n,i){const r=new M,o=new M;t.vsub(e,o),n.vsub(t,r),r.cross(o,i),i.isZero()||i.normalize()}clipAgainstHull(e,t,n,i,r,o,a,l,c){const u=new M;let h=-1,f=-Number.MAX_VALUE;for(let p=0;p<n.faces.length;p++){u.copy(n.faceNormals[p]),r.vmult(u,u);const g=u.dot(o);g>f&&(f=g,h=p)}const d=[];for(let p=0;p<n.faces[h].length;p++){const g=n.vertices[n.faces[h][p]],m=new M;m.copy(g),r.vmult(m,m),i.vadd(m,m),d.push(m)}h>=0&&this.clipFaceAgainstHull(o,e,t,d,a,l,c)}findSeparatingAxis(e,t,n,i,r,o,a,l){const c=new M,u=new M,h=new M,f=new M,d=new M,p=new M;let g=Number.MAX_VALUE;const m=this;if(m.uniqueAxes)for(let v=0;v!==m.uniqueAxes.length;v++){n.vmult(m.uniqueAxes[v],c);const y=m.testSepAxis(c,e,t,n,i,r);if(y===!1)return!1;y<g&&(g=y,o.copy(c))}else{const v=a?a.length:m.faces.length;for(let y=0;y<v;y++){const x=a?a[y]:y;c.copy(m.faceNormals[x]),n.vmult(c,c);const _=m.testSepAxis(c,e,t,n,i,r);if(_===!1)return!1;_<g&&(g=_,o.copy(c))}}if(e.uniqueAxes)for(let v=0;v!==e.uniqueAxes.length;v++){r.vmult(e.uniqueAxes[v],u);const y=m.testSepAxis(u,e,t,n,i,r);if(y===!1)return!1;y<g&&(g=y,o.copy(u))}else{const v=l?l.length:e.faces.length;for(let y=0;y<v;y++){const x=l?l[y]:y;u.copy(e.faceNormals[x]),r.vmult(u,u);const _=m.testSepAxis(u,e,t,n,i,r);if(_===!1)return!1;_<g&&(g=_,o.copy(u))}}for(let v=0;v!==m.uniqueEdges.length;v++){n.vmult(m.uniqueEdges[v],f);for(let y=0;y!==e.uniqueEdges.length;y++)if(r.vmult(e.uniqueEdges[y],d),f.cross(d,p),!p.almostZero()){p.normalize();const x=m.testSepAxis(p,e,t,n,i,r);if(x===!1)return!1;x<g&&(g=x,o.copy(p))}}return i.vsub(t,h),h.dot(o)>0&&o.negate(o),!0}testSepAxis(e,t,n,i,r,o){const a=this;ci.project(a,e,n,i,of),ci.project(t,e,r,o,af);const l=of[0],c=of[1],u=af[0],h=af[1];if(l<h||u<c)return!1;const f=l-h,d=u-c;return f<d?f:d}calculateLocalInertia(e,t){const n=new M,i=new M;this.computeLocalAABB(i,n);const r=n.x-i.x,o=n.y-i.y,a=n.z-i.z;t.x=1/12*e*(2*o*2*o+2*a*2*a),t.y=1/12*e*(2*r*2*r+2*a*2*a),t.z=1/12*e*(2*o*2*o+2*r*2*r)}getPlaneConstantOfFace(e){const t=this.faces[e],n=this.faceNormals[e],i=this.vertices[t[0]];return-n.dot(i)}clipFaceAgainstHull(e,t,n,i,r,o,a){const l=new M,c=new M,u=new M,h=new M,f=new M,d=new M,p=new M,g=new M,m=this,v=[],y=i,x=v;let _=-1,b=Number.MAX_VALUE;for(let L=0;L<m.faces.length;L++){l.copy(m.faceNormals[L]),n.vmult(l,l);const N=l.dot(e);N<b&&(b=N,_=L)}if(_<0)return;const S=m.faces[_];S.connectedFaces=[];for(let L=0;L<m.faces.length;L++)for(let N=0;N<m.faces[L].length;N++)S.indexOf(m.faces[L][N])!==-1&&L!==_&&S.connectedFaces.indexOf(L)===-1&&S.connectedFaces.push(L);const E=S.length;for(let L=0;L<E;L++){const N=m.vertices[S[L]],k=m.vertices[S[(L+1)%E]];N.vsub(k,c),u.copy(c),n.vmult(u,u),t.vadd(u,u),h.copy(this.faceNormals[_]),n.vmult(h,h),t.vadd(h,h),u.cross(h,f),f.negate(f),d.copy(N),n.vmult(d,d),t.vadd(d,d);const O=S.connectedFaces[L];p.copy(this.faceNormals[O]);const I=this.getPlaneConstantOfFace(O);g.copy(p),n.vmult(g,g);const U=I-g.dot(t);for(this.clipFaceAgainstPlane(y,x,g,U);y.length;)y.shift();for(;x.length;)y.push(x.shift())}p.copy(this.faceNormals[_]);const w=this.getPlaneConstantOfFace(_);g.copy(p),n.vmult(g,g);const A=w-g.dot(t);for(let L=0;L<y.length;L++){let N=g.dot(y[L])+A;if(N<=r&&(console.log(`clamped: depth=${N} to minDist=${r}`),N=r),N<=o){const k=y[L];if(N<=1e-6){const O={point:k,normal:g,depth:N};a.push(O)}}}}clipFaceAgainstPlane(e,t,n,i){let r,o;const a=e.length;if(a<2)return t;let l=e[e.length-1],c=e[0];r=n.dot(l)+i;for(let u=0;u<a;u++){if(c=e[u],o=n.dot(c)+i,r<0)if(o<0){const h=new M;h.copy(c),t.push(h)}else{const h=new M;l.lerp(c,r/(r-o),h),t.push(h)}else if(o<0){const h=new M;l.lerp(c,r/(r-o),h),t.push(h),t.push(c)}l=c,r=o}return t}computeWorldVertices(e,t){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new M);const n=this.vertices,i=this.worldVertices;for(let r=0;r!==this.vertices.length;r++)t.vmult(n[r],i[r]),e.vadd(i[r],i[r]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(e,t){const n=this.vertices;e.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let i=0;i<this.vertices.length;i++){const r=n[i];r.x<e.x?e.x=r.x:r.x>t.x&&(t.x=r.x),r.y<e.y?e.y=r.y:r.y>t.y&&(t.y=r.y),r.z<e.z?e.z=r.z:r.z>t.z&&(t.z=r.z)}}computeWorldFaceNormals(e){const t=this.faceNormals.length;for(;this.worldFaceNormals.length<t;)this.worldFaceNormals.push(new M);const n=this.faceNormals,i=this.worldFaceNormals;for(let r=0;r!==t;r++)e.vmult(n[r],i[r]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let e=0;const t=this.vertices;for(let n=0;n!==t.length;n++){const i=t[n].lengthSquared();i>e&&(e=i)}this.boundingSphereRadius=Math.sqrt(e)}calculateWorldAABB(e,t,n,i){const r=this.vertices;let o,a,l,c,u,h,f=new M;for(let d=0;d<r.length;d++){f.copy(r[d]),t.vmult(f,f),e.vadd(f,f);const p=f;(o===void 0||p.x<o)&&(o=p.x),(c===void 0||p.x>c)&&(c=p.x),(a===void 0||p.y<a)&&(a=p.y),(u===void 0||p.y>u)&&(u=p.y),(l===void 0||p.z<l)&&(l=p.z),(h===void 0||p.z>h)&&(h=p.z)}n.set(o,a,l),i.set(c,u,h)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(e){e===void 0&&(e=new M);const t=this.vertices;for(let n=0;n<t.length;n++)e.vadd(t[n],e);return e.scale(1/t.length,e),e}transformAllPoints(e,t){const n=this.vertices.length,i=this.vertices;if(t){for(let r=0;r<n;r++){const o=i[r];t.vmult(o,o)}for(let r=0;r<this.faceNormals.length;r++){const o=this.faceNormals[r];t.vmult(o,o)}}if(e)for(let r=0;r<n;r++){const o=i[r];o.vadd(e,o)}}pointIsInside(e){const t=this.vertices,n=this.faces,i=this.faceNormals,r=null,o=new M;this.getAveragePointLocal(o);for(let a=0;a<this.faces.length;a++){let l=i[a];const c=t[n[a][0]],u=new M;e.vsub(c,u);const h=l.dot(u),f=new M;o.vsub(c,f);const d=l.dot(f);if(h<0&&d>0||h>0&&d<0)return!1}return r?1:-1}static project(e,t,n,i,r){const o=e.vertices.length,a=S3;let l=0,c=0;const u=E3,h=e.vertices;u.setZero(),Ke.vectorToLocalFrame(n,i,t,a),Ke.pointToLocalFrame(n,i,u,u);const f=u.dot(a);c=l=h[0].dot(a);for(let d=1;d<o;d++){const p=h[d].dot(a);p>l&&(l=p),p<c&&(c=p)}if(c-=f,l-=f,c>l){const d=c;c=l,l=d}r[0]=l,r[1]=c}}const of=[],af=[],M3=new M,S3=new M,E3=new M;class Tl extends Te{constructor(e){super({type:Te.types.BOX}),this.halfExtents=e,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const e=this.halfExtents.x,t=this.halfExtents.y,n=this.halfExtents.z,i=M,r=[new i(-e,-t,-n),new i(e,-t,-n),new i(e,t,-n),new i(-e,t,-n),new i(-e,-t,n),new i(e,-t,n),new i(e,t,n),new i(-e,t,n)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],a=[new i(0,0,1),new i(0,1,0),new i(1,0,0)],l=new ci({vertices:r,faces:o,axes:a});this.convexPolyhedronRepresentation=l,l.material=this.material}calculateLocalInertia(e,t){return t===void 0&&(t=new M),Tl.calculateInertia(this.halfExtents,e,t),t}static calculateInertia(e,t,n){const i=e;n.x=1/12*t*(2*i.y*2*i.y+2*i.z*2*i.z),n.y=1/12*t*(2*i.x*2*i.x+2*i.z*2*i.z),n.z=1/12*t*(2*i.y*2*i.y+2*i.x*2*i.x)}getSideNormals(e,t){const n=e,i=this.halfExtents;if(n[0].set(i.x,0,0),n[1].set(0,i.y,0),n[2].set(0,0,i.z),n[3].set(-i.x,0,0),n[4].set(0,-i.y,0),n[5].set(0,0,-i.z),t!==void 0)for(let r=0;r!==n.length;r++)t.vmult(n[r],n[r]);return n}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(e,t,n){const i=this.halfExtents,r=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]];for(let o=0;o<r.length;o++)is.set(r[o][0],r[o][1],r[o][2]),t.vmult(is,is),e.vadd(is,is),n(is.x,is.y,is.z)}calculateWorldAABB(e,t,n,i){const r=this.halfExtents;Kn[0].set(r.x,r.y,r.z),Kn[1].set(-r.x,r.y,r.z),Kn[2].set(-r.x,-r.y,r.z),Kn[3].set(-r.x,-r.y,-r.z),Kn[4].set(r.x,-r.y,-r.z),Kn[5].set(r.x,r.y,-r.z),Kn[6].set(-r.x,r.y,-r.z),Kn[7].set(r.x,-r.y,r.z);const o=Kn[0];t.vmult(o,o),e.vadd(o,o),i.copy(o),n.copy(o);for(let a=1;a<8;a++){const l=Kn[a];t.vmult(l,l),e.vadd(l,l);const c=l.x,u=l.y,h=l.z;c>i.x&&(i.x=c),u>i.y&&(i.y=u),h>i.z&&(i.z=h),c<n.x&&(n.x=c),u<n.y&&(n.y=u),h<n.z&&(n.z=h)}}}const is=new M,Kn=[new M,new M,new M,new M,new M,new M,new M,new M],ih={DYNAMIC:1,STATIC:2,KINEMATIC:4},sh={AWAKE:0,SLEEPY:1,SLEEPING:2};class Re extends Vp{constructor(e){e===void 0&&(e={}),super(),this.id=Re.idCounter++,this.index=-1,this.world=null,this.vlambda=new M,this.collisionFilterGroup=typeof e.collisionFilterGroup=="number"?e.collisionFilterGroup:1,this.collisionFilterMask=typeof e.collisionFilterMask=="number"?e.collisionFilterMask:-1,this.collisionResponse=typeof e.collisionResponse=="boolean"?e.collisionResponse:!0,this.position=new M,this.previousPosition=new M,this.interpolatedPosition=new M,this.initPosition=new M,e.position&&(this.position.copy(e.position),this.previousPosition.copy(e.position),this.interpolatedPosition.copy(e.position),this.initPosition.copy(e.position)),this.velocity=new M,e.velocity&&this.velocity.copy(e.velocity),this.initVelocity=new M,this.force=new M;const t=typeof e.mass=="number"?e.mass:0;this.mass=t,this.invMass=t>0?1/t:0,this.material=e.material||null,this.linearDamping=typeof e.linearDamping=="number"?e.linearDamping:.01,this.type=t<=0?Re.STATIC:Re.DYNAMIC,typeof e.type==typeof Re.STATIC&&(this.type=e.type),this.allowSleep=typeof e.allowSleep!="undefined"?e.allowSleep:!0,this.sleepState=Re.AWAKE,this.sleepSpeedLimit=typeof e.sleepSpeedLimit!="undefined"?e.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof e.sleepTimeLimit!="undefined"?e.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new M,this.quaternion=new pt,this.initQuaternion=new pt,this.previousQuaternion=new pt,this.interpolatedQuaternion=new pt,e.quaternion&&(this.quaternion.copy(e.quaternion),this.initQuaternion.copy(e.quaternion),this.previousQuaternion.copy(e.quaternion),this.interpolatedQuaternion.copy(e.quaternion)),this.angularVelocity=new M,e.angularVelocity&&this.angularVelocity.copy(e.angularVelocity),this.initAngularVelocity=new M,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new M,this.invInertia=new M,this.invInertiaWorld=new Tn,this.invMassSolve=0,this.invInertiaSolve=new M,this.invInertiaWorldSolve=new Tn,this.fixedRotation=typeof e.fixedRotation!="undefined"?e.fixedRotation:!1,this.angularDamping=typeof e.angularDamping!="undefined"?e.angularDamping:.01,this.linearFactor=new M(1,1,1),e.linearFactor&&this.linearFactor.copy(e.linearFactor),this.angularFactor=new M(1,1,1),e.angularFactor&&this.angularFactor.copy(e.angularFactor),this.aabb=new ft,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new M,this.isTrigger=Boolean(e.isTrigger),e.shape&&this.addShape(e.shape),this.updateMassProperties()}wakeUp(){const e=this.sleepState;this.sleepState=Re.AWAKE,this.wakeUpAfterNarrowphase=!1,e===Re.SLEEPING&&this.dispatchEvent(Re.wakeupEvent)}sleep(){this.sleepState=Re.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(e){if(this.allowSleep){const t=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),i=this.sleepSpeedLimit**2;t===Re.AWAKE&&n<i?(this.sleepState=Re.SLEEPY,this.timeLastSleepy=e,this.dispatchEvent(Re.sleepyEvent)):t===Re.SLEEPY&&n>i?this.wakeUp():t===Re.SLEEPY&&e-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(Re.sleepEvent))}}updateSolveMassProperties(){this.sleepState===Re.SLEEPING||this.type===Re.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(e,t){return t===void 0&&(t=new M),e.vsub(this.position,t),this.quaternion.conjugate().vmult(t,t),t}vectorToLocalFrame(e,t){return t===void 0&&(t=new M),this.quaternion.conjugate().vmult(e,t),t}pointToWorldFrame(e,t){return t===void 0&&(t=new M),this.quaternion.vmult(e,t),t.vadd(this.position,t),t}vectorToWorldFrame(e,t){return t===void 0&&(t=new M),this.quaternion.vmult(e,t),t}addShape(e,t,n){const i=new M,r=new pt;return t&&i.copy(t),n&&r.copy(n),this.shapes.push(e),this.shapeOffsets.push(i),this.shapeOrientations.push(r),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=this,this}removeShape(e){const t=this.shapes.indexOf(e);return t===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(t,1),this.shapeOffsets.splice(t,1),this.shapeOrientations.splice(t,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=null,this)}updateBoundingRadius(){const e=this.shapes,t=this.shapeOffsets,n=e.length;let i=0;for(let r=0;r!==n;r++){const o=e[r];o.updateBoundingSphereRadius();const a=t[r].length(),l=o.boundingSphereRadius;a+l>i&&(i=a+l)}this.boundingRadius=i}updateAABB(){const e=this.shapes,t=this.shapeOffsets,n=this.shapeOrientations,i=e.length,r=T3,o=A3,a=this.quaternion,l=this.aabb,c=C3;for(let u=0;u!==i;u++){const h=e[u];a.vmult(t[u],r),r.vadd(this.position,r),a.mult(n[u],o),h.calculateWorldAABB(r,o,c.lowerBound,c.upperBound),u===0?l.copy(c):l.extend(c)}this.aabbNeedsUpdate=!1}updateInertiaWorld(e){const t=this.invInertia;if(!(t.x===t.y&&t.y===t.z&&!e)){const n=R3,i=L3;n.setRotationFromQuaternion(this.quaternion),n.transpose(i),n.scale(t,n),n.mmult(i,this.invInertiaWorld)}}applyForce(e,t){if(t===void 0&&(t=new M),this.type!==Re.DYNAMIC)return;this.sleepState===Re.SLEEPING&&this.wakeUp();const n=I3;t.cross(e,n),this.force.vadd(e,this.force),this.torque.vadd(n,this.torque)}applyLocalForce(e,t){if(t===void 0&&(t=new M),this.type!==Re.DYNAMIC)return;const n=F3,i=B3;this.vectorToWorldFrame(e,n),this.vectorToWorldFrame(t,i),this.applyForce(n,i)}applyTorque(e){this.type===Re.DYNAMIC&&(this.sleepState===Re.SLEEPING&&this.wakeUp(),this.torque.vadd(e,this.torque))}applyImpulse(e,t){if(t===void 0&&(t=new M),this.type!==Re.DYNAMIC)return;this.sleepState===Re.SLEEPING&&this.wakeUp();const n=t,i=D3;i.copy(e),i.scale(this.invMass,i),this.velocity.vadd(i,this.velocity);const r=z3;n.cross(e,r),this.invInertiaWorld.vmult(r,r),this.angularVelocity.vadd(r,this.angularVelocity)}applyLocalImpulse(e,t){if(t===void 0&&(t=new M),this.type!==Re.DYNAMIC)return;const n=N3,i=O3;this.vectorToWorldFrame(e,n),this.vectorToWorldFrame(t,i),this.applyImpulse(n,i)}updateMassProperties(){const e=U3;this.invMass=this.mass>0?1/this.mass:0;const t=this.inertia,n=this.fixedRotation;this.updateAABB(),e.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),Tl.calculateInertia(e,this.mass,t),this.invInertia.set(t.x>0&&!n?1/t.x:0,t.y>0&&!n?1/t.y:0,t.z>0&&!n?1/t.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(e,t){const n=new M;return e.vsub(this.position,n),this.angularVelocity.cross(n,t),this.velocity.vadd(t,t),t}integrate(e,t,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===Re.DYNAMIC||this.type===Re.KINEMATIC)||this.sleepState===Re.SLEEPING)return;const i=this.velocity,r=this.angularVelocity,o=this.position,a=this.force,l=this.torque,c=this.quaternion,u=this.invMass,h=this.invInertiaWorld,f=this.linearFactor,d=u*e;i.x+=a.x*d*f.x,i.y+=a.y*d*f.y,i.z+=a.z*d*f.z;const p=h.elements,g=this.angularFactor,m=l.x*g.x,v=l.y*g.y,y=l.z*g.z;r.x+=e*(p[0]*m+p[1]*v+p[2]*y),r.y+=e*(p[3]*m+p[4]*v+p[5]*y),r.z+=e*(p[6]*m+p[7]*v+p[8]*y),o.x+=i.x*e,o.y+=i.y*e,o.z+=i.z*e,c.integrate(this.angularVelocity,e,this.angularFactor,c),t&&(n?c.normalizeFast():c.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}Re.idCounter=0;Re.COLLIDE_EVENT_NAME="collide";Re.DYNAMIC=ih.DYNAMIC;Re.STATIC=ih.STATIC;Re.KINEMATIC=ih.KINEMATIC;Re.AWAKE=sh.AWAKE;Re.SLEEPY=sh.SLEEPY;Re.SLEEPING=sh.SLEEPING;Re.wakeupEvent={type:"wakeup"};Re.sleepyEvent={type:"sleepy"};Re.sleepEvent={type:"sleep"};const T3=new M,A3=new pt,C3=new ft,R3=new Tn,L3=new Tn,P3=new Tn,I3=new M,F3=new M,B3=new M,D3=new M,z3=new M,N3=new M,O3=new M,U3=new M;class rh{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(e,t,n){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(e,t){return!((e.collisionFilterGroup&t.collisionFilterMask)===0||(t.collisionFilterGroup&e.collisionFilterMask)===0||((e.type&Re.STATIC)!==0||e.sleepState===Re.SLEEPING)&&((t.type&Re.STATIC)!==0||t.sleepState===Re.SLEEPING))}intersectionTest(e,t,n,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(e,t,n,i):this.doBoundingSphereBroadphase(e,t,n,i)}doBoundingSphereBroadphase(e,t,n,i){const r=k3;t.position.vsub(e.position,r);const o=(e.boundingRadius+t.boundingRadius)**2;r.lengthSquared()<o&&(n.push(e),i.push(t))}doBoundingBoxBroadphase(e,t,n,i){e.aabbNeedsUpdate&&e.updateAABB(),t.aabbNeedsUpdate&&t.updateAABB(),e.aabb.overlaps(t.aabb)&&(n.push(e),i.push(t))}makePairsUnique(e,t){const n=H3,i=V3,r=G3,o=e.length;for(let a=0;a!==o;a++)i[a]=e[a],r[a]=t[a];e.length=0,t.length=0;for(let a=0;a!==o;a++){const l=i[a].id,c=r[a].id,u=l<c?`${l},${c}`:`${c},${l}`;n[u]=a,n.keys.push(u)}for(let a=0;a!==n.keys.length;a++){const l=n.keys.pop(),c=n[l];e.push(i[c]),t.push(r[c]),delete n[l]}}setWorld(e){}static boundingSphereCheck(e,t){const n=new M;e.position.vsub(t.position,n);const i=e.shapes[0],r=t.shapes[0];return Math.pow(i.boundingSphereRadius+r.boundingSphereRadius,2)>n.lengthSquared()}aabbQuery(e,t,n){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const k3=new M;new M;new pt;new M;const H3={keys:[]},V3=[],G3=[];new M;class W3 extends rh{constructor(e,t,n,i,r){e===void 0&&(e=new M(100,100,100)),t===void 0&&(t=new M(-100,-100,-100)),n===void 0&&(n=10),i===void 0&&(i=10),r===void 0&&(r=10),super(),this.nx=n,this.ny=i,this.nz=r,this.aabbMin=e,this.aabbMax=t;const o=this.nx*this.ny*this.nz;if(o<=0)throw"GridBroadphase: Each dimension's n must be >0";this.bins=[],this.binLengths=[],this.bins.length=o,this.binLengths.length=o;for(let a=0;a<o;a++)this.bins[a]=[],this.binLengths[a]=0}collisionPairs(e,t,n){const i=e.bodies.length,r=e.bodies,o=this.aabbMax,a=this.aabbMin,l=this.nx,c=this.ny,u=this.nz,h=c*u,f=u,d=1,p=o.x,g=o.y,m=o.z,v=a.x,y=a.y,x=a.z,_=l/(p-v),b=c/(g-y),S=u/(m-x),E=(p-v)/l,w=(g-y)/c,A=(m-x)/u,L=Math.sqrt(E*E+w*w+A*A)*.5,N=Te.types,k=N.SPHERE,O=N.PLANE;N.BOX,N.COMPOUND,N.CONVEXPOLYHEDRON;const I=this.bins,U=this.binLengths,D=this.bins.length;for(let V=0;V!==D;V++)U[V]=0;const j=Math.ceil;function G(V,Y,te,X,ue,me,ge){let Q=(V-v)*_|0,Pe=(Y-y)*b|0,Ae=(te-x)*S|0,Be=j((X-v)*_),pe=j((ue-y)*b),De=j((me-x)*S);Q<0?Q=0:Q>=l&&(Q=l-1),Pe<0?Pe=0:Pe>=c&&(Pe=c-1),Ae<0?Ae=0:Ae>=u&&(Ae=u-1),Be<0?Be=0:Be>=l&&(Be=l-1),pe<0?pe=0:pe>=c&&(pe=c-1),De<0?De=0:De>=u&&(De=u-1),Q*=h,Pe*=f,Ae*=d,Be*=h,pe*=f,De*=d;for(let re=Q;re<=Be;re+=h)for(let C=Pe;C<=pe;C+=f)for(let B=Ae;B<=De;B+=d){const W=re+C+B;I[W][U[W]++]=ge}}for(let V=0;V!==i;V++){const Y=r[V],te=Y.shapes[0];switch(te.type){case k:{const X=te,ue=Y.position.x,me=Y.position.y,ge=Y.position.z,Q=X.radius;G(ue-Q,me-Q,ge-Q,ue+Q,me+Q,ge+Q,Y);break}case O:{const X=te;X.worldNormalNeedsUpdate&&X.computeWorldNormal(Y.quaternion);const ue=X.worldNormal,me=v+E*.5-Y.position.x,ge=y+w*.5-Y.position.y,Q=x+A*.5-Y.position.z,Pe=q3;Pe.set(me,ge,Q);for(let Ae=0,Be=0;Ae!==l;Ae++,Be+=h,Pe.y=ge,Pe.x+=E)for(let pe=0,De=0;pe!==c;pe++,De+=f,Pe.z=Q,Pe.y+=w)for(let re=0,C=0;re!==u;re++,C+=d,Pe.z+=A)if(Pe.dot(ue)<L){const B=Be+De+C;I[B][U[B]++]=Y}break}default:{Y.aabbNeedsUpdate&&Y.updateAABB(),G(Y.aabb.lowerBound.x,Y.aabb.lowerBound.y,Y.aabb.lowerBound.z,Y.aabb.upperBound.x,Y.aabb.upperBound.y,Y.aabb.upperBound.z,Y);break}}}for(let V=0;V!==D;V++){const Y=U[V];if(Y>1){const te=I[V];for(let X=0;X!==Y;X++){const ue=te[X];for(let me=0;me!==X;me++){const ge=te[me];this.needBroadphaseCollision(ue,ge)&&this.intersectionTest(ue,ge,t,n)}}}}this.makePairsUnique(t,n)}}const q3=new M;new M;class R_ extends rh{constructor(){super()}collisionPairs(e,t,n){const i=e.bodies,r=i.length;let o,a;for(let l=0;l!==r;l++)for(let c=0;c!==l;c++)o=i[l],a=i[c],this.needBroadphaseCollision(o,a)&&this.intersectionTest(o,a,t,n)}aabbQuery(e,t,n){n===void 0&&(n=[]);for(let i=0;i<e.bodies.length;i++){const r=e.bodies[i];r.aabbNeedsUpdate&&r.updateAABB(),r.aabb.overlaps(t)&&n.push(r)}return n}}class Uo{constructor(){this.rayFromWorld=new M,this.rayToWorld=new M,this.hitNormalWorld=new M,this.hitPointWorld=new M,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(e,t,n,i,r,o,a){this.rayFromWorld.copy(e),this.rayToWorld.copy(t),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(i),this.shape=r,this.body=o,this.distance=a}}let L_,P_,I_,F_,B_,D_,z_;const oh={CLOSEST:1,ANY:2,ALL:4};L_=Te.types.SPHERE;P_=Te.types.PLANE;I_=Te.types.BOX;F_=Te.types.CYLINDER;B_=Te.types.CONVEXPOLYHEDRON;D_=Te.types.HEIGHTFIELD;z_=Te.types.TRIMESH;class Mt{get[L_](){return this._intersectSphere}get[P_](){return this._intersectPlane}get[I_](){return this._intersectBox}get[F_](){return this._intersectConvex}get[B_](){return this._intersectConvex}get[D_](){return this._intersectHeightfield}get[z_](){return this._intersectTrimesh}constructor(e,t){e===void 0&&(e=new M),t===void 0&&(t=new M),this.from=e.clone(),this.to=t.clone(),this.direction=new M,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=Mt.ANY,this.result=new Uo,this.hasHit=!1,this.callback=n=>{}}intersectWorld(e,t){return this.mode=t.mode||Mt.ANY,this.result=t.result||new Uo,this.skipBackfaces=!!t.skipBackfaces,this.collisionFilterMask=typeof t.collisionFilterMask!="undefined"?t.collisionFilterMask:-1,this.collisionFilterGroup=typeof t.collisionFilterGroup!="undefined"?t.collisionFilterGroup:-1,this.checkCollisionResponse=typeof t.checkCollisionResponse!="undefined"?t.checkCollisionResponse:!0,t.from&&this.from.copy(t.from),t.to&&this.to.copy(t.to),this.callback=t.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(b0),lf.length=0,e.broadphase.aabbQuery(e,b0,lf),this.intersectBodies(lf),this.hasHit}intersectBody(e,t){t&&(this.result=t,this.updateDirection());const n=this.checkCollisionResponse;if(n&&!e.collisionResponse||(this.collisionFilterGroup&e.collisionFilterMask)===0||(e.collisionFilterGroup&this.collisionFilterMask)===0)return;const i=j3,r=X3;for(let o=0,a=e.shapes.length;o<a;o++){const l=e.shapes[o];if(!(n&&!l.collisionResponse)&&(e.quaternion.mult(e.shapeOrientations[o],r),e.quaternion.vmult(e.shapeOffsets[o],i),i.vadd(e.position,i),this.intersectShape(l,r,i,e),this.result.shouldStop))break}}intersectBodies(e,t){t&&(this.result=t,this.updateDirection());for(let n=0,i=e.length;!this.result.shouldStop&&n<i;n++)this.intersectBody(e[n])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(e,t,n,i){const r=this.from;if(cI(r,this.direction,n)>e.boundingSphereRadius)return;const a=this[e.type];a&&a.call(this,e,t,n,i,e)}_intersectBox(e,t,n,i,r){return this._intersectConvex(e.convexPolyhedronRepresentation,t,n,i,r)}_intersectPlane(e,t,n,i,r){const o=this.from,a=this.to,l=this.direction,c=new M(0,0,1);t.vmult(c,c);const u=new M;o.vsub(n,u);const h=u.dot(c);a.vsub(n,u);const f=u.dot(c);if(h*f>0||o.distanceTo(a)<h)return;const d=c.dot(l);if(Math.abs(d)<this.precision)return;const p=new M,g=new M,m=new M;o.vsub(n,p);const v=-c.dot(p)/d;l.scale(v,g),o.vadd(g,m),this.reportIntersection(c,m,r,i,-1)}getAABB(e){const{lowerBound:t,upperBound:n}=e,i=this.to,r=this.from;t.x=Math.min(i.x,r.x),t.y=Math.min(i.y,r.y),t.z=Math.min(i.z,r.z),n.x=Math.max(i.x,r.x),n.y=Math.max(i.y,r.y),n.z=Math.max(i.z,r.z)}_intersectHeightfield(e,t,n,i,r){e.data,e.elementSize;const o=$3;o.from.copy(this.from),o.to.copy(this.to),Ke.pointToLocalFrame(n,t,o.from,o.from),Ke.pointToLocalFrame(n,t,o.to,o.to),o.updateDirection();const a=Y3;let l,c,u,h;l=c=0,u=h=e.data.length-1;const f=new ft;o.getAABB(f),e.getIndexOfPosition(f.lowerBound.x,f.lowerBound.y,a,!0),l=Math.max(l,a[0]),c=Math.max(c,a[1]),e.getIndexOfPosition(f.upperBound.x,f.upperBound.y,a,!0),u=Math.min(u,a[0]+1),h=Math.min(h,a[1]+1);for(let d=l;d<u;d++)for(let p=c;p<h;p++){if(this.result.shouldStop)return;if(e.getAabbAtIndex(d,p,f),!!f.overlapsRay(o)){if(e.getConvexTrianglePillar(d,p,!1),Ke.pointToWorldFrame(n,t,e.pillarOffset,Rc),this._intersectConvex(e.pillarConvex,t,Rc,i,r,M0),this.result.shouldStop)return;e.getConvexTrianglePillar(d,p,!0),Ke.pointToWorldFrame(n,t,e.pillarOffset,Rc),this._intersectConvex(e.pillarConvex,t,Rc,i,r,M0)}}}_intersectSphere(e,t,n,i,r){const o=this.from,a=this.to,l=e.radius,c=(a.x-o.x)**2+(a.y-o.y)**2+(a.z-o.z)**2,u=2*((a.x-o.x)*(o.x-n.x)+(a.y-o.y)*(o.y-n.y)+(a.z-o.z)*(o.z-n.z)),h=(o.x-n.x)**2+(o.y-n.y)**2+(o.z-n.z)**2-l**2,f=u**2-4*c*h,d=Z3,p=K3;if(!(f<0))if(f===0)o.lerp(a,f,d),d.vsub(n,p),p.normalize(),this.reportIntersection(p,d,r,i,-1);else{const g=(-u-Math.sqrt(f))/(2*c),m=(-u+Math.sqrt(f))/(2*c);if(g>=0&&g<=1&&(o.lerp(a,g,d),d.vsub(n,p),p.normalize(),this.reportIntersection(p,d,r,i,-1)),this.result.shouldStop)return;m>=0&&m<=1&&(o.lerp(a,m,d),d.vsub(n,p),p.normalize(),this.reportIntersection(p,d,r,i,-1))}}_intersectConvex(e,t,n,i,r,o){const a=J3,l=S0,c=o&&o.faceList||null,u=e.faces,h=e.vertices,f=e.faceNormals,d=this.direction,p=this.from,g=this.to,m=p.distanceTo(g),v=c?c.length:u.length,y=this.result;for(let x=0;!y.shouldStop&&x<v;x++){const _=c?c[x]:x,b=u[_],S=f[_],E=t,w=n;l.copy(h[b[0]]),E.vmult(l,l),l.vadd(w,l),l.vsub(p,l),E.vmult(S,a);const A=d.dot(a);if(Math.abs(A)<this.precision)continue;const L=a.dot(l)/A;if(!(L<0)){d.scale(L,rn),rn.vadd(p,rn),Bn.copy(h[b[0]]),E.vmult(Bn,Bn),w.vadd(Bn,Bn);for(let N=1;!y.shouldStop&&N<b.length-1;N++){Jn.copy(h[b[N]]),Qn.copy(h[b[N+1]]),E.vmult(Jn,Jn),E.vmult(Qn,Qn),w.vadd(Jn,Jn),w.vadd(Qn,Qn);const k=rn.distanceTo(p);!(Mt.pointInTriangle(rn,Bn,Jn,Qn)||Mt.pointInTriangle(rn,Jn,Bn,Qn))||k>m||this.reportIntersection(a,rn,r,i,_)}}}}_intersectTrimesh(e,t,n,i,r,o){const a=tI,l=aI,c=lI,u=S0,h=nI,f=iI,d=sI,p=oI,g=rI,m=e.indices;e.vertices;const v=this.from,y=this.to,x=this.direction;c.position.copy(n),c.quaternion.copy(t),Ke.vectorToLocalFrame(n,t,x,h),Ke.pointToLocalFrame(n,t,v,f),Ke.pointToLocalFrame(n,t,y,d),d.x*=e.scale.x,d.y*=e.scale.y,d.z*=e.scale.z,f.x*=e.scale.x,f.y*=e.scale.y,f.z*=e.scale.z,d.vsub(f,h),h.normalize();const _=f.distanceSquared(d);e.tree.rayQuery(this,c,l);for(let b=0,S=l.length;!this.result.shouldStop&&b!==S;b++){const E=l[b];e.getNormal(E,a),e.getVertex(m[E*3],Bn),Bn.vsub(f,u);const w=h.dot(a),A=a.dot(u)/w;if(A<0)continue;h.scale(A,rn),rn.vadd(f,rn),e.getVertex(m[E*3+1],Jn),e.getVertex(m[E*3+2],Qn);const L=rn.distanceSquared(f);!(Mt.pointInTriangle(rn,Jn,Bn,Qn)||Mt.pointInTriangle(rn,Bn,Jn,Qn))||L>_||(Ke.vectorToWorldFrame(t,a,g),Ke.pointToWorldFrame(n,t,rn,p),this.reportIntersection(g,p,r,i,E))}l.length=0}reportIntersection(e,t,n,i,r){const o=this.from,a=this.to,l=o.distanceTo(t),c=this.result;if(!(this.skipBackfaces&&e.dot(this.direction)>0))switch(c.hitFaceIndex=typeof r!="undefined"?r:-1,this.mode){case Mt.ALL:this.hasHit=!0,c.set(o,a,e,t,n,i,l),c.hasHit=!0,this.callback(c);break;case Mt.CLOSEST:(l<c.distance||!c.hasHit)&&(this.hasHit=!0,c.hasHit=!0,c.set(o,a,e,t,n,i,l));break;case Mt.ANY:this.hasHit=!0,c.hasHit=!0,c.set(o,a,e,t,n,i,l),c.shouldStop=!0;break}}static pointInTriangle(e,t,n,i){i.vsub(t,Zs),n.vsub(t,va),e.vsub(t,cf);const r=Zs.dot(Zs),o=Zs.dot(va),a=Zs.dot(cf),l=va.dot(va),c=va.dot(cf);let u,h;return(u=l*a-o*c)>=0&&(h=r*c-o*a)>=0&&u+h<r*l-o*o}}Mt.CLOSEST=oh.CLOSEST;Mt.ANY=oh.ANY;Mt.ALL=oh.ALL;const b0=new ft,lf=[],va=new M,cf=new M,j3=new M,X3=new pt,rn=new M,Bn=new M,Jn=new M,Qn=new M;new M;new Uo;const M0={faceList:[0]},Rc=new M,$3=new Mt,Y3=[],Z3=new M,K3=new M,J3=new M,Q3=new M,eI=new M,S0=new M,tI=new M,nI=new M,iI=new M,sI=new M,rI=new M,oI=new M;new ft;const aI=[],lI=new Ke,Zs=new M,Lc=new M;function cI(s,e,t){t.vsub(s,Zs);const n=Zs.dot(e);return e.scale(n,Lc),Lc.vadd(s,Lc),t.distanceTo(Lc)}class lo extends rh{static checkBounds(e,t,n){let i,r;n===0?(i=e.position.x,r=t.position.x):n===1?(i=e.position.y,r=t.position.y):n===2&&(i=e.position.z,r=t.position.z);const o=e.boundingRadius,a=t.boundingRadius,l=i+o;return r-a<l}static insertionSortX(e){for(let t=1,n=e.length;t<n;t++){const i=e[t];let r;for(r=t-1;r>=0&&!(e[r].aabb.lowerBound.x<=i.aabb.lowerBound.x);r--)e[r+1]=e[r];e[r+1]=i}return e}static insertionSortY(e){for(let t=1,n=e.length;t<n;t++){const i=e[t];let r;for(r=t-1;r>=0&&!(e[r].aabb.lowerBound.y<=i.aabb.lowerBound.y);r--)e[r+1]=e[r];e[r+1]=i}return e}static insertionSortZ(e){for(let t=1,n=e.length;t<n;t++){const i=e[t];let r;for(r=t-1;r>=0&&!(e[r].aabb.lowerBound.z<=i.aabb.lowerBound.z);r--)e[r+1]=e[r];e[r+1]=i}return e}constructor(e){super(),this.axisList=[],this.world=null,this.axisIndex=0;const t=this.axisList;this._addBodyHandler=n=>{t.push(n.body)},this._removeBodyHandler=n=>{const i=t.indexOf(n.body);i!==-1&&t.splice(i,1)},e&&this.setWorld(e)}setWorld(e){this.axisList.length=0;for(let t=0;t<e.bodies.length;t++)this.axisList.push(e.bodies[t]);e.removeEventListener("addBody",this._addBodyHandler),e.removeEventListener("removeBody",this._removeBodyHandler),e.addEventListener("addBody",this._addBodyHandler),e.addEventListener("removeBody",this._removeBodyHandler),this.world=e,this.dirty=!0}collisionPairs(e,t,n){const i=this.axisList,r=i.length,o=this.axisIndex;let a,l;for(this.dirty&&(this.sortList(),this.dirty=!1),a=0;a!==r;a++){const c=i[a];for(l=a+1;l<r;l++){const u=i[l];if(!!this.needBroadphaseCollision(c,u)){if(!lo.checkBounds(c,u,o))break;this.intersectionTest(c,u,t,n)}}}}sortList(){const e=this.axisList,t=this.axisIndex,n=e.length;for(let i=0;i!==n;i++){const r=e[i];r.aabbNeedsUpdate&&r.updateAABB()}t===0?lo.insertionSortX(e):t===1?lo.insertionSortY(e):t===2&&lo.insertionSortZ(e)}autoDetectAxis(){let e=0,t=0,n=0,i=0,r=0,o=0;const a=this.axisList,l=a.length,c=1/l;for(let d=0;d!==l;d++){const p=a[d],g=p.position.x;e+=g,t+=g*g;const m=p.position.y;n+=m,i+=m*m;const v=p.position.z;r+=v,o+=v*v}const u=t-e*e*c,h=i-n*n*c,f=o-r*r*c;u>h?u>f?this.axisIndex=0:this.axisIndex=2:h>f?this.axisIndex=1:this.axisIndex=2}aabbQuery(e,t,n){n===void 0&&(n=[]),this.dirty&&(this.sortList(),this.dirty=!1);const i=this.axisIndex;let r="x";i===1&&(r="y"),i===2&&(r="z");const o=this.axisList;t.lowerBound[r],t.upperBound[r];for(let a=0;a<o.length;a++){const l=o[a];l.aabbNeedsUpdate&&l.updateAABB(),l.aabb.overlaps(t)&&n.push(l)}return n}}class ah{static defaults(e,t){e===void 0&&(e={});for(let n in t)n in e||(e[n]=t[n]);return e}}class Qo{constructor(e,t,n){n===void 0&&(n={}),n=ah.defaults(n,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=e,this.bodyB=t,this.id=Qo.idCounter++,this.collideConnected=n.collideConnected,n.wakeUpBodies&&(e&&e.wakeUp(),t&&t.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const e=this.equations;for(let t=0;t<e.length;t++)e[t].enabled=!0}disable(){const e=this.equations;for(let t=0;t<e.length;t++)e[t].enabled=!1}}Qo.idCounter=0;class xd{constructor(){this.spatial=new M,this.rotational=new M}multiplyElement(e){return e.spatial.dot(this.spatial)+e.rotational.dot(this.rotational)}multiplyVectors(e,t){return e.dot(this.spatial)+t.dot(this.rotational)}}class qi{constructor(e,t,n,i){n===void 0&&(n=-1e6),i===void 0&&(i=1e6),this.id=qi.idCounter++,this.minForce=n,this.maxForce=i,this.bi=e,this.bj=t,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new xd,this.jacobianElementB=new xd,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(e,t,n){const i=t,r=e,o=n;this.a=4/(o*(1+4*i)),this.b=4*i/(1+4*i),this.eps=4/(o*o*r*(1+4*i))}computeB(e,t,n){const i=this.computeGW(),r=this.computeGq(),o=this.computeGiMf();return-r*e-i*t-o*n}computeGq(){const e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,r=n.position,o=i.position;return e.spatial.dot(r)+t.spatial.dot(o)}computeGW(){const e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,r=n.velocity,o=i.velocity,a=n.angularVelocity,l=i.angularVelocity;return e.multiplyVectors(r,a)+t.multiplyVectors(o,l)}computeGWlambda(){const e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,r=n.vlambda,o=i.vlambda,a=n.wlambda,l=i.wlambda;return e.multiplyVectors(r,a)+t.multiplyVectors(o,l)}computeGiMf(){const e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,r=n.force,o=n.torque,a=i.force,l=i.torque,c=n.invMassSolve,u=i.invMassSolve;return r.scale(c,E0),a.scale(u,T0),n.invInertiaWorldSolve.vmult(o,A0),i.invInertiaWorldSolve.vmult(l,C0),e.multiplyVectors(E0,A0)+t.multiplyVectors(T0,C0)}computeGiMGt(){const e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,r=n.invMassSolve,o=i.invMassSolve,a=n.invInertiaWorldSolve,l=i.invInertiaWorldSolve;let c=r+o;return a.vmult(e.rotational,Pc),c+=Pc.dot(e.rotational),l.vmult(t.rotational,Pc),c+=Pc.dot(t.rotational),c}addToWlambda(e){const t=this.jacobianElementA,n=this.jacobianElementB,i=this.bi,r=this.bj,o=uI;i.vlambda.addScaledVector(i.invMassSolve*e,t.spatial,i.vlambda),r.vlambda.addScaledVector(r.invMassSolve*e,n.spatial,r.vlambda),i.invInertiaWorldSolve.vmult(t.rotational,o),i.wlambda.addScaledVector(e,o,i.wlambda),r.invInertiaWorldSolve.vmult(n.rotational,o),r.wlambda.addScaledVector(e,o,r.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}qi.idCounter=0;const E0=new M,T0=new M,A0=new M,C0=new M,Pc=new M,uI=new M;class mo extends qi{constructor(e,t,n){n===void 0&&(n=1e6),super(e,t,0,n),this.restitution=0,this.ri=new M,this.rj=new M,this.ni=new M}computeB(e){const t=this.a,n=this.b,i=this.bi,r=this.bj,o=this.ri,a=this.rj,l=hI,c=fI,u=i.velocity,h=i.angularVelocity;i.force,i.torque;const f=r.velocity,d=r.angularVelocity;r.force,r.torque;const p=dI,g=this.jacobianElementA,m=this.jacobianElementB,v=this.ni;o.cross(v,l),a.cross(v,c),v.negate(g.spatial),l.negate(g.rotational),m.spatial.copy(v),m.rotational.copy(c),p.copy(r.position),p.vadd(a,p),p.vsub(i.position,p),p.vsub(o,p);const y=v.dot(p),x=this.restitution+1,_=x*f.dot(v)-x*u.dot(v)+d.dot(c)-h.dot(l),b=this.computeGiMf();return-y*t-_*n-e*b}getImpactVelocityAlongNormal(){const e=pI,t=mI,n=gI,i=yI,r=vI;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,i),this.bi.getVelocityAtWorldPoint(n,e),this.bj.getVelocityAtWorldPoint(i,t),e.vsub(t,r),this.ni.dot(r)}}const hI=new M,fI=new M,dI=new M,pI=new M,mI=new M,gI=new M,yI=new M,vI=new M;class lh extends Qo{constructor(e,t,n,i,r){t===void 0&&(t=new M),i===void 0&&(i=new M),r===void 0&&(r=1e6),super(e,n),this.pivotA=t.clone(),this.pivotB=i.clone();const o=this.equationX=new mo(e,n),a=this.equationY=new mo(e,n),l=this.equationZ=new mo(e,n);this.equations.push(o,a,l),o.minForce=a.minForce=l.minForce=-r,o.maxForce=a.maxForce=l.maxForce=r,o.ni.set(1,0,0),a.ni.set(0,1,0),l.ni.set(0,0,1)}update(){const e=this.bodyA,t=this.bodyB,n=this.equationX,i=this.equationY,r=this.equationZ;e.quaternion.vmult(this.pivotA,n.ri),t.quaternion.vmult(this.pivotB,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),r.ri.copy(n.ri),r.rj.copy(n.rj)}}class xI extends qi{constructor(e,t,n){n===void 0&&(n={});const i=typeof n.maxForce!="undefined"?n.maxForce:1e6;super(e,t,-i,i),this.axisA=n.axisA?n.axisA.clone():new M(1,0,0),this.axisB=n.axisB?n.axisB.clone():new M(0,1,0),this.angle=typeof n.angle!="undefined"?n.angle:0}computeB(e){const t=this.a,n=this.b,i=this.axisA,r=this.axisB,o=_I,a=wI,l=this.jacobianElementA,c=this.jacobianElementB;i.cross(r,o),r.cross(i,a),l.rotational.copy(a),c.rotational.copy(o);const u=Math.cos(this.angle)-i.dot(r),h=this.computeGW(),f=this.computeGiMf();return-u*t-h*n-e*f}}const _I=new M,wI=new M;class ar extends qi{constructor(e,t,n){n===void 0&&(n={});const i=typeof n.maxForce!="undefined"?n.maxForce:1e6;super(e,t,-i,i),this.axisA=n.axisA?n.axisA.clone():new M(1,0,0),this.axisB=n.axisB?n.axisB.clone():new M(0,1,0),this.maxAngle=Math.PI/2}computeB(e){const t=this.a,n=this.b,i=this.axisA,r=this.axisB,o=bI,a=MI,l=this.jacobianElementA,c=this.jacobianElementB;i.cross(r,o),r.cross(i,a),l.rotational.copy(a),c.rotational.copy(o);const u=Math.cos(this.maxAngle)-i.dot(r),h=this.computeGW(),f=this.computeGiMf();return-u*t-h*n-e*f}}const bI=new M,MI=new M;class SI extends lh{constructor(e,t,n){n===void 0&&(n={});const i=typeof n.maxForce!="undefined"?n.maxForce:1e6,r=n.pivotA?n.pivotA.clone():new M,o=n.pivotB?n.pivotB.clone():new M;super(e,r,t,o,i),this.axisA=n.axisA?n.axisA.clone():new M,this.axisB=n.axisB?n.axisB.clone():new M,this.collideConnected=!!n.collideConnected,this.angle=typeof n.angle!="undefined"?n.angle:0;const a=this.coneEquation=new xI(e,t,n),l=this.twistEquation=new ar(e,t,n);this.twistAngle=typeof n.twistAngle!="undefined"?n.twistAngle:0,a.maxForce=0,a.minForce=-i,l.maxForce=0,l.minForce=-i,this.equations.push(a,l)}update(){const e=this.bodyA,t=this.bodyB,n=this.coneEquation,i=this.twistEquation;super.update(),e.vectorToWorldFrame(this.axisA,n.axisA),t.vectorToWorldFrame(this.axisB,n.axisB),this.axisA.tangents(i.axisA,i.axisA),e.vectorToWorldFrame(i.axisA,i.axisA),this.axisB.tangents(i.axisB,i.axisB),t.vectorToWorldFrame(i.axisB,i.axisB),n.angle=this.angle,i.maxAngle=this.twistAngle}}new M;new M;class EI extends Qo{constructor(e,t,n,i){i===void 0&&(i=1e6),super(e,t),typeof n=="undefined"&&(n=e.position.distanceTo(t.position)),this.distance=n;const r=this.distanceEquation=new mo(e,t);this.equations.push(r),r.minForce=-i,r.maxForce=i}update(){const e=this.bodyA,t=this.bodyB,n=this.distanceEquation,i=this.distance*.5,r=n.ni;t.position.vsub(e.position,r),r.normalize(),r.scale(i,n.ri),r.scale(-i,n.rj)}}class TI extends lh{constructor(e,t,n){n===void 0&&(n={});const i=typeof n.maxForce!="undefined"?n.maxForce:1e6,r=new M,o=new M,a=new M;e.position.vadd(t.position,a),a.scale(.5,a),t.pointToLocalFrame(a,o),e.pointToLocalFrame(a,r),super(e,r,t,o,i),this.xA=e.vectorToLocalFrame(M.UNIT_X),this.xB=t.vectorToLocalFrame(M.UNIT_X),this.yA=e.vectorToLocalFrame(M.UNIT_Y),this.yB=t.vectorToLocalFrame(M.UNIT_Y),this.zA=e.vectorToLocalFrame(M.UNIT_Z),this.zB=t.vectorToLocalFrame(M.UNIT_Z);const l=this.rotationalEquation1=new ar(e,t,n),c=this.rotationalEquation2=new ar(e,t,n),u=this.rotationalEquation3=new ar(e,t,n);this.equations.push(l,c,u)}update(){const e=this.bodyA,t=this.bodyB;this.motorEquation;const n=this.rotationalEquation1,i=this.rotationalEquation2,r=this.rotationalEquation3;super.update(),e.vectorToWorldFrame(this.xA,n.axisA),t.vectorToWorldFrame(this.yB,n.axisB),e.vectorToWorldFrame(this.yA,i.axisA),t.vectorToWorldFrame(this.zB,i.axisB),e.vectorToWorldFrame(this.zA,r.axisA),t.vectorToWorldFrame(this.xB,r.axisB)}}const AI=new M,CI=new M;class N_ extends qi{constructor(e,t,n){n===void 0&&(n=1e6),super(e,t,-n,n),this.axisA=new M,this.axisB=new M,this.targetVelocity=0}computeB(e){this.a;const t=this.b;this.bi,this.bj;const n=this.axisA,i=this.axisB,r=this.jacobianElementA,o=this.jacobianElementB;r.rotational.copy(n),i.negate(o.rotational);const a=this.computeGW()-this.targetVelocity,l=this.computeGiMf();return-a*t-e*l}}class O_ extends lh{constructor(e,t,n){n===void 0&&(n={});const i=typeof n.maxForce!="undefined"?n.maxForce:1e6,r=n.pivotA?n.pivotA.clone():new M,o=n.pivotB?n.pivotB.clone():new M;super(e,r,t,o,i),(this.axisA=n.axisA?n.axisA.clone():new M(1,0,0)).normalize(),(this.axisB=n.axisB?n.axisB.clone():new M(1,0,0)).normalize(),this.collideConnected=!!n.collideConnected;const c=this.rotationalEquation1=new ar(e,t,n),u=this.rotationalEquation2=new ar(e,t,n),h=this.motorEquation=new N_(e,t,i);h.enabled=!1,this.equations.push(c,u,h)}enableMotor(){this.motorEquation.enabled=!0}disableMotor(){this.motorEquation.enabled=!1}setMotorSpeed(e){this.motorEquation.targetVelocity=e}setMotorMaxForce(e){this.motorEquation.maxForce=e,this.motorEquation.minForce=-e}update(){const e=this.bodyA,t=this.bodyB,n=this.motorEquation,i=this.rotationalEquation1,r=this.rotationalEquation2,o=RI,a=LI,l=this.axisA,c=this.axisB;super.update(),e.quaternion.vmult(l,o),t.quaternion.vmult(c,a),o.tangents(i.axisA,r.axisA),i.axisB.copy(a),r.axisB.copy(a),this.motorEquation.enabled&&(e.quaternion.vmult(this.axisA,n.axisA),t.quaternion.vmult(this.axisB,n.axisB))}}const RI=new M,LI=new M;class _d extends qi{constructor(e,t,n){super(e,t,-n,n),this.ri=new M,this.rj=new M,this.t=new M}computeB(e){this.a;const t=this.b;this.bi,this.bj;const n=this.ri,i=this.rj,r=PI,o=II,a=this.t;n.cross(a,r),i.cross(a,o);const l=this.jacobianElementA,c=this.jacobianElementB;a.negate(l.spatial),r.negate(l.rotational),c.spatial.copy(a),c.rotational.copy(o);const u=this.computeGW(),h=this.computeGiMf();return-u*t-e*h}}const PI=new M,II=new M;class Al{constructor(e,t,n){n=ah.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=Al.idCounter++,this.materials=[e,t],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}Al.idCounter=0;class Cl{constructor(e){e===void 0&&(e={});let t="";typeof e=="string"&&(t=e,e={}),this.name=t,this.id=Cl.idCounter++,this.friction=typeof e.friction!="undefined"?e.friction:-1,this.restitution=typeof e.restitution!="undefined"?e.restitution:-1}}Cl.idCounter=0;class FI{constructor(e,t,n){n===void 0&&(n={}),this.restLength=typeof n.restLength=="number"?n.restLength:1,this.stiffness=n.stiffness||100,this.damping=n.damping||1,this.bodyA=e,this.bodyB=t,this.localAnchorA=new M,this.localAnchorB=new M,n.localAnchorA&&this.localAnchorA.copy(n.localAnchorA),n.localAnchorB&&this.localAnchorB.copy(n.localAnchorB),n.worldAnchorA&&this.setWorldAnchorA(n.worldAnchorA),n.worldAnchorB&&this.setWorldAnchorB(n.worldAnchorB)}setWorldAnchorA(e){this.bodyA.pointToLocalFrame(e,this.localAnchorA)}setWorldAnchorB(e){this.bodyB.pointToLocalFrame(e,this.localAnchorB)}getWorldAnchorA(e){this.bodyA.pointToWorldFrame(this.localAnchorA,e)}getWorldAnchorB(e){this.bodyB.pointToWorldFrame(this.localAnchorB,e)}applyForce(){const e=this.stiffness,t=this.damping,n=this.restLength,i=this.bodyA,r=this.bodyB,o=BI,a=DI,l=zI,c=NI,u=WI,h=OI,f=UI,d=kI,p=HI,g=VI,m=GI;this.getWorldAnchorA(h),this.getWorldAnchorB(f),h.vsub(i.position,d),f.vsub(r.position,p),f.vsub(h,o);const v=o.length();a.copy(o),a.normalize(),r.velocity.vsub(i.velocity,l),r.angularVelocity.cross(p,u),l.vadd(u,l),i.angularVelocity.cross(d,u),l.vsub(u,l),a.scale(-e*(v-n)-t*l.dot(a),c),i.force.vsub(c,i.force),r.force.vadd(c,r.force),d.cross(c,g),p.cross(c,m),i.torque.vsub(g,i.torque),r.torque.vadd(m,r.torque)}}const BI=new M,DI=new M,zI=new M,NI=new M,OI=new M,UI=new M,kI=new M,HI=new M,VI=new M,GI=new M,WI=new M;class U_{constructor(e){e===void 0&&(e={}),e=ah.defaults(e,{chassisConnectionPointLocal:new M,chassisConnectionPointWorld:new M,directionLocal:new M,directionWorld:new M,axleLocal:new M,axleWorld:new M,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:10.5,forwardAcceleration:1,sideAcceleration:1,steering:0,rotation:0,deltaRotation:0,rollInfluence:.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:!0,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,slipInfo:0,skidInfo:0,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:!1,customSlidingRotationalSpeed:-.1}),this.maxSuspensionTravel=e.maxSuspensionTravel,this.customSlidingRotationalSpeed=e.customSlidingRotationalSpeed,this.useCustomSlidingRotationalSpeed=e.useCustomSlidingRotationalSpeed,this.sliding=!1,this.chassisConnectionPointLocal=e.chassisConnectionPointLocal.clone(),this.chassisConnectionPointWorld=e.chassisConnectionPointWorld.clone(),this.directionLocal=e.directionLocal.clone(),this.directionWorld=e.directionWorld.clone(),this.axleLocal=e.axleLocal.clone(),this.axleWorld=e.axleWorld.clone(),this.suspensionRestLength=e.suspensionRestLength,this.suspensionMaxLength=e.suspensionMaxLength,this.radius=e.radius,this.suspensionStiffness=e.suspensionStiffness,this.dampingCompression=e.dampingCompression,this.dampingRelaxation=e.dampingRelaxation,this.frictionSlip=e.frictionSlip,this.forwardAcceleration=e.forwardAcceleration,this.sideAcceleration=e.sideAcceleration,this.steering=0,this.rotation=0,this.deltaRotation=0,this.rollInfluence=e.rollInfluence,this.maxSuspensionForce=e.maxSuspensionForce,this.engineForce=0,this.brake=0,this.isFrontWheel=e.isFrontWheel,this.clippedInvContactDotSuspension=1,this.suspensionRelativeVelocity=0,this.suspensionForce=0,this.slipInfo=0,this.skidInfo=0,this.suspensionLength=0,this.sideImpulse=0,this.forwardImpulse=0,this.raycastResult=new Uo,this.worldTransform=new Ke,this.isInContact=!1}updateWheel(e){const t=this.raycastResult;if(this.isInContact){const n=t.hitNormalWorld.dot(t.directionWorld);t.hitPointWorld.vsub(e.position,L0),e.getVelocityAtWorldPoint(L0,R0);const i=t.hitNormalWorld.dot(R0);if(n>=-.1)this.suspensionRelativeVelocity=0,this.clippedInvContactDotSuspension=1/.1;else{const r=-1/n;this.suspensionRelativeVelocity=i*r,this.clippedInvContactDotSuspension=r}}else t.suspensionLength=this.suspensionRestLength,this.suspensionRelativeVelocity=0,t.directionWorld.scale(-1,t.hitNormalWorld),this.clippedInvContactDotSuspension=1}}const R0=new M,L0=new M;class qI{constructor(e){this.chassisBody=e.chassisBody,this.wheelInfos=[],this.sliding=!1,this.world=null,this.indexRightAxis=typeof e.indexRightAxis!="undefined"?e.indexRightAxis:2,this.indexForwardAxis=typeof e.indexForwardAxis!="undefined"?e.indexForwardAxis:0,this.indexUpAxis=typeof e.indexUpAxis!="undefined"?e.indexUpAxis:1,this.constraints=[],this.preStepCallback=()=>{},this.currentVehicleSpeedKmHour=0,this.numWheelsOnGround=0}addWheel(e){e===void 0&&(e={});const t=new U_(e),n=this.wheelInfos.length;return this.wheelInfos.push(t),n}setSteeringValue(e,t){const n=this.wheelInfos[t];n.steering=e}applyEngineForce(e,t){this.wheelInfos[t].engineForce=e}setBrake(e,t){this.wheelInfos[t].brake=e}addToWorld(e){e.addBody(this.chassisBody);const t=this;this.preStepCallback=()=>{t.updateVehicle(e.dt)},e.addEventListener("preStep",this.preStepCallback),this.world=e}getVehicleAxisWorld(e,t){t.set(e===0?1:0,e===1?1:0,e===2?1:0),this.chassisBody.vectorToWorldFrame(t,t)}updateVehicle(e){const t=this.wheelInfos,n=t.length,i=this.chassisBody;for(let h=0;h<n;h++)this.updateWheelTransform(h);this.currentVehicleSpeedKmHour=3.6*i.velocity.length();const r=new M;this.getVehicleAxisWorld(this.indexForwardAxis,r),r.dot(i.velocity)<0&&(this.currentVehicleSpeedKmHour*=-1);for(let h=0;h<n;h++)this.castRay(t[h]);this.updateSuspension(e);const o=new M,a=new M;for(let h=0;h<n;h++){const f=t[h];let d=f.suspensionForce;d>f.maxSuspensionForce&&(d=f.maxSuspensionForce),f.raycastResult.hitNormalWorld.scale(d*e,o),f.raycastResult.hitPointWorld.vsub(i.position,a),i.applyImpulse(o,a)}this.updateFriction(e);const l=new M,c=new M,u=new M;for(let h=0;h<n;h++){const f=t[h];i.getVelocityAtWorldPoint(f.chassisConnectionPointWorld,u);let d=1;switch(this.indexUpAxis){case 1:d=-1;break}if(f.isInContact){this.getVehicleAxisWorld(this.indexForwardAxis,c);const p=c.dot(f.raycastResult.hitNormalWorld);f.raycastResult.hitNormalWorld.scale(p,l),c.vsub(l,c);const g=c.dot(u);f.deltaRotation=d*g*e/f.radius}(f.sliding||!f.isInContact)&&f.engineForce!==0&&f.useCustomSlidingRotationalSpeed&&(f.deltaRotation=(f.engineForce>0?1:-1)*f.customSlidingRotationalSpeed*e),Math.abs(f.brake)>Math.abs(f.engineForce)&&(f.deltaRotation=0),f.rotation+=f.deltaRotation,f.deltaRotation*=.99}}updateSuspension(e){const n=this.chassisBody.mass,i=this.wheelInfos,r=i.length;for(let o=0;o<r;o++){const a=i[o];if(a.isInContact){let l;const c=a.suspensionRestLength,u=a.suspensionLength,h=c-u;l=a.suspensionStiffness*h*a.clippedInvContactDotSuspension;const f=a.suspensionRelativeVelocity;let d;f<0?d=a.dampingCompression:d=a.dampingRelaxation,l-=d*f,a.suspensionForce=l*n,a.suspensionForce<0&&(a.suspensionForce=0)}else a.suspensionForce=0}}removeFromWorld(e){this.constraints,e.removeBody(this.chassisBody),e.removeEventListener("preStep",this.preStepCallback),this.world=null}castRay(e){const t=YI,n=ZI;this.updateWheelTransformWorld(e);const i=this.chassisBody;let r=-1;const o=e.suspensionRestLength+e.radius;e.directionWorld.scale(o,t);const a=e.chassisConnectionPointWorld;a.vadd(t,n);const l=e.raycastResult;l.reset();const c=i.collisionResponse;i.collisionResponse=!1,this.world.rayTest(a,n,l),i.collisionResponse=c;const u=l.body;if(e.raycastResult.groundObject=0,u){r=l.distance,e.raycastResult.hitNormalWorld=l.hitNormalWorld,e.isInContact=!0;const h=l.distance;e.suspensionLength=h-e.radius;const f=e.suspensionRestLength-e.maxSuspensionTravel,d=e.suspensionRestLength+e.maxSuspensionTravel;e.suspensionLength<f&&(e.suspensionLength=f),e.suspensionLength>d&&(e.suspensionLength=d,e.raycastResult.reset());const p=e.raycastResult.hitNormalWorld.dot(e.directionWorld),g=new M;i.getVelocityAtWorldPoint(e.raycastResult.hitPointWorld,g);const m=e.raycastResult.hitNormalWorld.dot(g);if(p>=-.1)e.suspensionRelativeVelocity=0,e.clippedInvContactDotSuspension=1/.1;else{const v=-1/p;e.suspensionRelativeVelocity=m*v,e.clippedInvContactDotSuspension=v}}else e.suspensionLength=e.suspensionRestLength+0*e.maxSuspensionTravel,e.suspensionRelativeVelocity=0,e.directionWorld.scale(-1,e.raycastResult.hitNormalWorld),e.clippedInvContactDotSuspension=1;return r}updateWheelTransformWorld(e){e.isInContact=!1;const t=this.chassisBody;t.pointToWorldFrame(e.chassisConnectionPointLocal,e.chassisConnectionPointWorld),t.vectorToWorldFrame(e.directionLocal,e.directionWorld),t.vectorToWorldFrame(e.axleLocal,e.axleWorld)}updateWheelTransform(e){const t=jI,n=XI,i=$I,r=this.wheelInfos[e];this.updateWheelTransformWorld(r),r.directionLocal.scale(-1,t),n.copy(r.axleLocal),t.cross(n,i),i.normalize(),n.normalize();const o=r.steering,a=new pt;a.setFromAxisAngle(t,o);const l=new pt;l.setFromAxisAngle(n,r.rotation);const c=r.worldTransform.quaternion;this.chassisBody.quaternion.mult(a,c),c.mult(l,c),c.normalize();const u=r.worldTransform.position;u.copy(r.directionWorld),u.scale(r.suspensionLength,u),u.vadd(r.chassisConnectionPointWorld,u)}getWheelTransformWorld(e){return this.wheelInfos[e].worldTransform}updateFriction(e){const t=JI,n=this.wheelInfos,i=n.length,r=this.chassisBody,o=eF,a=QI;this.numWheelsOnGround=0;for(let u=0;u<i;u++){const h=n[u];h.raycastResult.body&&this.numWheelsOnGround++,h.sideImpulse=0,h.forwardImpulse=0,o[u]||(o[u]=new M),a[u]||(a[u]=new M)}for(let u=0;u<i;u++){const h=n[u],f=h.raycastResult.body;if(f){const d=a[u];this.getWheelTransformWorld(u).vectorToWorldFrame(KI[this.indexRightAxis],d);const g=h.raycastResult.hitNormalWorld,m=d.dot(g);g.scale(m,t),d.vsub(t,d),d.normalize(),g.cross(d,o[u]),o[u].normalize(),h.sideImpulse=dF(r,h.raycastResult.hitPointWorld,f,h.raycastResult.hitPointWorld,d),h.sideImpulse*=tF}}const l=1,c=.5;this.sliding=!1;for(let u=0;u<i;u++){const h=n[u],f=h.raycastResult.body;let d=0;if(h.slipInfo=1,f){const g=h.brake?h.brake:0;d=rF(r,f,h.raycastResult.hitPointWorld,o[u],g),d+=h.engineForce*e;const m=g/d;h.slipInfo*=m}if(h.forwardImpulse=0,h.skidInfo=1,f){h.skidInfo=1;const p=h.suspensionForce*e*h.frictionSlip,m=p*p;h.forwardImpulse=d;const v=h.forwardImpulse*c/h.forwardAcceleration,y=h.sideImpulse*l/h.sideAcceleration,x=v*v+y*y;if(h.sliding=!1,x>m){this.sliding=!0,h.sliding=!0;const _=p/Math.sqrt(x);h.skidInfo*=_}}}if(this.sliding)for(let u=0;u<i;u++){const h=n[u];h.sideImpulse!==0&&h.skidInfo<1&&(h.forwardImpulse*=h.skidInfo,h.sideImpulse*=h.skidInfo)}for(let u=0;u<i;u++){const h=n[u],f=new M;if(h.raycastResult.hitPointWorld.vsub(r.position,f),h.forwardImpulse!==0){const d=new M;o[u].scale(h.forwardImpulse,d),r.applyImpulse(d,f)}if(h.sideImpulse!==0){const d=h.raycastResult.body,p=new M;h.raycastResult.hitPointWorld.vsub(d.position,p);const g=new M;a[u].scale(h.sideImpulse,g),r.vectorToLocalFrame(f,f),f["xyz"[this.indexUpAxis]]*=h.rollInfluence,r.vectorToWorldFrame(f,f),r.applyImpulse(g,f),g.scale(-1,g),d.applyImpulse(g,p)}}}}new M;new M;new M;const jI=new M,XI=new M,$I=new M;new Mt;new M;const YI=new M,ZI=new M,KI=[new M(1,0,0),new M(0,1,0),new M(0,0,1)],JI=new M,QI=[],eF=[],tF=1,nF=new M,iF=new M,sF=new M;function rF(s,e,t,n,i){let r=0;const o=t,a=nF,l=iF,c=sF;s.getVelocityAtWorldPoint(o,a),e.getVelocityAtWorldPoint(o,l),a.vsub(l,c);const u=n.dot(c),h=P0(s,t,n),f=P0(e,t,n),p=1/(h+f);return r=-u*p,i<r&&(r=i),r<-i&&(r=-i),r}const oF=new M,aF=new M,lF=new M,cF=new M;function P0(s,e,t){const n=oF,i=aF,r=lF,o=cF;return e.vsub(s.position,n),n.cross(t,i),s.invInertiaWorld.vmult(i,o),o.cross(n,r),s.invMass+t.dot(r)}const uF=new M,hF=new M,fF=new M;function dF(s,e,t,n,i){if(i.lengthSquared()>1.1)return 0;const o=uF,a=hF,l=fF;s.getVelocityAtWorldPoint(e,o),t.getVelocityAtWorldPoint(n,a),o.vsub(a,l);const c=i.dot(l),u=.2,h=1/(s.invMass+t.invMass);return-u*c*h}class k_ extends Te{constructor(e){if(super({type:Te.types.SPHERE}),this.radius=e!==void 0?e:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(e,t){t===void 0&&(t=new M);const n=2*e*this.radius*this.radius/5;return t.x=n,t.y=n,t.z=n,t}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(e,t,n,i){const r=this.radius,o=["x","y","z"];for(let a=0;a<o.length;a++){const l=o[a];n[l]=e[l]-r,i[l]=e[l]+r}}}class pF{constructor(e){e===void 0&&(e={}),this.wheelBodies=[],this.coordinateSystem=typeof e.coordinateSystem!="undefined"?e.coordinateSystem.clone():new M(1,2,3),e.chassisBody?this.chassisBody=e.chassisBody:this.chassisBody=new Re({mass:1,shape:new Tl(new M(5,.5,2))}),this.constraints=[],this.wheelAxes=[],this.wheelForces=[]}addWheel(e){e===void 0&&(e={});let t;e.body?t=e.body:t=new Re({mass:1,shape:new k_(1.2)}),this.wheelBodies.push(t),this.wheelForces.push(0);const n=typeof e.position!="undefined"?e.position.clone():new M,i=new M;this.chassisBody.pointToWorldFrame(n,i),t.position.set(i.x,i.y,i.z);const r=typeof e.axis!="undefined"?e.axis.clone():new M(0,0,1);this.wheelAxes.push(r);const o=new O_(this.chassisBody,t,{pivotA:n,axisA:r,pivotB:M.ZERO,axisB:r,collideConnected:!1});return this.constraints.push(o),this.wheelBodies.length-1}setSteeringValue(e,t){const n=this.wheelAxes[t],i=Math.cos(e),r=Math.sin(e),o=n.x,a=n.z;this.constraints[t].axisA.set(-i*o+r*a,0,r*o+i*a)}setMotorSpeed(e,t){const n=this.constraints[t];n.enableMotor(),n.motorTargetVelocity=e}disableMotor(e){this.constraints[e].disableMotor()}setWheelForce(e,t){this.wheelForces[t]=e}applyWheelForce(e,t){const n=this.wheelAxes[t],i=this.wheelBodies[t],r=i.torque;n.scale(e,Ic),i.vectorToWorldFrame(Ic,Ic),r.vadd(Ic,r)}addToWorld(e){const t=this.constraints,n=this.wheelBodies.concat([this.chassisBody]);for(let i=0;i<n.length;i++)e.addBody(n[i]);for(let i=0;i<t.length;i++)e.addConstraint(t[i]);e.addEventListener("preStep",this._update.bind(this))}_update(){const e=this.wheelForces;for(let t=0;t<e.length;t++)this.applyWheelForce(e[t],t)}removeFromWorld(e){const t=this.constraints,n=this.wheelBodies.concat([this.chassisBody]);for(let i=0;i<n.length;i++)e.removeBody(n[i]);for(let i=0;i<t.length;i++)e.removeConstraint(t[i])}getWheelSpeed(e){const t=this.wheelAxes[e],i=this.wheelBodies[e].angularVelocity;return this.chassisBody.vectorToWorldFrame(t,I0),i.dot(I0)}}const Ic=new M,I0=new M;class mF{constructor(){this.particles=[],this.density=1,this.smoothingRadius=1,this.speedOfSound=1,this.viscosity=.01,this.eps=1e-6,this.pressures=[],this.densities=[],this.neighbors=[]}add(e){this.particles.push(e),this.neighbors.length<this.particles.length&&this.neighbors.push([])}remove(e){const t=this.particles.indexOf(e);t!==-1&&(this.particles.splice(t,1),this.neighbors.length>this.particles.length&&this.neighbors.pop())}getNeighbors(e,t){const n=this.particles.length,i=e.id,r=this.smoothingRadius*this.smoothingRadius,o=gF;for(let a=0;a!==n;a++){const l=this.particles[a];l.position.vsub(e.position,o),i!==l.id&&o.lengthSquared()<r&&t.push(l)}}update(){const e=this.particles.length,t=yF,n=this.speedOfSound,i=this.eps;for(let u=0;u!==e;u++){const h=this.particles[u],f=this.neighbors[u];f.length=0,this.getNeighbors(h,f),f.push(this.particles[u]);const d=f.length;let p=0;for(let g=0;g!==d;g++){h.position.vsub(f[g].position,t);const m=t.length(),v=this.w(m);p+=f[g].mass*v}this.densities[u]=p,this.pressures[u]=n*n*(this.densities[u]-this.density)}const r=vF,o=xF,a=_F,l=wF,c=bF;for(let u=0;u!==e;u++){const h=this.particles[u];r.set(0,0,0),o.set(0,0,0);let f,d;const p=this.neighbors[u],g=p.length;for(let m=0;m!==g;m++){const v=p[m];h.position.vsub(v.position,l);const y=l.length();f=-v.mass*(this.pressures[u]/(this.densities[u]*this.densities[u]+i)+this.pressures[m]/(this.densities[m]*this.densities[m]+i)),this.gradw(l,a),a.scale(f,a),r.vadd(a,r),v.velocity.vsub(h.velocity,c),c.scale(1/(1e-4+this.densities[u]*this.densities[m])*this.viscosity*v.mass,c),d=this.nablaw(y),c.scale(d,c),o.vadd(c,o)}o.scale(h.mass,o),r.scale(h.mass,r),h.force.vadd(o,h.force),h.force.vadd(r,h.force)}}w(e){const t=this.smoothingRadius;return 315/(64*Math.PI*t**9)*(t*t-e*e)**3}gradw(e,t){const n=e.length(),i=this.smoothingRadius;e.scale(945/(32*Math.PI*i**9)*(i*i-n*n)**2,t)}nablaw(e){const t=this.smoothingRadius;return 945/(32*Math.PI*t**9)*(t*t-e*e)*(7*e*e-3*t*t)}}const gF=new M,yF=new M,vF=new M,xF=new M,_F=new M,wF=new M,bF=new M;class MF extends ci{constructor(e,t,n,i){if(e===void 0&&(e=1),t===void 0&&(t=1),n===void 0&&(n=1),i===void 0&&(i=8),e<0)throw new Error("The cylinder radiusTop cannot be negative.");if(t<0)throw new Error("The cylinder radiusBottom cannot be negative.");const r=i,o=[],a=[],l=[],c=[],u=[],h=Math.cos,f=Math.sin;o.push(new M(-t*f(0),-n*.5,t*h(0))),c.push(0),o.push(new M(-e*f(0),n*.5,e*h(0))),u.push(1);for(let p=0;p<r;p++){const g=2*Math.PI/r*(p+1),m=2*Math.PI/r*(p+.5);p<r-1?(o.push(new M(-t*f(g),-n*.5,t*h(g))),c.push(2*p+2),o.push(new M(-e*f(g),n*.5,e*h(g))),u.push(2*p+3),l.push([2*p,2*p+1,2*p+3,2*p+2])):l.push([2*p,2*p+1,1,0]),(r%2===1||p<r/2)&&a.push(new M(-f(m),0,h(m)))}l.push(c),a.push(new M(0,1,0));const d=[];for(let p=0;p<u.length;p++)d.push(u[u.length-p-1]);l.push(d),super({vertices:o,faces:l,axes:a}),this.type=Te.types.CYLINDER,this.radiusTop=e,this.radiusBottom=t,this.height=n,this.numSegments=i}}class SF extends Te{constructor(){super({type:Te.types.PARTICLE})}calculateLocalInertia(e,t){return t===void 0&&(t=new M),t.set(0,0,0),t}volume(){return 0}updateBoundingSphereRadius(){this.boundingSphereRadius=0}calculateWorldAABB(e,t,n,i){n.copy(e),i.copy(e)}}class H_ extends Te{constructor(){super({type:Te.types.PLANE}),this.worldNormal=new M,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(e){const t=this.worldNormal;t.set(0,0,1),e.vmult(t,t),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(e,t){return t===void 0&&(t=new M),t}volume(){return Number.MAX_VALUE}calculateWorldAABB(e,t,n,i){Si.set(0,0,1),t.vmult(Si,Si);const r=Number.MAX_VALUE;n.set(-r,-r,-r),i.set(r,r,r),Si.x===1?i.x=e.x:Si.x===-1&&(n.x=e.x),Si.y===1?i.y=e.y:Si.y===-1&&(n.y=e.y),Si.z===1?i.z=e.z:Si.z===-1&&(n.z=e.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const Si=new M;class EF extends Te{constructor(e,t){t===void 0&&(t={}),t=ah.defaults(t,{maxValue:null,minValue:null,elementSize:1}),super({type:Te.types.HEIGHTFIELD}),this.data=e,this.maxValue=t.maxValue,this.minValue=t.minValue,this.elementSize=t.elementSize,t.minValue===null&&this.updateMinValue(),t.maxValue===null&&this.updateMaxValue(),this.cacheEnabled=!0,this.pillarConvex=new ci,this.pillarOffset=new M,this.updateBoundingSphereRadius(),this._cachedPillars={}}update(){this._cachedPillars={}}updateMinValue(){const e=this.data;let t=e[0][0];for(let n=0;n!==e.length;n++)for(let i=0;i!==e[n].length;i++){const r=e[n][i];r<t&&(t=r)}this.minValue=t}updateMaxValue(){const e=this.data;let t=e[0][0];for(let n=0;n!==e.length;n++)for(let i=0;i!==e[n].length;i++){const r=e[n][i];r>t&&(t=r)}this.maxValue=t}setHeightValueAtIndex(e,t,n){const i=this.data;i[e][t]=n,this.clearCachedConvexTrianglePillar(e,t,!1),e>0&&(this.clearCachedConvexTrianglePillar(e-1,t,!0),this.clearCachedConvexTrianglePillar(e-1,t,!1)),t>0&&(this.clearCachedConvexTrianglePillar(e,t-1,!0),this.clearCachedConvexTrianglePillar(e,t-1,!1)),t>0&&e>0&&this.clearCachedConvexTrianglePillar(e-1,t-1,!0)}getRectMinMax(e,t,n,i,r){r===void 0&&(r=[]);const o=this.data;let a=this.minValue;for(let l=e;l<=n;l++)for(let c=t;c<=i;c++){const u=o[l][c];u>a&&(a=u)}r[0]=this.minValue,r[1]=a}getIndexOfPosition(e,t,n,i){const r=this.elementSize,o=this.data;let a=Math.floor(e/r),l=Math.floor(t/r);return n[0]=a,n[1]=l,i&&(a<0&&(a=0),l<0&&(l=0),a>=o.length-1&&(a=o.length-1),l>=o[0].length-1&&(l=o[0].length-1)),!(a<0||l<0||a>=o.length-1||l>=o[0].length-1)}getTriangleAt(e,t,n,i,r,o){const a=F0;this.getIndexOfPosition(e,t,a,n);let l=a[0],c=a[1];const u=this.data;n&&(l=Math.min(u.length-2,Math.max(0,l)),c=Math.min(u[0].length-2,Math.max(0,c)));const h=this.elementSize,f=(e/h-l)**2+(t/h-c)**2,d=(e/h-(l+1))**2+(t/h-(c+1))**2,p=f>d;return this.getTriangle(l,c,p,i,r,o),p}getNormalAt(e,t,n,i){const r=RF,o=LF,a=PF,l=IF,c=FF;this.getTriangleAt(e,t,n,r,o,a),o.vsub(r,l),a.vsub(r,c),l.cross(c,i),i.normalize()}getAabbAtIndex(e,t,n){let{lowerBound:i,upperBound:r}=n;const o=this.data,a=this.elementSize;i.set(e*a,t*a,o[e][t]),r.set((e+1)*a,(t+1)*a,o[e+1][t+1])}getHeightAt(e,t,n){const i=this.data,r=TF,o=AF,a=CF,l=F0;this.getIndexOfPosition(e,t,l,n);let c=l[0],u=l[1];n&&(c=Math.min(i.length-2,Math.max(0,c)),u=Math.min(i[0].length-2,Math.max(0,u)));const h=this.getTriangleAt(e,t,n,r,o,a);BF(e,t,r.x,r.y,o.x,o.y,a.x,a.y,B0);const f=B0;return h?i[c+1][u+1]*f.x+i[c][u+1]*f.y+i[c+1][u]*f.z:i[c][u]*f.x+i[c+1][u]*f.y+i[c][u+1]*f.z}getCacheConvexTrianglePillarKey(e,t,n){return`${e}_${t}_${n?1:0}`}getCachedConvexTrianglePillar(e,t,n){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(e,t,n)]}setCachedConvexTrianglePillar(e,t,n,i,r){this._cachedPillars[this.getCacheConvexTrianglePillarKey(e,t,n)]={convex:i,offset:r}}clearCachedConvexTrianglePillar(e,t,n){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(e,t,n)]}getTriangle(e,t,n,i,r,o){const a=this.data,l=this.elementSize;n?(i.set((e+1)*l,(t+1)*l,a[e+1][t+1]),r.set(e*l,(t+1)*l,a[e][t+1]),o.set((e+1)*l,t*l,a[e+1][t])):(i.set(e*l,t*l,a[e][t]),r.set((e+1)*l,t*l,a[e+1][t]),o.set(e*l,(t+1)*l,a[e][t+1]))}getConvexTrianglePillar(e,t,n){let i=this.pillarConvex,r=this.pillarOffset;if(this.cacheEnabled){const h=this.getCachedConvexTrianglePillar(e,t,n);if(h){this.pillarConvex=h.convex,this.pillarOffset=h.offset;return}i=new ci,r=new M,this.pillarConvex=i,this.pillarOffset=r}const o=this.data,a=this.elementSize,l=i.faces;i.vertices.length=6;for(let h=0;h<6;h++)i.vertices[h]||(i.vertices[h]=new M);l.length=5;for(let h=0;h<5;h++)l[h]||(l[h]=[]);const c=i.vertices,u=(Math.min(o[e][t],o[e+1][t],o[e][t+1],o[e+1][t+1])-this.minValue)/2+this.minValue;n?(r.set((e+.75)*a,(t+.75)*a,u),c[0].set(.25*a,.25*a,o[e+1][t+1]-u),c[1].set(-.75*a,.25*a,o[e][t+1]-u),c[2].set(.25*a,-.75*a,o[e+1][t]-u),c[3].set(.25*a,.25*a,-Math.abs(u)-1),c[4].set(-.75*a,.25*a,-Math.abs(u)-1),c[5].set(.25*a,-.75*a,-Math.abs(u)-1),l[0][0]=0,l[0][1]=1,l[0][2]=2,l[1][0]=5,l[1][1]=4,l[1][2]=3,l[2][0]=2,l[2][1]=5,l[2][2]=3,l[2][3]=0,l[3][0]=3,l[3][1]=4,l[3][2]=1,l[3][3]=0,l[4][0]=1,l[4][1]=4,l[4][2]=5,l[4][3]=2):(r.set((e+.25)*a,(t+.25)*a,u),c[0].set(-.25*a,-.25*a,o[e][t]-u),c[1].set(.75*a,-.25*a,o[e+1][t]-u),c[2].set(-.25*a,.75*a,o[e][t+1]-u),c[3].set(-.25*a,-.25*a,-Math.abs(u)-1),c[4].set(.75*a,-.25*a,-Math.abs(u)-1),c[5].set(-.25*a,.75*a,-Math.abs(u)-1),l[0][0]=0,l[0][1]=1,l[0][2]=2,l[1][0]=5,l[1][1]=4,l[1][2]=3,l[2][0]=0,l[2][1]=2,l[2][2]=5,l[2][3]=3,l[3][0]=1,l[3][1]=0,l[3][2]=3,l[3][3]=4,l[4][0]=4,l[4][1]=5,l[4][2]=2,l[4][3]=1),i.computeNormals(),i.computeEdges(),i.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(e,t,n,i,r)}calculateLocalInertia(e,t){return t===void 0&&(t=new M),t.set(0,0,0),t}volume(){return Number.MAX_VALUE}calculateWorldAABB(e,t,n,i){n.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),i.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)}updateBoundingSphereRadius(){const e=this.data,t=this.elementSize;this.boundingSphereRadius=new M(e.length*t,e[0].length*t,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).length()}setHeightsFromImage(e,t){const{x:n,z:i,y:r}=t,o=document.createElement("canvas");o.width=e.width,o.height=e.height;const a=o.getContext("2d");a.drawImage(e,0,0);const l=a.getImageData(0,0,e.width,e.height),c=this.data;c.length=0,this.elementSize=Math.abs(n)/l.width;for(let u=0;u<l.height;u++){const h=[];for(let f=0;f<l.width;f++){const d=l.data[(u*l.height+f)*4],p=l.data[(u*l.height+f)*4+1],g=l.data[(u*l.height+f)*4+2],m=(d+p+g)/4/255*i;n<0?h.push(m):h.unshift(m)}r<0?c.unshift(h):c.push(h)}this.updateMaxValue(),this.updateMinValue(),this.update()}}const F0=[],B0=new M,TF=new M,AF=new M,CF=new M,RF=new M,LF=new M,PF=new M,IF=new M,FF=new M;function BF(s,e,t,n,i,r,o,a,l){l.x=((r-a)*(s-o)+(o-i)*(e-a))/((r-a)*(t-o)+(o-i)*(n-a)),l.y=((a-n)*(s-o)+(t-o)*(e-a))/((r-a)*(t-o)+(o-i)*(n-a)),l.z=1-l.x-l.y}class ni{constructor(e){e===void 0&&(e={}),this.root=e.root||null,this.aabb=e.aabb?e.aabb.clone():new ft,this.data=[],this.children=[]}reset(){this.children.length=this.data.length=0}insert(e,t,n){n===void 0&&(n=0);const i=this.data;if(!this.aabb.contains(e))return!1;const r=this.children,o=this.maxDepth||this.root.maxDepth;if(n<o){let a=!1;r.length||(this.subdivide(),a=!0);for(let l=0;l!==8;l++)if(r[l].insert(e,t,n+1))return!0;a&&(r.length=0)}return i.push(t),!0}subdivide(){const e=this.aabb,t=e.lowerBound,n=e.upperBound,i=this.children;i.push(new ni({aabb:new ft({lowerBound:new M(0,0,0)})}),new ni({aabb:new ft({lowerBound:new M(1,0,0)})}),new ni({aabb:new ft({lowerBound:new M(1,1,0)})}),new ni({aabb:new ft({lowerBound:new M(1,1,1)})}),new ni({aabb:new ft({lowerBound:new M(0,1,1)})}),new ni({aabb:new ft({lowerBound:new M(0,0,1)})}),new ni({aabb:new ft({lowerBound:new M(1,0,1)})}),new ni({aabb:new ft({lowerBound:new M(0,1,0)})})),n.vsub(t,ks),ks.scale(.5,ks);const r=this.root||this;for(let o=0;o!==8;o++){const a=i[o];a.root=r;const l=a.aabb.lowerBound;l.x*=ks.x,l.y*=ks.y,l.z*=ks.z,l.vadd(t,l),l.vadd(ks,a.aabb.upperBound)}}aabbQuery(e,t){this.data,this.children;const n=[this];for(;n.length;){const i=n.pop();i.aabb.overlaps(e)&&Array.prototype.push.apply(t,i.data),Array.prototype.push.apply(n,i.children)}return t}rayQuery(e,t,n){return e.getAABB(Fc),Fc.toLocalFrame(t,Fc),this.aabbQuery(Fc,n),n}removeEmptyNodes(){for(let e=this.children.length-1;e>=0;e--)this.children[e].removeEmptyNodes(),!this.children[e].children.length&&!this.children[e].data.length&&this.children.splice(e,1)}}class DF extends ni{constructor(e,t){t===void 0&&(t={}),super({root:null,aabb:e}),this.maxDepth=typeof t.maxDepth!="undefined"?t.maxDepth:8}}const ks=new M,Fc=new ft;class gu extends Te{constructor(e,t){super({type:Te.types.TRIMESH}),this.vertices=new Float32Array(e),this.indices=new Int16Array(t),this.normals=new Float32Array(t.length),this.aabb=new ft,this.edges=null,this.scale=new M(1,1,1),this.tree=new DF,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}updateTree(){const e=this.tree;e.reset(),e.aabb.copy(this.aabb);const t=this.scale;e.aabb.lowerBound.x*=1/t.x,e.aabb.lowerBound.y*=1/t.y,e.aabb.lowerBound.z*=1/t.z,e.aabb.upperBound.x*=1/t.x,e.aabb.upperBound.y*=1/t.y,e.aabb.upperBound.z*=1/t.z;const n=new ft,i=new M,r=new M,o=new M,a=[i,r,o];for(let l=0;l<this.indices.length/3;l++){const c=l*3;this._getUnscaledVertex(this.indices[c],i),this._getUnscaledVertex(this.indices[c+1],r),this._getUnscaledVertex(this.indices[c+2],o),n.setFromPoints(a),e.insert(n,l)}e.removeEmptyNodes()}getTrianglesInAABB(e,t){Bc.copy(e);const n=this.scale,i=n.x,r=n.y,o=n.z,a=Bc.lowerBound,l=Bc.upperBound;return a.x/=i,a.y/=r,a.z/=o,l.x/=i,l.y/=r,l.z/=o,this.tree.aabbQuery(Bc,t)}setScale(e){const t=this.scale.x===this.scale.y&&this.scale.y===this.scale.z,n=e.x===e.y&&e.y===e.z;t&&n||this.updateNormals(),this.scale.copy(e),this.updateAABB(),this.updateBoundingSphereRadius()}updateNormals(){const e=zF,t=this.normals;for(let n=0;n<this.indices.length/3;n++){const i=n*3,r=this.indices[i],o=this.indices[i+1],a=this.indices[i+2];this.getVertex(r,N0),this.getVertex(o,O0),this.getVertex(a,U0),gu.computeNormal(O0,N0,U0,e),t[i]=e.x,t[i+1]=e.y,t[i+2]=e.z}}updateEdges(){const e={},t=(i,r)=>{const o=i<r?`${i}_${r}`:`${r}_${i}`;e[o]=!0};for(let i=0;i<this.indices.length/3;i++){const r=i*3,o=this.indices[r],a=this.indices[r+1],l=this.indices[r+2];t(o,a),t(a,l),t(l,o)}const n=Object.keys(e);this.edges=new Int16Array(n.length*2);for(let i=0;i<n.length;i++){const r=n[i].split("_");this.edges[2*i]=parseInt(r[0],10),this.edges[2*i+1]=parseInt(r[1],10)}}getEdgeVertex(e,t,n){const i=this.edges[e*2+(t?1:0)];this.getVertex(i,n)}getEdgeVector(e,t){const n=NF,i=OF;this.getEdgeVertex(e,0,n),this.getEdgeVertex(e,1,i),i.vsub(n,t)}static computeNormal(e,t,n,i){t.vsub(e,z0),n.vsub(t,D0),D0.cross(z0,i),i.isZero()||i.normalize()}getVertex(e,t){const n=this.scale;return this._getUnscaledVertex(e,t),t.x*=n.x,t.y*=n.y,t.z*=n.z,t}_getUnscaledVertex(e,t){const n=e*3,i=this.vertices;return t.set(i[n],i[n+1],i[n+2])}getWorldVertex(e,t,n,i){return this.getVertex(e,i),Ke.pointToWorldFrame(t,n,i,i),i}getTriangleVertices(e,t,n,i){const r=e*3;this.getVertex(this.indices[r],t),this.getVertex(this.indices[r+1],n),this.getVertex(this.indices[r+2],i)}getNormal(e,t){const n=e*3;return t.set(this.normals[n],this.normals[n+1],this.normals[n+2])}calculateLocalInertia(e,t){this.computeLocalAABB(Hs);const n=Hs.upperBound.x-Hs.lowerBound.x,i=Hs.upperBound.y-Hs.lowerBound.y,r=Hs.upperBound.z-Hs.lowerBound.z;return t.set(1/12*e*(2*i*2*i+2*r*2*r),1/12*e*(2*n*2*n+2*r*2*r),1/12*e*(2*i*2*i+2*n*2*n))}computeLocalAABB(e){const t=e.lowerBound,n=e.upperBound,i=this.vertices.length;this.vertices;const r=UF;this.getVertex(0,r),t.copy(r),n.copy(r);for(let o=0;o!==i;o++)this.getVertex(o,r),r.x<t.x?t.x=r.x:r.x>n.x&&(n.x=r.x),r.y<t.y?t.y=r.y:r.y>n.y&&(n.y=r.y),r.z<t.z?t.z=r.z:r.z>n.z&&(n.z=r.z)}updateAABB(){this.computeLocalAABB(this.aabb)}updateBoundingSphereRadius(){let e=0;const t=this.vertices,n=new M;for(let i=0,r=t.length/3;i!==r;i++){this.getVertex(i,n);const o=n.lengthSquared();o>e&&(e=o)}this.boundingSphereRadius=Math.sqrt(e)}calculateWorldAABB(e,t,n,i){const r=kF,o=HF;r.position=e,r.quaternion=t,this.aabb.toWorldFrame(r,o),n.copy(o.lowerBound),i.copy(o.upperBound)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}static createTorus(e,t,n,i,r){e===void 0&&(e=1),t===void 0&&(t=.5),n===void 0&&(n=8),i===void 0&&(i=6),r===void 0&&(r=Math.PI*2);const o=[],a=[];for(let l=0;l<=n;l++)for(let c=0;c<=i;c++){const u=c/i*r,h=l/n*Math.PI*2,f=(e+t*Math.cos(h))*Math.cos(u),d=(e+t*Math.cos(h))*Math.sin(u),p=t*Math.sin(h);o.push(f,d,p)}for(let l=1;l<=n;l++)for(let c=1;c<=i;c++){const u=(i+1)*l+c-1,h=(i+1)*(l-1)+c-1,f=(i+1)*(l-1)+c,d=(i+1)*l+c;a.push(u,h,d),a.push(h,f,d)}return new gu(o,a)}}const zF=new M,Bc=new ft,NF=new M,OF=new M,D0=new M,z0=new M,N0=new M,O0=new M,U0=new M,Hs=new ft,UF=new M,kF=new Ke,HF=new ft;class Gp{constructor(){this.equations=[]}solve(e,t){return 0}addEquation(e){e.enabled&&!e.bi.isTrigger&&!e.bj.isTrigger&&this.equations.push(e)}removeEquation(e){const t=this.equations,n=t.indexOf(e);n!==-1&&t.splice(n,1)}removeAllEquations(){this.equations.length=0}}class V_ extends Gp{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(e,t){let n=0;const i=this.iterations,r=this.tolerance*this.tolerance,o=this.equations,a=o.length,l=t.bodies,c=l.length,u=e;let h,f,d,p,g,m;if(a!==0)for(let _=0;_!==c;_++)l[_].updateSolveMassProperties();const v=GF,y=WF,x=VF;v.length=a,y.length=a,x.length=a;for(let _=0;_!==a;_++){const b=o[_];x[_]=0,y[_]=b.computeB(u),v[_]=1/b.computeC()}if(a!==0){for(let S=0;S!==c;S++){const E=l[S],w=E.vlambda,A=E.wlambda;w.set(0,0,0),A.set(0,0,0)}for(n=0;n!==i;n++){p=0;for(let S=0;S!==a;S++){const E=o[S];h=y[S],f=v[S],m=x[S],g=E.computeGWlambda(),d=f*(h-g-E.eps*m),m+d<E.minForce?d=E.minForce-m:m+d>E.maxForce&&(d=E.maxForce-m),x[S]+=d,p+=d>0?d:-d,E.addToWlambda(d)}if(p*p<r)break}for(let S=0;S!==c;S++){const E=l[S],w=E.velocity,A=E.angularVelocity;E.vlambda.vmul(E.linearFactor,E.vlambda),w.vadd(E.vlambda,w),E.wlambda.vmul(E.angularFactor,E.wlambda),A.vadd(E.wlambda,A)}let _=o.length;const b=1/u;for(;_--;)o[_].multiplier=x[_]*b}return n}}const VF=[],GF=[],WF=[];class qF extends Gp{constructor(e){for(super(),this.iterations=10,this.tolerance=1e-7,this.subsolver=e,this.nodes=[],this.nodePool=[];this.nodePool.length<128;)this.nodePool.push(this.createNode())}createNode(){return{body:null,children:[],eqs:[],visited:!1}}solve(e,t){const n=jF,i=this.nodePool,r=t.bodies,o=this.equations,a=o.length,l=r.length,c=this.subsolver;for(;i.length<l;)i.push(this.createNode());n.length=l;for(let p=0;p<l;p++)n[p]=i[p];for(let p=0;p!==l;p++){const g=n[p];g.body=r[p],g.children.length=0,g.eqs.length=0,g.visited=!1}for(let p=0;p!==a;p++){const g=o[p],m=r.indexOf(g.bi),v=r.indexOf(g.bj),y=n[m],x=n[v];y.children.push(x),y.eqs.push(g),x.children.push(y),x.eqs.push(g)}let u,h=0,f=XF;c.tolerance=this.tolerance,c.iterations=this.iterations;const d=$F;for(;u=G_(n);){f.length=0,d.bodies.length=0,ZF(u,KF,d.bodies,f);const p=f.length;f=f.sort(JF);for(let g=0;g!==p;g++)c.addEquation(f[g]);c.solve(e,d),c.removeAllEquations(),h++}return h}}const jF=[],XF=[],$F={bodies:[]},YF=Re.STATIC;function G_(s){const e=s.length;for(let t=0;t!==e;t++){const n=s[t];if(!n.visited&&!(n.body.type&YF))return n}return!1}const Dc=[];function ZF(s,e,t,n){for(Dc.push(s),s.visited=!0,e(s,t,n);Dc.length;){const i=Dc.pop();let r;for(;r=G_(i.children);)r.visited=!0,e(r,t,n),Dc.push(r)}}function KF(s,e,t){e.push(s.body);const n=s.eqs.length;for(let i=0;i!==n;i++){const r=s.eqs[i];t.includes(r)||t.push(r)}}function JF(s,e){return e.id-s.id}class W_{constructor(){this.objects=[],this.type=Object}release(){const e=arguments.length;for(let t=0;t!==e;t++)this.objects.push(t<0||arguments.length<=t?void 0:arguments[t]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(e){const t=this.objects;for(;t.length>e;)t.pop();for(;t.length<e;)t.push(this.constructObject());return this}}class q_ extends W_{constructor(){super(...arguments),this.type=M}constructObject(){return new M}}const ct={sphereSphere:Te.types.SPHERE,spherePlane:Te.types.SPHERE|Te.types.PLANE,boxBox:Te.types.BOX|Te.types.BOX,sphereBox:Te.types.SPHERE|Te.types.BOX,planeBox:Te.types.PLANE|Te.types.BOX,convexConvex:Te.types.CONVEXPOLYHEDRON,sphereConvex:Te.types.SPHERE|Te.types.CONVEXPOLYHEDRON,planeConvex:Te.types.PLANE|Te.types.CONVEXPOLYHEDRON,boxConvex:Te.types.BOX|Te.types.CONVEXPOLYHEDRON,sphereHeightfield:Te.types.SPHERE|Te.types.HEIGHTFIELD,boxHeightfield:Te.types.BOX|Te.types.HEIGHTFIELD,convexHeightfield:Te.types.CONVEXPOLYHEDRON|Te.types.HEIGHTFIELD,sphereParticle:Te.types.PARTICLE|Te.types.SPHERE,planeParticle:Te.types.PLANE|Te.types.PARTICLE,boxParticle:Te.types.BOX|Te.types.PARTICLE,convexParticle:Te.types.PARTICLE|Te.types.CONVEXPOLYHEDRON,cylinderCylinder:Te.types.CYLINDER,sphereCylinder:Te.types.SPHERE|Te.types.CYLINDER,planeCylinder:Te.types.PLANE|Te.types.CYLINDER,boxCylinder:Te.types.BOX|Te.types.CYLINDER,convexCylinder:Te.types.CONVEXPOLYHEDRON|Te.types.CYLINDER,heightfieldCylinder:Te.types.HEIGHTFIELD|Te.types.CYLINDER,particleCylinder:Te.types.PARTICLE|Te.types.CYLINDER,sphereTrimesh:Te.types.SPHERE|Te.types.TRIMESH,planeTrimesh:Te.types.PLANE|Te.types.TRIMESH};class j_{get[ct.sphereSphere](){return this.sphereSphere}get[ct.spherePlane](){return this.spherePlane}get[ct.boxBox](){return this.boxBox}get[ct.sphereBox](){return this.sphereBox}get[ct.planeBox](){return this.planeBox}get[ct.convexConvex](){return this.convexConvex}get[ct.sphereConvex](){return this.sphereConvex}get[ct.planeConvex](){return this.planeConvex}get[ct.boxConvex](){return this.boxConvex}get[ct.sphereHeightfield](){return this.sphereHeightfield}get[ct.boxHeightfield](){return this.boxHeightfield}get[ct.convexHeightfield](){return this.convexHeightfield}get[ct.sphereParticle](){return this.sphereParticle}get[ct.planeParticle](){return this.planeParticle}get[ct.boxParticle](){return this.boxParticle}get[ct.convexParticle](){return this.convexParticle}get[ct.cylinderCylinder](){return this.convexConvex}get[ct.sphereCylinder](){return this.sphereConvex}get[ct.planeCylinder](){return this.planeConvex}get[ct.boxCylinder](){return this.boxConvex}get[ct.convexCylinder](){return this.convexConvex}get[ct.heightfieldCylinder](){return this.heightfieldCylinder}get[ct.particleCylinder](){return this.particleCylinder}get[ct.sphereTrimesh](){return this.sphereTrimesh}get[ct.planeTrimesh](){return this.planeTrimesh}constructor(e){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new q_,this.world=e,this.currentContactMaterial=e.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(e,t,n,i,r,o){let a;this.contactPointPool.length?(a=this.contactPointPool.pop(),a.bi=e,a.bj=t):a=new mo(e,t),a.enabled=e.collisionResponse&&t.collisionResponse&&n.collisionResponse&&i.collisionResponse;const l=this.currentContactMaterial;a.restitution=l.restitution,a.setSpookParams(l.contactEquationStiffness,l.contactEquationRelaxation,this.world.dt);const c=n.material||e.material,u=i.material||t.material;return c&&u&&c.restitution>=0&&u.restitution>=0&&(a.restitution=c.restitution*u.restitution),a.si=r||n,a.sj=o||i,a}createFrictionEquationsFromContact(e,t){const n=e.bi,i=e.bj,r=e.si,o=e.sj,a=this.world,l=this.currentContactMaterial;let c=l.friction;const u=r.material||n.material,h=o.material||i.material;if(u&&h&&u.friction>=0&&h.friction>=0&&(c=u.friction*h.friction),c>0){const f=c*a.gravity.length();let d=n.invMass+i.invMass;d>0&&(d=1/d);const p=this.frictionEquationPool,g=p.length?p.pop():new _d(n,i,f*d),m=p.length?p.pop():new _d(n,i,f*d);return g.bi=m.bi=n,g.bj=m.bj=i,g.minForce=m.minForce=-f*d,g.maxForce=m.maxForce=f*d,g.ri.copy(e.ri),g.rj.copy(e.rj),m.ri.copy(e.ri),m.rj.copy(e.rj),e.ni.tangents(g.t,m.t),g.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),m.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),g.enabled=m.enabled=e.enabled,t.push(g,m),!0}return!1}createFrictionFromAverage(e){let t=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(t,this.frictionResult)||e===1)return;const n=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];Vs.setZero(),Zr.setZero(),Kr.setZero();const r=t.bi;t.bj;for(let a=0;a!==e;a++)t=this.result[this.result.length-1-a],t.bi!==r?(Vs.vadd(t.ni,Vs),Zr.vadd(t.ri,Zr),Kr.vadd(t.rj,Kr)):(Vs.vsub(t.ni,Vs),Zr.vadd(t.rj,Zr),Kr.vadd(t.ri,Kr));const o=1/e;Zr.scale(o,n.ri),Kr.scale(o,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),Vs.normalize(),Vs.tangents(n.t,i.t)}getContacts(e,t,n,i,r,o,a){this.contactPointPool=r,this.frictionEquationPool=a,this.result=i,this.frictionResult=o;const l=tB,c=nB,u=QF,h=eB;for(let f=0,d=e.length;f!==d;f++){const p=e[f],g=t[f];let m=null;p.material&&g.material&&(m=n.getContactMaterial(p.material,g.material)||null);const v=p.type&Re.KINEMATIC&&g.type&Re.STATIC||p.type&Re.STATIC&&g.type&Re.KINEMATIC||p.type&Re.KINEMATIC&&g.type&Re.KINEMATIC;for(let y=0;y<p.shapes.length;y++){p.quaternion.mult(p.shapeOrientations[y],l),p.quaternion.vmult(p.shapeOffsets[y],u),u.vadd(p.position,u);const x=p.shapes[y];for(let _=0;_<g.shapes.length;_++){g.quaternion.mult(g.shapeOrientations[_],c),g.quaternion.vmult(g.shapeOffsets[_],h),h.vadd(g.position,h);const b=g.shapes[_];if(!(x.collisionFilterMask&b.collisionFilterGroup&&b.collisionFilterMask&x.collisionFilterGroup)||u.distanceTo(h)>x.boundingSphereRadius+b.boundingSphereRadius)continue;let S=null;x.material&&b.material&&(S=n.getContactMaterial(x.material,b.material)||null),this.currentContactMaterial=S||m||n.defaultContactMaterial;const E=x.type|b.type,w=this[E];if(w){let A=!1;x.type<b.type?A=w.call(this,x,b,u,h,l,c,p,g,x,b,v):A=w.call(this,b,x,h,u,c,l,g,p,x,b,v),A&&v&&(n.shapeOverlapKeeper.set(x.id,b.id),n.bodyOverlapKeeper.set(p.id,g.id))}}}}}sphereSphere(e,t,n,i,r,o,a,l,c,u,h){if(h)return n.distanceSquared(i)<(e.radius+t.radius)**2;const f=this.createContactEquation(a,l,e,t,c,u);i.vsub(n,f.ni),f.ni.normalize(),f.ri.copy(f.ni),f.rj.copy(f.ni),f.ri.scale(e.radius,f.ri),f.rj.scale(-t.radius,f.rj),f.ri.vadd(n,f.ri),f.ri.vsub(a.position,f.ri),f.rj.vadd(i,f.rj),f.rj.vsub(l.position,f.rj),this.result.push(f),this.createFrictionEquationsFromContact(f,this.frictionResult)}spherePlane(e,t,n,i,r,o,a,l,c,u,h){const f=this.createContactEquation(a,l,e,t,c,u);if(f.ni.set(0,0,1),o.vmult(f.ni,f.ni),f.ni.negate(f.ni),f.ni.normalize(),f.ni.scale(e.radius,f.ri),n.vsub(i,zc),f.ni.scale(f.ni.dot(zc),k0),zc.vsub(k0,f.rj),-zc.dot(f.ni)<=e.radius){if(h)return!0;const d=f.ri,p=f.rj;d.vadd(n,d),d.vsub(a.position,d),p.vadd(i,p),p.vsub(l.position,p),this.result.push(f),this.createFrictionEquationsFromContact(f,this.frictionResult)}}boxBox(e,t,n,i,r,o,a,l,c,u,h){return e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t.convexPolyhedronRepresentation,n,i,r,o,a,l,e,t,h)}sphereBox(e,t,n,i,r,o,a,l,c,u,h){const f=this.v3pool,d=CB;n.vsub(i,Nc),t.getSideNormals(d,o);const p=e.radius;let g=!1;const m=LB,v=PB,y=IB;let x=null,_=0,b=0,S=0,E=null;for(let D=0,j=d.length;D!==j&&g===!1;D++){const G=EB;G.copy(d[D]);const V=G.length();G.normalize();const Y=Nc.dot(G);if(Y<V+p&&Y>0){const te=TB,X=AB;te.copy(d[(D+1)%3]),X.copy(d[(D+2)%3]);const ue=te.length(),me=X.length();te.normalize(),X.normalize();const ge=Nc.dot(te),Q=Nc.dot(X);if(ge<ue&&ge>-ue&&Q<me&&Q>-me){const Pe=Math.abs(Y-V-p);if((E===null||Pe<E)&&(E=Pe,b=ge,S=Q,x=V,m.copy(G),v.copy(te),y.copy(X),_++,h))return!0}}}if(_){g=!0;const D=this.createContactEquation(a,l,e,t,c,u);m.scale(-p,D.ri),D.ni.copy(m),D.ni.negate(D.ni),m.scale(x,m),v.scale(b,v),m.vadd(v,m),y.scale(S,y),m.vadd(y,D.rj),D.ri.vadd(n,D.ri),D.ri.vsub(a.position,D.ri),D.rj.vadd(i,D.rj),D.rj.vsub(l.position,D.rj),this.result.push(D),this.createFrictionEquationsFromContact(D,this.frictionResult)}let w=f.get();const A=RB;for(let D=0;D!==2&&!g;D++)for(let j=0;j!==2&&!g;j++)for(let G=0;G!==2&&!g;G++)if(w.set(0,0,0),D?w.vadd(d[0],w):w.vsub(d[0],w),j?w.vadd(d[1],w):w.vsub(d[1],w),G?w.vadd(d[2],w):w.vsub(d[2],w),i.vadd(w,A),A.vsub(n,A),A.lengthSquared()<p*p){if(h)return!0;g=!0;const V=this.createContactEquation(a,l,e,t,c,u);V.ri.copy(A),V.ri.normalize(),V.ni.copy(V.ri),V.ri.scale(p,V.ri),V.rj.copy(w),V.ri.vadd(n,V.ri),V.ri.vsub(a.position,V.ri),V.rj.vadd(i,V.rj),V.rj.vsub(l.position,V.rj),this.result.push(V),this.createFrictionEquationsFromContact(V,this.frictionResult)}f.release(w),w=null;const L=f.get(),N=f.get(),k=f.get(),O=f.get(),I=f.get(),U=d.length;for(let D=0;D!==U&&!g;D++)for(let j=0;j!==U&&!g;j++)if(D%3!==j%3){d[j].cross(d[D],L),L.normalize(),d[D].vadd(d[j],N),k.copy(n),k.vsub(N,k),k.vsub(i,k);const G=k.dot(L);L.scale(G,O);let V=0;for(;V===D%3||V===j%3;)V++;I.copy(n),I.vsub(O,I),I.vsub(N,I),I.vsub(i,I);const Y=Math.abs(G),te=I.length();if(Y<d[V].length()&&te<p){if(h)return!0;g=!0;const X=this.createContactEquation(a,l,e,t,c,u);N.vadd(O,X.rj),X.rj.copy(X.rj),I.negate(X.ni),X.ni.normalize(),X.ri.copy(X.rj),X.ri.vadd(i,X.ri),X.ri.vsub(n,X.ri),X.ri.normalize(),X.ri.scale(p,X.ri),X.ri.vadd(n,X.ri),X.ri.vsub(a.position,X.ri),X.rj.vadd(i,X.rj),X.rj.vsub(l.position,X.rj),this.result.push(X),this.createFrictionEquationsFromContact(X,this.frictionResult)}}f.release(L,N,k,O,I)}planeBox(e,t,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,t.convexPolyhedronRepresentation.id=t.id,this.planeConvex(e,t.convexPolyhedronRepresentation,n,i,r,o,a,l,e,t,h)}convexConvex(e,t,n,i,r,o,a,l,c,u,h,f,d){const p=XB;if(!(n.distanceTo(i)>e.boundingSphereRadius+t.boundingSphereRadius)&&e.findSeparatingAxis(t,n,r,i,o,p,f,d)){const g=[],m=$B;e.clipAgainstHull(n,r,t,i,o,p,-100,100,g);let v=0;for(let y=0;y!==g.length;y++){if(h)return!0;const x=this.createContactEquation(a,l,e,t,c,u),_=x.ri,b=x.rj;p.negate(x.ni),g[y].normal.negate(m),m.scale(g[y].depth,m),g[y].point.vadd(m,_),b.copy(g[y].point),_.vsub(n,_),b.vsub(i,b),_.vadd(n,_),_.vsub(a.position,_),b.vadd(i,b),b.vsub(l.position,b),this.result.push(x),v++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(x,this.frictionResult)}this.enableFrictionReduction&&v&&this.createFrictionFromAverage(v)}}sphereConvex(e,t,n,i,r,o,a,l,c,u,h){const f=this.v3pool;n.vsub(i,FB);const d=t.faceNormals,p=t.faces,g=t.vertices,m=e.radius;let v=!1;for(let y=0;y!==g.length;y++){const x=g[y],_=NB;o.vmult(x,_),i.vadd(_,_);const b=zB;if(_.vsub(n,b),b.lengthSquared()<m*m){if(h)return!0;v=!0;const S=this.createContactEquation(a,l,e,t,c,u);S.ri.copy(b),S.ri.normalize(),S.ni.copy(S.ri),S.ri.scale(m,S.ri),_.vsub(i,S.rj),S.ri.vadd(n,S.ri),S.ri.vsub(a.position,S.ri),S.rj.vadd(i,S.rj),S.rj.vsub(l.position,S.rj),this.result.push(S),this.createFrictionEquationsFromContact(S,this.frictionResult);return}}for(let y=0,x=p.length;y!==x&&v===!1;y++){const _=d[y],b=p[y],S=OB;o.vmult(_,S);const E=UB;o.vmult(g[b[0]],E),E.vadd(i,E);const w=kB;S.scale(-m,w),n.vadd(w,w);const A=HB;w.vsub(E,A);const L=A.dot(S),N=VB;if(n.vsub(E,N),L<0&&N.dot(S)>0){const k=[];for(let O=0,I=b.length;O!==I;O++){const U=f.get();o.vmult(g[b[O]],U),i.vadd(U,U),k.push(U)}if(SB(k,S,n)){if(h)return!0;v=!0;const O=this.createContactEquation(a,l,e,t,c,u);S.scale(-m,O.ri),S.negate(O.ni);const I=f.get();S.scale(-L,I);const U=f.get();S.scale(-m,U),n.vsub(i,O.rj),O.rj.vadd(U,O.rj),O.rj.vadd(I,O.rj),O.rj.vadd(i,O.rj),O.rj.vsub(l.position,O.rj),O.ri.vadd(n,O.ri),O.ri.vsub(a.position,O.ri),f.release(I),f.release(U),this.result.push(O),this.createFrictionEquationsFromContact(O,this.frictionResult);for(let D=0,j=k.length;D!==j;D++)f.release(k[D]);return}else for(let O=0;O!==b.length;O++){const I=f.get(),U=f.get();o.vmult(g[b[(O+1)%b.length]],I),o.vmult(g[b[(O+2)%b.length]],U),i.vadd(I,I),i.vadd(U,U);const D=BB;U.vsub(I,D);const j=DB;D.unit(j);const G=f.get(),V=f.get();n.vsub(I,V);const Y=V.dot(j);j.scale(Y,G),G.vadd(I,G);const te=f.get();if(G.vsub(n,te),Y>0&&Y*Y<D.lengthSquared()&&te.lengthSquared()<m*m){if(h)return!0;const X=this.createContactEquation(a,l,e,t,c,u);G.vsub(i,X.rj),G.vsub(n,X.ni),X.ni.normalize(),X.ni.scale(m,X.ri),X.rj.vadd(i,X.rj),X.rj.vsub(l.position,X.rj),X.ri.vadd(n,X.ri),X.ri.vsub(a.position,X.ri),this.result.push(X),this.createFrictionEquationsFromContact(X,this.frictionResult);for(let ue=0,me=k.length;ue!==me;ue++)f.release(k[ue]);f.release(I),f.release(U),f.release(G),f.release(te),f.release(V);return}f.release(I),f.release(U),f.release(G),f.release(te),f.release(V)}for(let O=0,I=k.length;O!==I;O++)f.release(k[O])}}}planeConvex(e,t,n,i,r,o,a,l,c,u,h){const f=GB,d=WB;d.set(0,0,1),r.vmult(d,d);let p=0;const g=qB;for(let m=0;m!==t.vertices.length;m++)if(f.copy(t.vertices[m]),o.vmult(f,f),i.vadd(f,f),f.vsub(n,g),d.dot(g)<=0){if(h)return!0;const y=this.createContactEquation(a,l,e,t,c,u),x=jB;d.scale(d.dot(g),x),f.vsub(x,x),x.vsub(n,y.ri),y.ni.copy(d),f.vsub(i,y.rj),y.ri.vadd(n,y.ri),y.ri.vsub(a.position,y.ri),y.rj.vadd(i,y.rj),y.rj.vsub(l.position,y.rj),this.result.push(y),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(y,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(e,t,n,i,r,o,a,l,c,u,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t,n,i,r,o,a,l,e,t,h)}sphereHeightfield(e,t,n,i,r,o,a,l,c,u,h){const f=t.data,d=e.radius,p=t.elementSize,g=oD,m=rD;Ke.pointToLocalFrame(i,o,n,m);let v=Math.floor((m.x-d)/p)-1,y=Math.ceil((m.x+d)/p)+1,x=Math.floor((m.y-d)/p)-1,_=Math.ceil((m.y+d)/p)+1;if(y<0||_<0||v>f.length||x>f[0].length)return;v<0&&(v=0),y<0&&(y=0),x<0&&(x=0),_<0&&(_=0),v>=f.length&&(v=f.length-1),y>=f.length&&(y=f.length-1),_>=f[0].length&&(_=f[0].length-1),x>=f[0].length&&(x=f[0].length-1);const b=[];t.getRectMinMax(v,x,y,_,b);const S=b[0],E=b[1];if(m.z-d>E||m.z+d<S)return;const w=this.result;for(let A=v;A<y;A++)for(let L=x;L<_;L++){const N=w.length;let k=!1;if(t.getConvexTrianglePillar(A,L,!1),Ke.pointToWorldFrame(i,o,t.pillarOffset,g),n.distanceTo(g)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(k=this.sphereConvex(e,t.pillarConvex,n,g,r,o,a,l,e,t,h)),h&&k||(t.getConvexTrianglePillar(A,L,!0),Ke.pointToWorldFrame(i,o,t.pillarOffset,g),n.distanceTo(g)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(k=this.sphereConvex(e,t.pillarConvex,n,g,r,o,a,l,e,t,h)),h&&k))return!0;if(w.length-N>2)return}}boxHeightfield(e,t,n,i,r,o,a,l,c,u,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexHeightfield(e.convexPolyhedronRepresentation,t,n,i,r,o,a,l,e,t,h)}convexHeightfield(e,t,n,i,r,o,a,l,c,u,h){const f=t.data,d=t.elementSize,p=e.boundingSphereRadius,g=iD,m=sD,v=nD;Ke.pointToLocalFrame(i,o,n,v);let y=Math.floor((v.x-p)/d)-1,x=Math.ceil((v.x+p)/d)+1,_=Math.floor((v.y-p)/d)-1,b=Math.ceil((v.y+p)/d)+1;if(x<0||b<0||y>f.length||_>f[0].length)return;y<0&&(y=0),x<0&&(x=0),_<0&&(_=0),b<0&&(b=0),y>=f.length&&(y=f.length-1),x>=f.length&&(x=f.length-1),b>=f[0].length&&(b=f[0].length-1),_>=f[0].length&&(_=f[0].length-1);const S=[];t.getRectMinMax(y,_,x,b,S);const E=S[0],w=S[1];if(!(v.z-p>w||v.z+p<E))for(let A=y;A<x;A++)for(let L=_;L<b;L++){let N=!1;if(t.getConvexTrianglePillar(A,L,!1),Ke.pointToWorldFrame(i,o,t.pillarOffset,g),n.distanceTo(g)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(N=this.convexConvex(e,t.pillarConvex,n,g,r,o,a,l,null,null,h,m,null)),h&&N||(t.getConvexTrianglePillar(A,L,!0),Ke.pointToWorldFrame(i,o,t.pillarOffset,g),n.distanceTo(g)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(N=this.convexConvex(e,t.pillarConvex,n,g,r,o,a,l,null,null,h,m,null)),h&&N))return!0}}sphereParticle(e,t,n,i,r,o,a,l,c,u,h){const f=JB;if(f.set(0,0,1),i.vsub(n,f),f.lengthSquared()<=e.radius*e.radius){if(h)return!0;const p=this.createContactEquation(l,a,t,e,c,u);f.normalize(),p.rj.copy(f),p.rj.scale(e.radius,p.rj),p.ni.copy(f),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(e,t,n,i,r,o,a,l,c,u,h){const f=YB;f.set(0,0,1),a.quaternion.vmult(f,f);const d=ZB;if(i.vsub(a.position,d),f.dot(d)<=0){if(h)return!0;const g=this.createContactEquation(l,a,t,e,c,u);g.ni.copy(f),g.ni.negate(g.ni),g.ri.set(0,0,0);const m=KB;f.scale(f.dot(i),m),i.vsub(m,m),g.rj.copy(m),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}}boxParticle(e,t,n,i,r,o,a,l,c,u,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexParticle(e.convexPolyhedronRepresentation,t,n,i,r,o,a,l,e,t,h)}convexParticle(e,t,n,i,r,o,a,l,c,u,h){let f=-1;const d=eD,p=tD;let g=null;const m=QB;if(m.copy(i),m.vsub(n,m),r.conjugate(H0),H0.vmult(m,m),e.pointIsInside(m)){e.worldVerticesNeedsUpdate&&e.computeWorldVertices(n,r),e.worldFaceNormalsNeedsUpdate&&e.computeWorldFaceNormals(r);for(let v=0,y=e.faces.length;v!==y;v++){const x=[e.worldVertices[e.faces[v][0]]],_=e.worldFaceNormals[v];i.vsub(x[0],V0);const b=-_.dot(V0);if(g===null||Math.abs(b)<Math.abs(g)){if(h)return!0;g=b,f=v,d.copy(_)}}if(f!==-1){const v=this.createContactEquation(l,a,t,e,c,u);d.scale(g,p),p.vadd(i,p),p.vsub(n,p),v.rj.copy(p),d.negate(v.ni),v.ri.set(0,0,0);const y=v.ri,x=v.rj;y.vadd(i,y),y.vsub(l.position,y),x.vadd(n,x),x.vsub(a.position,x),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(e,t,n,i,r,o,a,l,c,u,h){return this.convexHeightfield(t,e,i,n,o,r,l,a,c,u,h)}particleCylinder(e,t,n,i,r,o,a,l,c,u,h){return this.convexParticle(t,e,i,n,o,r,l,a,c,u,h)}sphereTrimesh(e,t,n,i,r,o,a,l,c,u,h){const f=uB,d=hB,p=fB,g=dB,m=pB,v=mB,y=xB,x=cB,_=aB,b=_B;Ke.pointToLocalFrame(i,o,n,m);const S=e.radius;y.lowerBound.set(m.x-S,m.y-S,m.z-S),y.upperBound.set(m.x+S,m.y+S,m.z+S),t.getTrianglesInAABB(y,b);const E=lB,w=e.radius*e.radius;for(let O=0;O<b.length;O++)for(let I=0;I<3;I++)if(t.getVertex(t.indices[b[O]*3+I],E),E.vsub(m,_),_.lengthSquared()<=w){if(x.copy(E),Ke.pointToWorldFrame(i,o,x,E),E.vsub(n,_),h)return!0;let U=this.createContactEquation(a,l,e,t,c,u);U.ni.copy(_),U.ni.normalize(),U.ri.copy(U.ni),U.ri.scale(e.radius,U.ri),U.ri.vadd(n,U.ri),U.ri.vsub(a.position,U.ri),U.rj.copy(E),U.rj.vsub(l.position,U.rj),this.result.push(U),this.createFrictionEquationsFromContact(U,this.frictionResult)}for(let O=0;O<b.length;O++)for(let I=0;I<3;I++){t.getVertex(t.indices[b[O]*3+I],f),t.getVertex(t.indices[b[O]*3+(I+1)%3],d),d.vsub(f,p),m.vsub(d,v);const U=v.dot(p);m.vsub(f,v);let D=v.dot(p);if(D>0&&U<0&&(m.vsub(f,v),g.copy(p),g.normalize(),D=v.dot(g),g.scale(D,v),v.vadd(f,v),v.distanceTo(m)<e.radius)){if(h)return!0;const G=this.createContactEquation(a,l,e,t,c,u);v.vsub(m,G.ni),G.ni.normalize(),G.ni.scale(e.radius,G.ri),G.ri.vadd(n,G.ri),G.ri.vsub(a.position,G.ri),Ke.pointToWorldFrame(i,o,v,v),v.vsub(l.position,G.rj),Ke.vectorToWorldFrame(o,G.ni,G.ni),Ke.vectorToWorldFrame(o,G.ri,G.ri),this.result.push(G),this.createFrictionEquationsFromContact(G,this.frictionResult)}}const A=gB,L=yB,N=vB,k=oB;for(let O=0,I=b.length;O!==I;O++){t.getTriangleVertices(b[O],A,L,N),t.getNormal(b[O],k),m.vsub(A,v);let U=v.dot(k);if(k.scale(U,v),m.vsub(v,v),U=v.distanceTo(m),Mt.pointInTriangle(v,A,L,N)&&U<e.radius){if(h)return!0;let D=this.createContactEquation(a,l,e,t,c,u);v.vsub(m,D.ni),D.ni.normalize(),D.ni.scale(e.radius,D.ri),D.ri.vadd(n,D.ri),D.ri.vsub(a.position,D.ri),Ke.pointToWorldFrame(i,o,v,v),v.vsub(l.position,D.rj),Ke.vectorToWorldFrame(o,D.ni,D.ni),Ke.vectorToWorldFrame(o,D.ri,D.ri),this.result.push(D),this.createFrictionEquationsFromContact(D,this.frictionResult)}}b.length=0}planeTrimesh(e,t,n,i,r,o,a,l,c,u,h){const f=new M,d=iB;d.set(0,0,1),r.vmult(d,d);for(let p=0;p<t.vertices.length/3;p++){t.getVertex(p,f);const g=new M;g.copy(f),Ke.pointToWorldFrame(i,o,g,f);const m=sB;if(f.vsub(n,m),d.dot(m)<=0){if(h)return!0;const y=this.createContactEquation(a,l,e,t,c,u);y.ni.copy(d);const x=rB;d.scale(m.dot(d),x),f.vsub(x,x),y.ri.copy(x),y.ri.vsub(a.position,y.ri),y.rj.copy(f),y.rj.vsub(l.position,y.rj),this.result.push(y),this.createFrictionEquationsFromContact(y,this.frictionResult)}}}}const Vs=new M,Zr=new M,Kr=new M,QF=new M,eB=new M,tB=new pt,nB=new pt,iB=new M,sB=new M,rB=new M,oB=new M,aB=new M;new M;const lB=new M,cB=new M,uB=new M,hB=new M,fB=new M,dB=new M,pB=new M,mB=new M,gB=new M,yB=new M,vB=new M,xB=new ft,_B=[],zc=new M,k0=new M,wB=new M,bB=new M,MB=new M;function SB(s,e,t){let n=null;const i=s.length;for(let r=0;r!==i;r++){const o=s[r],a=wB;s[(r+1)%i].vsub(o,a);const l=bB;a.cross(e,l);const c=MB;t.vsub(o,c);const u=l.dot(c);if(n===null||u>0&&n===!0||u<=0&&n===!1){n===null&&(n=u>0);continue}else return!1}return!0}const Nc=new M,EB=new M,TB=new M,AB=new M,CB=[new M,new M,new M,new M,new M,new M],RB=new M,LB=new M,PB=new M,IB=new M,FB=new M,BB=new M,DB=new M,zB=new M,NB=new M,OB=new M,UB=new M,kB=new M,HB=new M,VB=new M;new M;new M;const GB=new M,WB=new M,qB=new M,jB=new M,XB=new M,$B=new M,YB=new M,ZB=new M,KB=new M,JB=new M,H0=new pt,QB=new M;new M;const eD=new M,V0=new M,tD=new M,nD=new M,iD=new M,sD=[0],rD=new M,oD=new M;class G0{constructor(){this.current=[],this.previous=[]}getKey(e,t){if(t<e){const n=t;t=e,e=n}return e<<16|t}set(e,t){const n=this.getKey(e,t),i=this.current;let r=0;for(;n>i[r];)r++;if(n!==i[r]){for(let o=i.length-1;o>=r;o--)i[o+1]=i[o];i[r]=n}}tick(){const e=this.current;this.current=this.previous,this.previous=e,this.current.length=0}getDiff(e,t){const n=this.current,i=this.previous,r=n.length,o=i.length;let a=0;for(let l=0;l<r;l++){let c=!1;const u=n[l];for(;u>i[a];)a++;c=u===i[a],c||W0(e,u)}a=0;for(let l=0;l<o;l++){let c=!1;const u=i[l];for(;u>n[a];)a++;c=n[a]===u,c||W0(t,u)}}}function W0(s,e){s.push((e&4294901760)>>16,e&65535)}const uf=(s,e)=>s<e?`${s}-${e}`:`${e}-${s}`;class aD{constructor(){this.data={keys:[]}}get(e,t){const n=uf(e,t);return this.data[n]}set(e,t,n){const i=uf(e,t);this.get(e,t)||this.data.keys.push(i),this.data[i]=n}delete(e,t){const n=uf(e,t),i=this.data.keys.indexOf(n);i!==-1&&this.data.keys.splice(i,1),delete this.data[n]}reset(){const e=this.data,t=e.keys;for(;t.length>0;){const n=t.pop();delete e[n]}}}class X_ extends Vp{constructor(e){e===void 0&&(e={}),super(),this.dt=-1,this.allowSleep=!!e.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=e.quatNormalizeSkip!==void 0?e.quatNormalizeSkip:0,this.quatNormalizeFast=e.quatNormalizeFast!==void 0?e.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new M,e.gravity&&this.gravity.copy(e.gravity),this.broadphase=e.broadphase!==void 0?e.broadphase:new R_,this.bodies=[],this.hasActiveBodies=!1,this.solver=e.solver!==void 0?e.solver:new V_,this.constraints=[],this.narrowphase=new j_(this),this.collisionMatrix=new vd,this.collisionMatrixPrevious=new vd,this.bodyOverlapKeeper=new G0,this.shapeOverlapKeeper=new G0,this.contactmaterials=[],this.contactMaterialTable=new aD,this.defaultMaterial=new Cl("default"),this.defaultContactMaterial=new Al(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(e,t){return this.contactMaterialTable.get(e.id,t.id)}collisionMatrixTick(){const e=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=e,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(e){this.constraints.push(e)}removeConstraint(e){const t=this.constraints.indexOf(e);t!==-1&&this.constraints.splice(t,1)}rayTest(e,t,n){n instanceof Uo?this.raycastClosest(e,t,{skipBackfaces:!0},n):this.raycastAll(e,t,{skipBackfaces:!0},n)}raycastAll(e,t,n,i){return n===void 0&&(n={}),n.mode=Mt.ALL,n.from=e,n.to=t,n.callback=i,hf.intersectWorld(this,n)}raycastAny(e,t,n,i){return n===void 0&&(n={}),n.mode=Mt.ANY,n.from=e,n.to=t,n.result=i,hf.intersectWorld(this,n)}raycastClosest(e,t,n,i){return n===void 0&&(n={}),n.mode=Mt.CLOSEST,n.from=e,n.to=t,n.result=i,hf.intersectWorld(this,n)}addBody(e){this.bodies.includes(e)||(e.index=this.bodies.length,this.bodies.push(e),e.world=this,e.initPosition.copy(e.position),e.initVelocity.copy(e.velocity),e.timeLastSleepy=this.time,e instanceof Re&&(e.initAngularVelocity.copy(e.angularVelocity),e.initQuaternion.copy(e.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=e,this.idToBodyMap[e.id]=e,this.dispatchEvent(this.addBodyEvent))}removeBody(e){e.world=null;const t=this.bodies.length-1,n=this.bodies,i=n.indexOf(e);if(i!==-1){n.splice(i,1);for(let r=0;r!==n.length;r++)n[r].index=r;this.collisionMatrix.setNumObjects(t),this.removeBodyEvent.body=e,delete this.idToBodyMap[e.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(e){return this.idToBodyMap[e]}getShapeById(e){const t=this.bodies;for(let n=0;n<t.length;n++){const i=t[n].shapes;for(let r=0;r<i.length;r++){const o=i[r];if(o.id===e)return o}}return null}addContactMaterial(e){this.contactmaterials.push(e),this.contactMaterialTable.set(e.materials[0].id,e.materials[1].id,e)}removeContactMaterial(e){const t=this.contactmaterials.indexOf(e);t!==-1&&(this.contactmaterials.splice(t,1),this.contactMaterialTable.delete(e.materials[0].id,e.materials[1].id))}fixedStep(e,t){e===void 0&&(e=1/60),t===void 0&&(t=10);const n=zt.now()/1e3;if(!this.lastCallTime)this.step(e,void 0,t);else{const i=n-this.lastCallTime;this.step(e,i,t)}this.lastCallTime=n}step(e,t,n){if(n===void 0&&(n=10),t===void 0)this.internalStep(e),this.time+=e;else{this.accumulator+=t;const i=zt.now();let r=0;for(;this.accumulator>=e&&r<n&&(this.internalStep(e),this.accumulator-=e,r++,!(zt.now()-i>e*1e3)););this.accumulator=this.accumulator%e;const o=this.accumulator/e;for(let a=0;a!==this.bodies.length;a++){const l=this.bodies[a];l.previousPosition.lerp(l.position,o,l.interpolatedPosition),l.previousQuaternion.slerp(l.quaternion,o,l.interpolatedQuaternion),l.previousQuaternion.normalize()}this.time+=t}}internalStep(e){this.dt=e;const t=this.contacts,n=fD,i=dD,r=this.bodies.length,o=this.bodies,a=this.solver,l=this.gravity,c=this.doProfiling,u=this.profile,h=Re.DYNAMIC;let f=-1/0;const d=this.constraints,p=hD;l.length();const g=l.x,m=l.y,v=l.z;let y=0;for(c&&(f=zt.now()),y=0;y!==r;y++){const O=o[y];if(O.type===h){const I=O.force,U=O.mass;I.x+=U*g,I.y+=U*m,I.z+=U*v}}for(let O=0,I=this.subsystems.length;O!==I;O++)this.subsystems[O].update();c&&(f=zt.now()),n.length=0,i.length=0,this.broadphase.collisionPairs(this,n,i),c&&(u.broadphase=zt.now()-f);let x=d.length;for(y=0;y!==x;y++){const O=d[y];if(!O.collideConnected)for(let I=n.length-1;I>=0;I-=1)(O.bodyA===n[I]&&O.bodyB===i[I]||O.bodyB===n[I]&&O.bodyA===i[I])&&(n.splice(I,1),i.splice(I,1))}this.collisionMatrixTick(),c&&(f=zt.now());const _=uD,b=t.length;for(y=0;y!==b;y++)_.push(t[y]);t.length=0;const S=this.frictionEquations.length;for(y=0;y!==S;y++)p.push(this.frictionEquations[y]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(n,i,this,t,_,this.frictionEquations,p),c&&(u.narrowphase=zt.now()-f),c&&(f=zt.now()),y=0;y<this.frictionEquations.length;y++)a.addEquation(this.frictionEquations[y]);const E=t.length;for(let O=0;O!==E;O++){const I=t[O],U=I.bi,D=I.bj,j=I.si,G=I.sj;let V;if(U.material&&D.material?V=this.getContactMaterial(U.material,D.material)||this.defaultContactMaterial:V=this.defaultContactMaterial,V.friction,U.material&&D.material&&(U.material.friction>=0&&D.material.friction>=0&&U.material.friction*D.material.friction,U.material.restitution>=0&&D.material.restitution>=0&&(I.restitution=U.material.restitution*D.material.restitution)),a.addEquation(I),U.allowSleep&&U.type===Re.DYNAMIC&&U.sleepState===Re.SLEEPING&&D.sleepState===Re.AWAKE&&D.type!==Re.STATIC){const Y=D.velocity.lengthSquared()+D.angularVelocity.lengthSquared(),te=D.sleepSpeedLimit**2;Y>=te*2&&(U.wakeUpAfterNarrowphase=!0)}if(D.allowSleep&&D.type===Re.DYNAMIC&&D.sleepState===Re.SLEEPING&&U.sleepState===Re.AWAKE&&U.type!==Re.STATIC){const Y=U.velocity.lengthSquared()+U.angularVelocity.lengthSquared(),te=U.sleepSpeedLimit**2;Y>=te*2&&(D.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(U,D,!0),this.collisionMatrixPrevious.get(U,D)||(xa.body=D,xa.contact=I,U.dispatchEvent(xa),xa.body=U,D.dispatchEvent(xa)),this.bodyOverlapKeeper.set(U.id,D.id),this.shapeOverlapKeeper.set(j.id,G.id)}for(this.emitContactEvents(),c&&(u.makeContactConstraints=zt.now()-f,f=zt.now()),y=0;y!==r;y++){const O=o[y];O.wakeUpAfterNarrowphase&&(O.wakeUp(),O.wakeUpAfterNarrowphase=!1)}for(x=d.length,y=0;y!==x;y++){const O=d[y];O.update();for(let I=0,U=O.equations.length;I!==U;I++){const D=O.equations[I];a.addEquation(D)}}a.solve(e,this),c&&(u.solve=zt.now()-f),a.removeAllEquations();const w=Math.pow;for(y=0;y!==r;y++){const O=o[y];if(O.type&h){const I=w(1-O.linearDamping,e),U=O.velocity;U.scale(I,U);const D=O.angularVelocity;if(D){const j=w(1-O.angularDamping,e);D.scale(j,D)}}}this.dispatchEvent(cD),c&&(f=zt.now());const L=this.stepnumber%(this.quatNormalizeSkip+1)===0,N=this.quatNormalizeFast;for(y=0;y!==r;y++)o[y].integrate(e,L,N);this.clearForces(),this.broadphase.dirty=!0,c&&(u.integrate=zt.now()-f),this.stepnumber+=1,this.dispatchEvent(lD);let k=!0;if(this.allowSleep)for(k=!1,y=0;y!==r;y++){const O=o[y];O.sleepTick(this.time),O.sleepState!==Re.SLEEPING&&(k=!0)}this.hasActiveBodies=k}emitContactEvents(){const e=this.hasAnyEventListener("beginContact"),t=this.hasAnyEventListener("endContact");if((e||t)&&this.bodyOverlapKeeper.getDiff(Ei,Ti),e){for(let r=0,o=Ei.length;r<o;r+=2)_a.bodyA=this.getBodyById(Ei[r]),_a.bodyB=this.getBodyById(Ei[r+1]),this.dispatchEvent(_a);_a.bodyA=_a.bodyB=null}if(t){for(let r=0,o=Ti.length;r<o;r+=2)wa.bodyA=this.getBodyById(Ti[r]),wa.bodyB=this.getBodyById(Ti[r+1]),this.dispatchEvent(wa);wa.bodyA=wa.bodyB=null}Ei.length=Ti.length=0;const n=this.hasAnyEventListener("beginShapeContact"),i=this.hasAnyEventListener("endShapeContact");if((n||i)&&this.shapeOverlapKeeper.getDiff(Ei,Ti),n){for(let r=0,o=Ei.length;r<o;r+=2){const a=this.getShapeById(Ei[r]),l=this.getShapeById(Ei[r+1]);Ai.shapeA=a,Ai.shapeB=l,a&&(Ai.bodyA=a.body),l&&(Ai.bodyB=l.body),this.dispatchEvent(Ai)}Ai.bodyA=Ai.bodyB=Ai.shapeA=Ai.shapeB=null}if(i){for(let r=0,o=Ti.length;r<o;r+=2){const a=this.getShapeById(Ti[r]),l=this.getShapeById(Ti[r+1]);Ci.shapeA=a,Ci.shapeB=l,a&&(Ci.bodyA=a.body),l&&(Ci.bodyB=l.body),this.dispatchEvent(Ci)}Ci.bodyA=Ci.bodyB=Ci.shapeA=Ci.shapeB=null}}clearForces(){const e=this.bodies,t=e.length;for(let n=0;n!==t;n++){const i=e[n];i.force,i.torque,i.force.set(0,0,0),i.torque.set(0,0,0)}}}new ft;const hf=new Mt,zt=globalThis.performance||{};if(!zt.now){let s=Date.now();zt.timing&&zt.timing.navigationStart&&(s=zt.timing.navigationStart),zt.now=()=>Date.now()-s}new M;const lD={type:"postStep"},cD={type:"preStep"},xa={type:Re.COLLIDE_EVENT_NAME,body:null,contact:null},uD=[],hD=[],fD=[],dD=[],Ei=[],Ti=[],_a={type:"beginContact",bodyA:null,bodyB:null},wa={type:"endContact",bodyA:null,bodyB:null},Ai={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Ci={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};var pD=Object.freeze(Object.defineProperty({__proto__:null,AABB:ft,ArrayCollisionMatrix:vd,BODY_SLEEP_STATES:sh,BODY_TYPES:ih,Body:Re,Box:Tl,Broadphase:rh,COLLISION_TYPES:ct,ConeTwistConstraint:SI,Constraint:Qo,ContactEquation:mo,ContactMaterial:Al,ConvexPolyhedron:ci,Cylinder:MF,DistanceConstraint:EI,Equation:qi,EventTarget:Vp,FrictionEquation:_d,GSSolver:V_,GridBroadphase:W3,Heightfield:EF,HingeConstraint:O_,JacobianElement:xd,LockConstraint:TI,Mat3:Tn,Material:Cl,NaiveBroadphase:R_,Narrowphase:j_,ObjectCollisionMatrix:y3,Particle:SF,Plane:H_,PointToPointConstraint:lh,Pool:W_,Quaternion:pt,RAY_MODES:oh,Ray:Mt,RaycastResult:Uo,RaycastVehicle:qI,RigidVehicle:pF,RotationalEquation:ar,RotationalMotorEquation:N_,SAPBroadphase:lo,SHAPE_TYPES:C_,SPHSystem:mF,Shape:Te,Solver:Gp,Sphere:k_,SplitSolver:qF,Spring:FI,Transform:Ke,Trimesh:gu,Vec3:M,Vec3Pool:q_,WheelInfo:U_,World:X_},Symbol.toStringTag,{value:"Module"}));const q0={type:"change"},ff={type:"start"},j0={type:"end"};class X0 extends Gi{constructor(e,t){super(),t===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new P,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Ws.ROTATE,MIDDLE:Ws.DOLLY,RIGHT:Ws.PAN},this.touches={ONE:qs.ROTATE,TWO:qs.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(F){F.addEventListener("keydown",he),this._domElementKeyEvents=F},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(q0),n.update(),r=i.NONE},this.update=function(){const F=new P,le=new gt().setFromUnitVectors(e.up,new P(0,1,0)),Ce=le.clone().invert(),ve=new P,H=new gt,ye=2*Math.PI;return function(){const Ie=n.object.position;F.copy(Ie).sub(n.target),F.applyQuaternion(le),a.setFromVector3(F),n.autoRotate&&r===i.NONE&&A(E()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let _e=n.minAzimuthAngle,Fe=n.maxAzimuthAngle;return isFinite(_e)&&isFinite(Fe)&&(_e<-Math.PI?_e+=ye:_e>Math.PI&&(_e-=ye),Fe<-Math.PI?Fe+=ye:Fe>Math.PI&&(Fe-=ye),_e<=Fe?a.theta=Math.max(_e,Math.min(Fe,a.theta)):a.theta=a.theta>(_e+Fe)/2?Math.max(_e,a.theta):Math.min(Fe,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),F.setFromSpherical(a),F.applyQuaternion(Ce),Ie.copy(n.target).add(F),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,h||ve.distanceToSquared(n.object.position)>o||8*(1-H.dot(n.object.quaternion))>o?(n.dispatchEvent(q0),ve.copy(n.object.position),H.copy(n.object.quaternion),h=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",q),n.domElement.removeEventListener("pointerdown",B),n.domElement.removeEventListener("pointercancel",J),n.domElement.removeEventListener("wheel",ce),n.domElement.removeEventListener("pointermove",W),n.domElement.removeEventListener("pointerup",$),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",he)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const o=1e-6,a=new yd,l=new yd;let c=1;const u=new P;let h=!1;const f=new ae,d=new ae,p=new ae,g=new ae,m=new ae,v=new ae,y=new ae,x=new ae,_=new ae,b=[],S={};function E(){return 2*Math.PI/60/60*n.autoRotateSpeed}function w(){return Math.pow(.95,n.zoomSpeed)}function A(F){l.theta-=F}function L(F){l.phi-=F}const N=function(){const F=new P;return function(Ce,ve){F.setFromMatrixColumn(ve,0),F.multiplyScalar(-Ce),u.add(F)}}(),k=function(){const F=new P;return function(Ce,ve){n.screenSpacePanning===!0?F.setFromMatrixColumn(ve,1):(F.setFromMatrixColumn(ve,0),F.crossVectors(n.object.up,F)),F.multiplyScalar(Ce),u.add(F)}}(),O=function(){const F=new P;return function(Ce,ve){const H=n.domElement;if(n.object.isPerspectiveCamera){const ye=n.object.position;F.copy(ye).sub(n.target);let xe=F.length();xe*=Math.tan(n.object.fov/2*Math.PI/180),N(2*Ce*xe/H.clientHeight,n.object.matrix),k(2*ve*xe/H.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(N(Ce*(n.object.right-n.object.left)/n.object.zoom/H.clientWidth,n.object.matrix),k(ve*(n.object.top-n.object.bottom)/n.object.zoom/H.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function I(F){n.object.isPerspectiveCamera?c/=F:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*F)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function U(F){n.object.isPerspectiveCamera?c*=F:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/F)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function D(F){f.set(F.clientX,F.clientY)}function j(F){y.set(F.clientX,F.clientY)}function G(F){g.set(F.clientX,F.clientY)}function V(F){d.set(F.clientX,F.clientY),p.subVectors(d,f).multiplyScalar(n.rotateSpeed);const le=n.domElement;A(2*Math.PI*p.x/le.clientHeight),L(2*Math.PI*p.y/le.clientHeight),f.copy(d),n.update()}function Y(F){x.set(F.clientX,F.clientY),_.subVectors(x,y),_.y>0?I(w()):_.y<0&&U(w()),y.copy(x),n.update()}function te(F){m.set(F.clientX,F.clientY),v.subVectors(m,g).multiplyScalar(n.panSpeed),O(v.x,v.y),g.copy(m),n.update()}function X(F){F.deltaY<0?U(w()):F.deltaY>0&&I(w()),n.update()}function ue(F){let le=!1;switch(F.code){case n.keys.UP:O(0,n.keyPanSpeed),le=!0;break;case n.keys.BOTTOM:O(0,-n.keyPanSpeed),le=!0;break;case n.keys.LEFT:O(n.keyPanSpeed,0),le=!0;break;case n.keys.RIGHT:O(-n.keyPanSpeed,0),le=!0;break}le&&(F.preventDefault(),n.update())}function me(){if(b.length===1)f.set(b[0].pageX,b[0].pageY);else{const F=.5*(b[0].pageX+b[1].pageX),le=.5*(b[0].pageY+b[1].pageY);f.set(F,le)}}function ge(){if(b.length===1)g.set(b[0].pageX,b[0].pageY);else{const F=.5*(b[0].pageX+b[1].pageX),le=.5*(b[0].pageY+b[1].pageY);g.set(F,le)}}function Q(){const F=b[0].pageX-b[1].pageX,le=b[0].pageY-b[1].pageY,Ce=Math.sqrt(F*F+le*le);y.set(0,Ce)}function Pe(){n.enableZoom&&Q(),n.enablePan&&ge()}function Ae(){n.enableZoom&&Q(),n.enableRotate&&me()}function Be(F){if(b.length==1)d.set(F.pageX,F.pageY);else{const Ce=Se(F),ve=.5*(F.pageX+Ce.x),H=.5*(F.pageY+Ce.y);d.set(ve,H)}p.subVectors(d,f).multiplyScalar(n.rotateSpeed);const le=n.domElement;A(2*Math.PI*p.x/le.clientHeight),L(2*Math.PI*p.y/le.clientHeight),f.copy(d)}function pe(F){if(b.length===1)m.set(F.pageX,F.pageY);else{const le=Se(F),Ce=.5*(F.pageX+le.x),ve=.5*(F.pageY+le.y);m.set(Ce,ve)}v.subVectors(m,g).multiplyScalar(n.panSpeed),O(v.x,v.y),g.copy(m)}function De(F){const le=Se(F),Ce=F.pageX-le.x,ve=F.pageY-le.y,H=Math.sqrt(Ce*Ce+ve*ve);x.set(0,H),_.set(0,Math.pow(x.y/y.y,n.zoomSpeed)),I(_.y),y.copy(x)}function re(F){n.enableZoom&&De(F),n.enablePan&&pe(F)}function C(F){n.enableZoom&&De(F),n.enableRotate&&Be(F)}function B(F){n.enabled!==!1&&(b.length===0&&(n.domElement.setPointerCapture(F.pointerId),n.domElement.addEventListener("pointermove",W),n.domElement.addEventListener("pointerup",$)),Z(F),F.pointerType==="touch"?R(F):ne(F))}function W(F){n.enabled!==!1&&(F.pointerType==="touch"?T(F):se(F))}function $(F){oe(F),b.length===0&&(n.domElement.releasePointerCapture(F.pointerId),n.domElement.removeEventListener("pointermove",W),n.domElement.removeEventListener("pointerup",$)),n.dispatchEvent(j0),r=i.NONE}function J(F){oe(F)}function ne(F){let le;switch(F.button){case 0:le=n.mouseButtons.LEFT;break;case 1:le=n.mouseButtons.MIDDLE;break;case 2:le=n.mouseButtons.RIGHT;break;default:le=-1}switch(le){case Ws.DOLLY:if(n.enableZoom===!1)return;j(F),r=i.DOLLY;break;case Ws.ROTATE:if(F.ctrlKey||F.metaKey||F.shiftKey){if(n.enablePan===!1)return;G(F),r=i.PAN}else{if(n.enableRotate===!1)return;D(F),r=i.ROTATE}break;case Ws.PAN:if(F.ctrlKey||F.metaKey||F.shiftKey){if(n.enableRotate===!1)return;D(F),r=i.ROTATE}else{if(n.enablePan===!1)return;G(F),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(ff)}function se(F){if(n.enabled!==!1)switch(r){case i.ROTATE:if(n.enableRotate===!1)return;V(F);break;case i.DOLLY:if(n.enableZoom===!1)return;Y(F);break;case i.PAN:if(n.enablePan===!1)return;te(F);break}}function ce(F){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(F.preventDefault(),n.dispatchEvent(ff),X(F),n.dispatchEvent(j0))}function he(F){n.enabled===!1||n.enablePan===!1||ue(F)}function R(F){switch(de(F),b.length){case 1:switch(n.touches.ONE){case qs.ROTATE:if(n.enableRotate===!1)return;me(),r=i.TOUCH_ROTATE;break;case qs.PAN:if(n.enablePan===!1)return;ge(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case qs.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Pe(),r=i.TOUCH_DOLLY_PAN;break;case qs.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Ae(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(ff)}function T(F){switch(de(F),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;Be(F),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;pe(F),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;re(F),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;C(F),n.update();break;default:r=i.NONE}}function q(F){n.enabled!==!1&&F.preventDefault()}function Z(F){b.push(F)}function oe(F){delete S[F.pointerId];for(let le=0;le<b.length;le++)if(b[le].pointerId==F.pointerId){b.splice(le,1);return}}function de(F){let le=S[F.pointerId];le===void 0&&(le=new ae,S[F.pointerId]=le),le.set(F.pageX,F.pageY)}function Se(F){const le=F.pointerId===b[0].pointerId?b[1]:b[0];return S[le.pointerId]}n.domElement.addEventListener("contextmenu",q),n.domElement.addEventListener("pointerdown",B),n.domElement.addEventListener("pointercancel",J),n.domElement.addEventListener("wheel",ce,{passive:!1}),this.update()}}/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.6.9
*/var $0={},wd=function(s){return URL.createObjectURL(new Blob([s],{type:"text/javascript"}))},$_=function(s){return new Worker(s)};try{URL.revokeObjectURL(wd(""))}catch{wd=function(e){return"data:application/javascript;charset=UTF-8,"+encodeURI(e)},$_=function(e){return new Worker(e,{type:"module"})}}var mD=function(s,e,t,n,i){var r=$_($0[e]||($0[e]=wd(s)));return r.onerror=function(o){return i(o.error,null)},r.onmessage=function(o){return i(null,o.data)},r.postMessage(t,n),r},$e=Uint8Array,Ht=Uint16Array,ki=Uint32Array,ea=new $e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),ta=new $e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),il=new $e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Y_=function(s,e){for(var t=new Ht(31),n=0;n<31;++n)t[n]=e+=1<<s[n-1];for(var i=new ki(t[30]),n=1;n<30;++n)for(var r=t[n];r<t[n+1];++r)i[r]=r-t[n]<<5|n;return[t,i]},Z_=Y_(ea,2),Wp=Z_[0],yu=Z_[1];Wp[28]=258,yu[258]=28;var K_=Y_(ta,0),J_=K_[0],bd=K_[1],sl=new Ht(32768);for(var dt=0;dt<32768;++dt){var ss=(dt&43690)>>>1|(dt&21845)<<1;ss=(ss&52428)>>>2|(ss&13107)<<2,ss=(ss&61680)>>>4|(ss&3855)<<4,sl[dt]=((ss&65280)>>>8|(ss&255)<<8)>>>1}var An=function(s,e,t){for(var n=s.length,i=0,r=new Ht(e);i<n;++i)++r[s[i]-1];var o=new Ht(e);for(i=0;i<e;++i)o[i]=o[i-1]+r[i-1]<<1;var a;if(t){a=new Ht(1<<e);var l=15-e;for(i=0;i<n;++i)if(s[i])for(var c=i<<4|s[i],u=e-s[i],h=o[s[i]-1]++<<u,f=h|(1<<u)-1;h<=f;++h)a[sl[h]>>>l]=c}else for(a=new Ht(n),i=0;i<n;++i)s[i]&&(a[i]=sl[o[s[i]-1]++]>>>15-s[i]);return a},Hi=new $e(288);for(var dt=0;dt<144;++dt)Hi[dt]=8;for(var dt=144;dt<256;++dt)Hi[dt]=9;for(var dt=256;dt<280;++dt)Hi[dt]=7;for(var dt=280;dt<288;++dt)Hi[dt]=8;var ko=new $e(32);for(var dt=0;dt<32;++dt)ko[dt]=5;var Q_=An(Hi,9,0),ew=An(Hi,9,1),tw=An(ko,5,0),nw=An(ko,5,1),Zc=function(s){for(var e=s[0],t=1;t<s.length;++t)s[t]>e&&(e=s[t]);return e},bn=function(s,e,t){var n=e/8|0;return(s[n]|s[n+1]<<8)>>(e&7)&t},Kc=function(s,e){var t=e/8|0;return(s[t]|s[t+1]<<8|s[t+2]<<16)>>(e&7)},Rl=function(s){return(s/8|0)+(s&7&&1)},Cn=function(s,e,t){(e==null||e<0)&&(e=0),(t==null||t>s.length)&&(t=s.length);var n=new(s instanceof Ht?Ht:s instanceof ki?ki:$e)(t-e);return n.set(s.subarray(e,t)),n},Ll=function(s,e,t){var n=s.length;if(!n||t&&!t.l&&n<5)return e||new $e(0);var i=!e||t,r=!t||t.i;t||(t={}),e||(e=new $e(n*3));var o=function(Q){var Pe=e.length;if(Q>Pe){var Ae=new $e(Math.max(Pe*2,Q));Ae.set(e),e=Ae}},a=t.f||0,l=t.p||0,c=t.b||0,u=t.l,h=t.d,f=t.m,d=t.n,p=n*8;do{if(!u){t.f=a=bn(s,l,1);var g=bn(s,l+1,3);if(l+=3,g)if(g==1)u=ew,h=nw,f=9,d=5;else if(g==2){var x=bn(s,l,31)+257,_=bn(s,l+10,15)+4,b=x+bn(s,l+5,31)+1;l+=14;for(var S=new $e(b),E=new $e(19),w=0;w<_;++w)E[il[w]]=bn(s,l+w*3,7);l+=_*3;for(var A=Zc(E),L=(1<<A)-1,N=An(E,A,1),w=0;w<b;){var k=N[bn(s,l,L)];l+=k&15;var m=k>>>4;if(m<16)S[w++]=m;else{var O=0,I=0;for(m==16?(I=3+bn(s,l,3),l+=2,O=S[w-1]):m==17?(I=3+bn(s,l,7),l+=3):m==18&&(I=11+bn(s,l,127),l+=7);I--;)S[w++]=O}}var U=S.subarray(0,x),D=S.subarray(x);f=Zc(U),d=Zc(D),u=An(U,f,1),h=An(D,d,1)}else throw"invalid block type";else{var m=Rl(l)+4,v=s[m-4]|s[m-3]<<8,y=m+v;if(y>n){if(r)throw"unexpected EOF";break}i&&o(c+v),e.set(s.subarray(m,y),c),t.b=c+=v,t.p=l=y*8;continue}if(l>p){if(r)throw"unexpected EOF";break}}i&&o(c+131072);for(var j=(1<<f)-1,G=(1<<d)-1,V=l;;V=l){var O=u[Kc(s,l)&j],Y=O>>>4;if(l+=O&15,l>p){if(r)throw"unexpected EOF";break}if(!O)throw"invalid length/literal";if(Y<256)e[c++]=Y;else if(Y==256){V=l,u=null;break}else{var te=Y-254;if(Y>264){var w=Y-257,X=ea[w];te=bn(s,l,(1<<X)-1)+Wp[w],l+=X}var ue=h[Kc(s,l)&G],me=ue>>>4;if(!ue)throw"invalid distance";l+=ue&15;var D=J_[me];if(me>3){var X=ta[me];D+=Kc(s,l)&(1<<X)-1,l+=X}if(l>p){if(r)throw"unexpected EOF";break}i&&o(c+131072);for(var ge=c+te;c<ge;c+=4)e[c]=e[c-D],e[c+1]=e[c+1-D],e[c+2]=e[c+2-D],e[c+3]=e[c+3-D];c=ge}}t.l=u,t.p=V,t.b=c,u&&(a=1,t.m=f,t.d=h,t.n=d)}while(!a);return c==e.length?e:Cn(e,0,c)},ti=function(s,e,t){t<<=e&7;var n=e/8|0;s[n]|=t,s[n+1]|=t>>>8},to=function(s,e,t){t<<=e&7;var n=e/8|0;s[n]|=t,s[n+1]|=t>>>8,s[n+2]|=t>>>16},Jc=function(s,e){for(var t=[],n=0;n<s.length;++n)s[n]&&t.push({s:n,f:s[n]});var i=t.length,r=t.slice();if(!i)return[Ii,0];if(i==1){var o=new $e(t[0].s+1);return o[t[0].s]=1,[o,1]}t.sort(function(b,S){return b.f-S.f}),t.push({s:-1,f:25001});var a=t[0],l=t[1],c=0,u=1,h=2;for(t[0]={s:-1,f:a.f+l.f,l:a,r:l};u!=i-1;)a=t[t[c].f<t[h].f?c++:h++],l=t[c!=u&&t[c].f<t[h].f?c++:h++],t[u++]={s:-1,f:a.f+l.f,l:a,r:l};for(var f=r[0].s,n=1;n<i;++n)r[n].s>f&&(f=r[n].s);var d=new Ht(f+1),p=vu(t[u-1],d,0);if(p>e){var n=0,g=0,m=p-e,v=1<<m;for(r.sort(function(S,E){return d[E.s]-d[S.s]||S.f-E.f});n<i;++n){var y=r[n].s;if(d[y]>e)g+=v-(1<<p-d[y]),d[y]=e;else break}for(g>>>=m;g>0;){var x=r[n].s;d[x]<e?g-=1<<e-d[x]++-1:++n}for(;n>=0&&g;--n){var _=r[n].s;d[_]==e&&(--d[_],++g)}p=e}return[new $e(d),p]},vu=function(s,e,t){return s.s==-1?Math.max(vu(s.l,e,t+1),vu(s.r,e,t+1)):e[s.s]=t},Md=function(s){for(var e=s.length;e&&!s[--e];);for(var t=new Ht(++e),n=0,i=s[0],r=1,o=function(l){t[n++]=l},a=1;a<=e;++a)if(s[a]==i&&a!=e)++r;else{if(!i&&r>2){for(;r>138;r-=138)o(32754);r>2&&(o(r>10?r-11<<5|28690:r-3<<5|12305),r=0)}else if(r>3){for(o(i),--r;r>6;r-=6)o(8304);r>2&&(o(r-3<<5|8208),r=0)}for(;r--;)o(i);r=1,i=s[a]}return[t.subarray(0,n),e]},no=function(s,e){for(var t=0,n=0;n<e.length;++n)t+=s[n]*e[n];return t},Da=function(s,e,t){var n=t.length,i=Rl(e+2);s[i]=n&255,s[i+1]=n>>>8,s[i+2]=s[i]^255,s[i+3]=s[i+1]^255;for(var r=0;r<n;++r)s[i+r+4]=t[r];return(i+4+n)*8},Sd=function(s,e,t,n,i,r,o,a,l,c,u){ti(e,u++,t),++i[256];for(var h=Jc(i,15),f=h[0],d=h[1],p=Jc(r,15),g=p[0],m=p[1],v=Md(f),y=v[0],x=v[1],_=Md(g),b=_[0],S=_[1],E=new Ht(19),w=0;w<y.length;++w)E[y[w]&31]++;for(var w=0;w<b.length;++w)E[b[w]&31]++;for(var A=Jc(E,7),L=A[0],N=A[1],k=19;k>4&&!L[il[k-1]];--k);var O=c+5<<3,I=no(i,Hi)+no(r,ko)+o,U=no(i,f)+no(r,g)+o+14+3*k+no(E,L)+(2*E[16]+3*E[17]+7*E[18]);if(O<=I&&O<=U)return Da(e,u,s.subarray(l,l+c));var D,j,G,V;if(ti(e,u,1+(U<I)),u+=2,U<I){D=An(f,d,0),j=f,G=An(g,m,0),V=g;var Y=An(L,N,0);ti(e,u,x-257),ti(e,u+5,S-1),ti(e,u+10,k-4),u+=14;for(var w=0;w<k;++w)ti(e,u+3*w,L[il[w]]);u+=3*k;for(var te=[y,b],X=0;X<2;++X)for(var ue=te[X],w=0;w<ue.length;++w){var me=ue[w]&31;ti(e,u,Y[me]),u+=L[me],me>15&&(ti(e,u,ue[w]>>>5&127),u+=ue[w]>>>12)}}else D=Q_,j=Hi,G=tw,V=ko;for(var w=0;w<a;++w)if(n[w]>255){var me=n[w]>>>18&31;to(e,u,D[me+257]),u+=j[me+257],me>7&&(ti(e,u,n[w]>>>23&31),u+=ea[me]);var ge=n[w]&31;to(e,u,G[ge]),u+=V[ge],ge>3&&(to(e,u,n[w]>>>5&8191),u+=ta[ge])}else to(e,u,D[n[w]]),u+=j[n[w]];return to(e,u,D[256]),u+j[256]},iw=new ki([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),Ii=new $e(0),sw=function(s,e,t,n,i,r){var o=s.length,a=new $e(n+o+5*(1+Math.ceil(o/7e3))+i),l=a.subarray(n,a.length-i),c=0;if(!e||o<8)for(var u=0;u<=o;u+=65535){var h=u+65535;h<o?c=Da(l,c,s.subarray(u,h)):(l[u]=r,c=Da(l,c,s.subarray(u,o)))}else{for(var f=iw[e-1],d=f>>>13,p=f&8191,g=(1<<t)-1,m=new Ht(32768),v=new Ht(g+1),y=Math.ceil(t/3),x=2*y,_=function(B){return(s[B]^s[B+1]<<y^s[B+2]<<x)&g},b=new ki(25e3),S=new Ht(288),E=new Ht(32),w=0,A=0,u=0,L=0,N=0,k=0;u<o;++u){var O=_(u),I=u&32767,U=v[O];if(m[I]=U,v[O]=I,N<=u){var D=o-u;if((w>7e3||L>24576)&&D>423){c=Sd(s,l,0,b,S,E,A,L,k,u-k,c),L=w=A=0,k=u;for(var j=0;j<286;++j)S[j]=0;for(var j=0;j<30;++j)E[j]=0}var G=2,V=0,Y=p,te=I-U&32767;if(D>2&&O==_(u-te))for(var X=Math.min(d,D)-1,ue=Math.min(32767,u),me=Math.min(258,D);te<=ue&&--Y&&I!=U;){if(s[u+G]==s[u+G-te]){for(var ge=0;ge<me&&s[u+ge]==s[u+ge-te];++ge);if(ge>G){if(G=ge,V=te,ge>X)break;for(var Q=Math.min(te,ge-2),Pe=0,j=0;j<Q;++j){var Ae=u-te+j+32768&32767,Be=m[Ae],pe=Ae-Be+32768&32767;pe>Pe&&(Pe=pe,U=Ae)}}}I=U,U=m[I],te+=I-U+32768&32767}if(V){b[L++]=268435456|yu[G]<<18|bd[V];var De=yu[G]&31,re=bd[V]&31;A+=ea[De]+ta[re],++S[257+De],++E[re],N=u+G,++w}else b[L++]=s[u],++S[s[u]]}}c=Sd(s,l,r,b,S,E,A,L,k,u-k,c),!r&&c&7&&(c=Da(l,c+1,Ii))}return Cn(a,0,n+Rl(c)+i)},rw=function(){for(var s=new ki(256),e=0;e<256;++e){for(var t=e,n=9;--n;)t=(t&1&&3988292384)^t>>>1;s[e]=t}return s}(),na=function(){var s=-1;return{p:function(e){for(var t=s,n=0;n<e.length;++n)t=rw[t&255^e[n]]^t>>>8;s=t},d:function(){return~s}}},qp=function(){var s=1,e=0;return{p:function(t){for(var n=s,i=e,r=t.length,o=0;o!=r;){for(var a=Math.min(o+2655,r);o<a;++o)i+=n+=t[o];n=(n&65535)+15*(n>>16),i=(i&65535)+15*(i>>16)}s=n,e=i},d:function(){return s%=65521,e%=65521,(s&255)<<24|s>>>8<<16|(e&255)<<8|e>>>8}}},Cr=function(s,e,t,n,i){return sw(s,e.level==null?6:e.level,e.mem==null?Math.ceil(Math.max(8,Math.min(13,Math.log(s.length)))*1.5):12+e.mem,t,n,!i)},Pl=function(s,e){var t={};for(var n in s)t[n]=s[n];for(var n in e)t[n]=e[n];return t},Y0=function(s,e,t){for(var n=s(),i=s.toString(),r=i.slice(i.indexOf("[")+1,i.lastIndexOf("]")).replace(/ /g,"").split(","),o=0;o<n.length;++o){var a=n[o],l=r[o];if(typeof a=="function"){e+=";"+l+"=";var c=a.toString();if(a.prototype)if(c.indexOf("[native code]")!=-1){var u=c.indexOf(" ",8)+1;e+=c.slice(u,c.indexOf("(",u))}else{e+=c;for(var h in a.prototype)e+=";"+l+".prototype."+h+"="+a.prototype[h].toString()}else e+=c}else t[l]=a}return[e,t]},Oc=[],gD=function(s){var e=[];for(var t in s)(s[t]instanceof $e||s[t]instanceof Ht||s[t]instanceof ki)&&e.push((s[t]=new s[t].constructor(s[t])).buffer);return e},ow=function(s,e,t,n){var i;if(!Oc[t]){for(var r="",o={},a=s.length-1,l=0;l<a;++l)i=Y0(s[l],r,o),r=i[0],o=i[1];Oc[t]=Y0(s[a],r,o)}var c=Pl({},Oc[t][1]);return mD(Oc[t][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+e.toString()+"}",t,c,gD(c),n)},ia=function(){return[$e,Ht,ki,ea,ta,il,Wp,J_,ew,nw,sl,An,Zc,bn,Kc,Rl,Cn,Ll,aa,Rs,jp]},sa=function(){return[$e,Ht,ki,ea,ta,il,yu,bd,Q_,Hi,tw,ko,sl,iw,Ii,An,ti,to,Jc,vu,Md,no,Da,Sd,Rl,Cn,sw,Cr,Il,Rs]},aw=function(){return[Xp,Yp,st,na,rw]},lw=function(){return[$p,hw]},cw=function(){return[Zp,st,qp]},uw=function(){return[fw]},Rs=function(s){return postMessage(s,[s.buffer])},jp=function(s){return s&&s.size&&new $e(s.size)},ra=function(s,e,t,n,i,r){var o=ow(t,n,i,function(a,l){o.terminate(),r(a,l)});return o.postMessage([s,e],e.consume?[s.buffer]:[]),function(){o.terminate()}},Ln=function(s){return s.ondata=function(e,t){return postMessage([e,t],[e.buffer])},function(e){return s.push(e.data[0],e.data[1])}},oa=function(s,e,t,n,i){var r,o=ow(s,n,i,function(a,l){a?(o.terminate(),e.ondata.call(e,a)):(l[1]&&o.terminate(),e.ondata.call(e,a,l[0],l[1]))});o.postMessage(t),e.push=function(a,l){if(r)throw"stream finished";if(!e.ondata)throw"no stream handler";o.postMessage([a,r=l],[a.buffer])},e.terminate=function(){o.terminate()}},Qt=function(s,e){return s[e]|s[e+1]<<8},Tt=function(s,e){return(s[e]|s[e+1]<<8|s[e+2]<<16|s[e+3]<<24)>>>0},df=function(s,e){return Tt(s,e)+Tt(s,e+4)*4294967296},st=function(s,e,t){for(;t;++e)s[e]=t,t>>>=8},Xp=function(s,e){var t=e.filename;if(s[0]=31,s[1]=139,s[2]=8,s[8]=e.level<2?4:e.level==9?2:0,s[9]=3,e.mtime!=0&&st(s,4,Math.floor(new Date(e.mtime||Date.now())/1e3)),t){s[3]=8;for(var n=0;n<=t.length;++n)s[n+10]=t.charCodeAt(n)}},$p=function(s){if(s[0]!=31||s[1]!=139||s[2]!=8)throw"invalid gzip data";var e=s[3],t=10;e&4&&(t+=s[10]|(s[11]<<8)+2);for(var n=(e>>3&1)+(e>>4&1);n>0;n-=!s[t++]);return t+(e&2)},hw=function(s){var e=s.length;return(s[e-4]|s[e-3]<<8|s[e-2]<<16|s[e-1]<<24)>>>0},Yp=function(s){return 10+(s.filename&&s.filename.length+1||0)},Zp=function(s,e){var t=e.level,n=t==0?0:t<6?1:t==9?3:2;s[0]=120,s[1]=n<<6|(n?32-2*n:1)},fw=function(s){if((s[0]&15)!=8||s[0]>>>4>7||(s[0]<<8|s[1])%31)throw"invalid zlib data";if(s[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function Kp(s,e){return!e&&typeof s=="function"&&(e=s,s={}),this.ondata=e,s}var mi=function(){function s(e,t){!t&&typeof e=="function"&&(t=e,e={}),this.ondata=t,this.o=e||{}}return s.prototype.p=function(e,t){this.ondata(Cr(e,this.o,0,0,!t),t)},s.prototype.push=function(e,t){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";this.d=t,this.p(e,t||!1)},s}(),dw=function(){function s(e,t){oa([sa,function(){return[Ln,mi]}],this,Kp.call(this,e,t),function(n){var i=new mi(n.data);onmessage=Ln(i)},6)}return s}();function pw(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return ra(s,e,[sa],function(n){return Rs(Il(n.data[0],n.data[1]))},0,t)}function Il(s,e){return Cr(s,e||{},0,0)}var cn=function(){function s(e){this.s={},this.p=new $e(0),this.ondata=e}return s.prototype.e=function(e){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";var t=this.p.length,n=new $e(t+e.length);n.set(this.p),n.set(e,t),this.p=n},s.prototype.c=function(e){this.d=this.s.i=e||!1;var t=this.s.b,n=Ll(this.p,this.o,this.s);this.ondata(Cn(n,t,this.s.b),this.d),this.o=Cn(n,this.s.b-32768),this.s.b=this.o.length,this.p=Cn(this.p,this.s.p/8|0),this.s.p&=7},s.prototype.push=function(e,t){this.e(e),this.c(t)},s}(),Jp=function(){function s(e){this.ondata=e,oa([ia,function(){return[Ln,cn]}],this,0,function(){var t=new cn;onmessage=Ln(t)},7)}return s}();function Qp(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return ra(s,e,[ia],function(n){return Rs(aa(n.data[0],jp(n.data[1])))},1,t)}function aa(s,e){return Ll(s,e)}var xu=function(){function s(e,t){this.c=na(),this.l=0,this.v=1,mi.call(this,e,t)}return s.prototype.push=function(e,t){mi.prototype.push.call(this,e,t)},s.prototype.p=function(e,t){this.c.p(e),this.l+=e.length;var n=Cr(e,this.o,this.v&&Yp(this.o),t&&8,!t);this.v&&(Xp(n,this.o),this.v=0),t&&(st(n,n.length-8,this.c.d()),st(n,n.length-4,this.l)),this.ondata(n,t)},s}(),Z0=function(){function s(e,t){oa([sa,aw,function(){return[Ln,mi,xu]}],this,Kp.call(this,e,t),function(n){var i=new xu(n.data);onmessage=Ln(i)},8)}return s}();function K0(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return ra(s,e,[sa,aw,function(){return[_u]}],function(n){return Rs(_u(n.data[0],n.data[1]))},2,t)}function _u(s,e){e||(e={});var t=na(),n=s.length;t.p(s);var i=Cr(s,e,Yp(e),8),r=i.length;return Xp(i,e),st(i,r-8,t.d()),st(i,r-4,n),i}var wu=function(){function s(e){this.v=1,cn.call(this,e)}return s.prototype.push=function(e,t){if(cn.prototype.e.call(this,e),this.v){var n=this.p.length>3?$p(this.p):4;if(n>=this.p.length&&!t)return;this.p=this.p.subarray(n),this.v=0}if(t){if(this.p.length<8)throw"invalid gzip stream";this.p=this.p.subarray(0,-8)}cn.prototype.c.call(this,t)},s}(),mw=function(){function s(e){this.ondata=e,oa([ia,lw,function(){return[Ln,cn,wu]}],this,0,function(){var t=new wu;onmessage=Ln(t)},9)}return s}();function gw(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return ra(s,e,[ia,lw,function(){return[bu]}],function(n){return Rs(bu(n.data[0]))},3,t)}function bu(s,e){return Ll(s.subarray($p(s),-8),e||new $e(hw(s)))}var Ed=function(){function s(e,t){this.c=qp(),this.v=1,mi.call(this,e,t)}return s.prototype.push=function(e,t){mi.prototype.push.call(this,e,t)},s.prototype.p=function(e,t){this.c.p(e);var n=Cr(e,this.o,this.v&&2,t&&4,!t);this.v&&(Zp(n,this.o),this.v=0),t&&st(n,n.length-4,this.c.d()),this.ondata(n,t)},s}(),yD=function(){function s(e,t){oa([sa,cw,function(){return[Ln,mi,Ed]}],this,Kp.call(this,e,t),function(n){var i=new Ed(n.data);onmessage=Ln(i)},10)}return s}();function vD(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return ra(s,e,[sa,cw,function(){return[Td]}],function(n){return Rs(Td(n.data[0],n.data[1]))},4,t)}function Td(s,e){e||(e={});var t=qp();t.p(s);var n=Cr(s,e,2,4);return Zp(n,e),st(n,n.length-4,t.d()),n}var Mu=function(){function s(e){this.v=1,cn.call(this,e)}return s.prototype.push=function(e,t){if(cn.prototype.e.call(this,e),this.v){if(this.p.length<2&&!t)return;this.p=this.p.subarray(2),this.v=0}if(t){if(this.p.length<4)throw"invalid zlib stream";this.p=this.p.subarray(0,-4)}cn.prototype.c.call(this,t)},s}(),yw=function(){function s(e){this.ondata=e,oa([ia,uw,function(){return[Ln,cn,Mu]}],this,0,function(){var t=new Mu;onmessage=Ln(t)},11)}return s}();function vw(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return ra(s,e,[ia,uw,function(){return[rl]}],function(n){return Rs(rl(n.data[0],jp(n.data[1])))},5,t)}function rl(s,e){return Ll((fw(s),s.subarray(2,-4)),e)}var xw=function(){function s(e){this.G=wu,this.I=cn,this.Z=Mu,this.ondata=e}return s.prototype.push=function(e,t){if(!this.ondata)throw"no stream handler";if(this.s)this.s.push(e,t);else{if(this.p&&this.p.length){var n=new $e(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length)}else this.p=e;if(this.p.length>2){var i=this,r=function(){i.ondata.apply(i,arguments)};this.s=this.p[0]==31&&this.p[1]==139&&this.p[2]==8?new this.G(r):(this.p[0]&15)!=8||this.p[0]>>4>7||(this.p[0]<<8|this.p[1])%31?new this.I(r):new this.Z(r),this.s.push(this.p,t),this.p=null}}},s}(),xD=function(){function s(e){this.G=mw,this.I=Jp,this.Z=yw,this.ondata=e}return s.prototype.push=function(e,t){xw.prototype.push.call(this,e,t)},s}();function _D(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return s[0]==31&&s[1]==139&&s[2]==8?gw(s,e,t):(s[0]&15)!=8||s[0]>>4>7||(s[0]<<8|s[1])%31?Qp(s,e,t):vw(s,e,t)}function wD(s,e){return s[0]==31&&s[1]==139&&s[2]==8?bu(s,e):(s[0]&15)!=8||s[0]>>4>7||(s[0]<<8|s[1])%31?aa(s,e):rl(s,e)}var em=function(s,e,t,n){for(var i in s){var r=s[i],o=e+i;r instanceof $e?t[o]=[r,n]:Array.isArray(r)?t[o]=[r[0],Pl(n,r[1])]:em(r,o+"/",t,n)}},J0=typeof TextEncoder!="undefined"&&new TextEncoder,Ad=typeof TextDecoder!="undefined"&&new TextDecoder,_w=0;try{Ad.decode(Ii,{stream:!0}),_w=1}catch{}var ww=function(s){for(var e="",t=0;;){var n=s[t++],i=(n>127)+(n>223)+(n>239);if(t+i>s.length)return[e,Cn(s,t-1)];i?i==3?(n=((n&15)<<18|(s[t++]&63)<<12|(s[t++]&63)<<6|s[t++]&63)-65536,e+=String.fromCharCode(55296|n>>10,56320|n&1023)):i&1?e+=String.fromCharCode((n&31)<<6|s[t++]&63):e+=String.fromCharCode((n&15)<<12|(s[t++]&63)<<6|s[t++]&63):e+=String.fromCharCode(n)}},bD=function(){function s(e){this.ondata=e,_w?this.t=new TextDecoder:this.p=Ii}return s.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(t=!!t,this.t){if(this.ondata(this.t.decode(e,{stream:!0}),t),t){if(this.t.decode().length)throw"invalid utf-8 data";this.t=null}return}if(!this.p)throw"stream finished";var n=new $e(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length);var i=ww(n),r=i[0],o=i[1];if(t){if(o.length)throw"invalid utf-8 data";this.p=null}else this.p=o;this.ondata(r,t)},s}(),MD=function(){function s(e){this.ondata=e}return s.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(this.d)throw"stream finished";this.ondata(Ss(e),this.d=t||!1)},s}();function Ss(s,e){if(e){for(var t=new $e(s.length),n=0;n<s.length;++n)t[n]=s.charCodeAt(n);return t}if(J0)return J0.encode(s);for(var i=s.length,r=new $e(s.length+(s.length>>1)),o=0,a=function(u){r[o++]=u},n=0;n<i;++n){if(o+5>r.length){var l=new $e(o+8+(i-n<<1));l.set(r),r=l}var c=s.charCodeAt(n);c<128||e?a(c):c<2048?(a(192|c>>6),a(128|c&63)):c>55295&&c<57344?(c=65536+(c&1023<<10)|s.charCodeAt(++n)&1023,a(240|c>>18),a(128|c>>12&63),a(128|c>>6&63),a(128|c&63)):(a(224|c>>12),a(128|c>>6&63),a(128|c&63))}return Cn(r,0,o)}function tm(s,e){if(e){for(var t="",n=0;n<s.length;n+=16384)t+=String.fromCharCode.apply(null,s.subarray(n,n+16384));return t}else{if(Ad)return Ad.decode(s);var i=ww(s),r=i[0],o=i[1];if(o.length)throw"invalid utf-8 data";return r}}var bw=function(s){return s==1?3:s<6?2:s==9?1:0},Mw=function(s,e){return e+30+Qt(s,e+26)+Qt(s,e+28)},Sw=function(s,e,t){var n=Qt(s,e+28),i=tm(s.subarray(e+46,e+46+n),!(Qt(s,e+8)&2048)),r=e+46+n,o=Tt(s,e+20),a=t&&o==4294967295?Ew(s,r):[o,Tt(s,e+24),Tt(s,e+42)],l=a[0],c=a[1],u=a[2];return[Qt(s,e+10),l,c,i,r+Qt(s,e+30)+Qt(s,e+32),u]},Ew=function(s,e){for(;Qt(s,e)!=1;e+=4+Qt(s,e+2));return[df(s,e+12),df(s,e+4),df(s,e+20)]},ps=function(s){var e=0;if(s)for(var t in s){var n=s[t].length;if(n>65535)throw"extra field too long";e+=n+4}return e},Ho=function(s,e,t,n,i,r,o,a){var l=n.length,c=t.extra,u=a&&a.length,h=ps(c);st(s,e,o!=null?33639248:67324752),e+=4,o!=null&&(s[e++]=20,s[e++]=t.os),s[e]=20,e+=2,s[e++]=t.flag<<1|(r==null&&8),s[e++]=i&&8,s[e++]=t.compression&255,s[e++]=t.compression>>8;var f=new Date(t.mtime==null?Date.now():t.mtime),d=f.getFullYear()-1980;if(d<0||d>119)throw"date not in range 1980-2099";if(st(s,e,d<<25|f.getMonth()+1<<21|f.getDate()<<16|f.getHours()<<11|f.getMinutes()<<5|f.getSeconds()>>>1),e+=4,r!=null&&(st(s,e,t.crc),st(s,e+4,r),st(s,e+8,t.size)),st(s,e+12,l),st(s,e+14,h),e+=16,o!=null&&(st(s,e,u),st(s,e+6,t.attrs),st(s,e+10,o),e+=14),s.set(n,e),e+=l,h)for(var p in c){var g=c[p],m=g.length;st(s,e,+p),st(s,e+2,m),s.set(g,e+4),e+=4+m}return u&&(s.set(a,e),e+=u),e},nm=function(s,e,t,n,i){st(s,e,101010256),st(s,e+8,t),st(s,e+10,t),st(s,e+12,n),st(s,e+16,i)},ol=function(){function s(e){this.filename=e,this.c=na(),this.size=0,this.compression=0}return s.prototype.process=function(e,t){this.ondata(null,e,t)},s.prototype.push=function(e,t){if(!this.ondata)throw"no callback - add to ZIP archive before pushing";this.c.p(e),this.size+=e.length,t&&(this.crc=this.c.d()),this.process(e,t||!1)},s}(),SD=function(){function s(e,t){var n=this;t||(t={}),ol.call(this,e),this.d=new mi(t,function(i,r){n.ondata(null,i,r)}),this.compression=8,this.flag=bw(t.level)}return s.prototype.process=function(e,t){try{this.d.push(e,t)}catch(n){this.ondata(n,null,t)}},s.prototype.push=function(e,t){ol.prototype.push.call(this,e,t)},s}(),ED=function(){function s(e,t){var n=this;t||(t={}),ol.call(this,e),this.d=new dw(t,function(i,r,o){n.ondata(i,r,o)}),this.compression=8,this.flag=bw(t.level),this.terminate=this.d.terminate}return s.prototype.process=function(e,t){this.d.push(e,t)},s.prototype.push=function(e,t){ol.prototype.push.call(this,e,t)},s}(),TD=function(){function s(e){this.ondata=e,this.u=[],this.d=1}return s.prototype.add=function(e){var t=this;if(this.d&2)throw"stream finished";var n=Ss(e.filename),i=n.length,r=e.comment,o=r&&Ss(r),a=i!=e.filename.length||o&&r.length!=o.length,l=i+ps(e.extra)+30;if(i>65535)throw"filename too long";var c=new $e(l);Ho(c,0,e,n,a);var u=[c],h=function(){for(var m=0,v=u;m<v.length;m++){var y=v[m];t.ondata(null,y,!1)}u=[]},f=this.d;this.d=0;var d=this.u.length,p=Pl(e,{f:n,u:a,o,t:function(){e.terminate&&e.terminate()},r:function(){if(h(),f){var m=t.u[d+1];m?m.r():t.d=1}f=1}}),g=0;e.ondata=function(m,v,y){if(m)t.ondata(m,v,y),t.terminate();else if(g+=v.length,u.push(v),y){var x=new $e(16);st(x,0,134695760),st(x,4,e.crc),st(x,8,g),st(x,12,e.size),u.push(x),p.c=g,p.b=l+g+16,p.crc=e.crc,p.size=e.size,f&&p.r(),f=1}else f&&h()},this.u.push(p)},s.prototype.end=function(){var e=this;if(this.d&2)throw this.d&1?"stream finishing":"stream finished";this.d?this.e():this.u.push({r:function(){!(e.d&1)||(e.u.splice(-1,1),e.e())},t:function(){}}),this.d=3},s.prototype.e=function(){for(var e=0,t=0,n=0,i=0,r=this.u;i<r.length;i++){var o=r[i];n+=46+o.f.length+ps(o.extra)+(o.o?o.o.length:0)}for(var a=new $e(n+22),l=0,c=this.u;l<c.length;l++){var o=c[l];Ho(a,e,o,o.f,o.u,o.c,t,o.o),e+=46+o.f.length+ps(o.extra)+(o.o?o.o.length:0),t+=o.b}nm(a,e,this.u.length,n,t),this.ondata(null,a,!0),this.d=2},s.prototype.terminate=function(){for(var e=0,t=this.u;e<t.length;e++){var n=t[e];n.t()}this.d=2},s}();function AD(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";var n={};em(s,"",n,e);var i=Object.keys(n),r=i.length,o=0,a=0,l=r,c=new Array(r),u=[],h=function(){for(var g=0;g<u.length;++g)u[g]()},f=function(){var g=new $e(a+22),m=o,v=a-o;a=0;for(var y=0;y<l;++y){var x=c[y];try{var _=x.c.length;Ho(g,a,x,x.f,x.u,_);var b=30+x.f.length+ps(x.extra),S=a+b;g.set(x.c,S),Ho(g,o,x,x.f,x.u,_,a,x.m),o+=16+b+(x.m?x.m.length:0),a=S+_}catch(E){return t(E,null)}}nm(g,o,c.length,v,m),t(null,g)};r||f();for(var d=function(g){var m=i[g],v=n[m],y=v[0],x=v[1],_=na(),b=y.length;_.p(y);var S=Ss(m),E=S.length,w=x.comment,A=w&&Ss(w),L=A&&A.length,N=ps(x.extra),k=x.level==0?0:8,O=function(I,U){if(I)h(),t(I,null);else{var D=U.length;c[g]=Pl(x,{size:b,crc:_.d(),c:U,f:S,m:A,u:E!=m.length||A&&w.length!=L,compression:k}),o+=30+E+N+D,a+=76+2*(E+N)+(L||0)+D,--r||f()}};if(E>65535&&O("filename too long",null),!k)O(null,y);else if(b<16e4)try{O(null,Il(y,x))}catch(I){O(I,null)}else u.push(pw(y,x,O))},p=0;p<l;++p)d(p);return h}function CD(s,e){e||(e={});var t={},n=[];em(s,"",t,e);var i=0,r=0;for(var o in t){var a=t[o],l=a[0],c=a[1],u=c.level==0?0:8,h=Ss(o),f=h.length,d=c.comment,p=d&&Ss(d),g=p&&p.length,m=ps(c.extra);if(f>65535)throw"filename too long";var v=u?Il(l,c):l,y=v.length,x=na();x.p(l),n.push(Pl(c,{size:l.length,crc:x.d(),c:v,f:h,m:p,u:f!=o.length||p&&d.length!=g,o:i,compression:u})),i+=30+f+m+y,r+=76+2*(f+m)+(g||0)+y}for(var _=new $e(r+22),b=i,S=r-i,E=0;E<n.length;++E){var h=n[E];Ho(_,h.o,h,h.f,h.u,h.c.length);var w=30+h.f.length+ps(h.extra);_.set(h.c,h.o+w),Ho(_,i,h,h.f,h.u,h.c.length,h.o,h.m),i+=16+w+(h.m?h.m.length:0)}return nm(_,i,n.length,S,b),_}var Tw=function(){function s(){}return s.prototype.push=function(e,t){this.ondata(null,e,t)},s.compression=0,s}(),RD=function(){function s(){var e=this;this.i=new cn(function(t,n){e.ondata(null,t,n)})}return s.prototype.push=function(e,t){try{this.i.push(e,t)}catch(n){this.ondata(n,e,t)}},s.compression=8,s}(),LD=function(){function s(e,t){var n=this;t<32e4?this.i=new cn(function(i,r){n.ondata(null,i,r)}):(this.i=new Jp(function(i,r,o){n.ondata(i,r,o)}),this.terminate=this.i.terminate)}return s.prototype.push=function(e,t){this.i.terminate&&(e=Cn(e,0)),this.i.push(e,t)},s.compression=8,s}(),PD=function(){function s(e){this.onfile=e,this.k=[],this.o={0:Tw},this.p=Ii}return s.prototype.push=function(e,t){var n=this;if(!this.onfile)throw"no callback";if(!this.p)throw"stream finished";if(this.c>0){var i=Math.min(this.c,e.length),r=e.subarray(0,i);if(this.c-=i,this.d?this.d.push(r,!this.c):this.k[0].push(r),e=e.subarray(i),e.length)return this.push(e,t)}else{var o=0,a=0,l=void 0,c=void 0;this.p.length?e.length?(c=new $e(this.p.length+e.length),c.set(this.p),c.set(e,this.p.length)):c=this.p:c=e;for(var u=c.length,h=this.c,f=h&&this.d,d=function(){var v,y=Tt(c,a);if(y==67324752){o=1,l=a,p.d=null,p.c=0;var x=Qt(c,a+6),_=Qt(c,a+8),b=x&2048,S=x&8,E=Qt(c,a+26),w=Qt(c,a+28);if(u>a+30+E+w){var A=[];p.k.unshift(A),o=2;var L=Tt(c,a+18),N=Tt(c,a+22),k=tm(c.subarray(a+30,a+=30+E),!b);L==4294967295?(v=S?[-2]:Ew(c,a),L=v[0],N=v[1]):S&&(L=-1),a+=w,p.c=L;var O,I={name:k,compression:_,start:function(){if(!I.ondata)throw"no callback";if(!L)I.ondata(null,Ii,!0);else{var U=n.o[_];if(!U)throw"unknown compression type "+_;O=L<0?new U(k):new U(k,L,N),O.ondata=function(V,Y,te){I.ondata(V,Y,te)};for(var D=0,j=A;D<j.length;D++){var G=j[D];O.push(G,!1)}n.k[0]==A&&n.c?n.d=O:O.push(Ii,!0)}},terminate:function(){O&&O.terminate&&O.terminate()}};L>=0&&(I.size=L,I.originalSize=N),p.onfile(I)}return"break"}else if(h){if(y==134695760)return l=a+=12+(h==-2&&8),o=3,p.c=0,"break";if(y==33639248)return l=a-=4,o=3,p.c=0,"break"}},p=this;a<u-4;++a){var g=d();if(g==="break")break}if(this.p=Ii,h<0){var m=o?c.subarray(0,l-12-(h==-2&&8)-(Tt(c,l-16)==134695760&&4)):c.subarray(0,a);f?f.push(m,!!o):this.k[+(o==2)].push(m)}if(o&2)return this.push(c.subarray(a),t);this.p=c.subarray(a)}if(t){if(this.c)throw"invalid zip file";this.p=null}},s.prototype.register=function(e){this.o[e.compression]=e},s}();function ID(s,e){if(typeof e!="function")throw"no callback";for(var t=[],n=function(){for(var f=0;f<t.length;++f)t[f]()},i={},r=s.length-22;Tt(s,r)!=101010256;--r)if(!r||s.length-r>65558){e("invalid zip file",null);return}var o=Qt(s,r+8);o||e(null,{});var a=o,l=Tt(s,r+16),c=l==4294967295;if(c){if(r=Tt(s,r-12),Tt(s,r)!=101075792){e("invalid zip file",null);return}a=o=Tt(s,r+32),l=Tt(s,r+48)}for(var u=function(f){var d=Sw(s,l,c),p=d[0],g=d[1],m=d[2],v=d[3],y=d[4],x=d[5],_=Mw(s,x);l=y;var b=function(E,w){E?(n(),e(E,null)):(i[v]=w,--o||e(null,i))};if(!p)b(null,Cn(s,_,_+g));else if(p==8){var S=s.subarray(_,_+g);if(g<32e4)try{b(null,aa(S,new $e(m)))}catch(E){b(E,null)}else t.push(Qp(S,{size:m},b))}else b("unknown compression type "+p,null)},h=0;h<a;++h)u();return n}function FD(s){for(var e={},t=s.length-22;Tt(s,t)!=101010256;--t)if(!t||s.length-t>65558)throw"invalid zip file";var n=Qt(s,t+8);if(!n)return{};var i=Tt(s,t+16),r=i==4294967295;if(r){if(t=Tt(s,t-12),Tt(s,t)!=101075792)throw"invalid zip file";n=Tt(s,t+32),i=Tt(s,t+48)}for(var o=0;o<n;++o){var a=Sw(s,i,r),l=a[0],c=a[1],u=a[2],h=a[3],f=a[4],d=a[5],p=Mw(s,d);if(i=f,!l)e[h]=Cn(s,p,p+c);else if(l==8)e[h]=aa(s.subarray(p,p+c),new $e(u));else throw"unknown compression type "+l}return e}var BD=Object.freeze(Object.defineProperty({__proto__:null,Deflate:mi,AsyncDeflate:dw,deflate:pw,deflateSync:Il,Inflate:cn,AsyncInflate:Jp,inflate:Qp,inflateSync:aa,Gzip:xu,AsyncGzip:Z0,gzip:K0,gzipSync:_u,Gunzip:wu,AsyncGunzip:mw,gunzip:gw,gunzipSync:bu,Zlib:Ed,AsyncZlib:yD,zlib:vD,zlibSync:Td,Unzlib:Mu,AsyncUnzlib:yw,unzlib:vw,unzlibSync:rl,compress:K0,AsyncCompress:Z0,compressSync:_u,Compress:xu,Decompress:xw,AsyncDecompress:xD,decompress:_D,decompressSync:wD,DecodeUTF8:bD,EncodeUTF8:MD,strToU8:Ss,strFromU8:tm,ZipPassThrough:ol,ZipDeflate:SD,AsyncZipDeflate:ED,Zip:TD,zip:AD,zipSync:CD,UnzipPassThrough:Tw,UnzipInflate:RD,AsyncUnzipInflate:LD,Unzip:PD,unzip:ID,unzipSync:FD},Symbol.toStringTag,{value:"Module"}));function Aw(s,e,t){const n=t.length-s-1;if(e>=t[n])return n-1;if(e<=t[s])return s;let i=s,r=n,o=Math.floor((i+r)/2);for(;e<t[o]||e>=t[o+1];)e<t[o]?r=o:i=o,o=Math.floor((i+r)/2);return o}function DD(s,e,t,n){const i=[],r=[],o=[];i[0]=1;for(let a=1;a<=t;++a){r[a]=e-n[s+1-a],o[a]=n[s+a]-e;let l=0;for(let c=0;c<a;++c){const u=o[c+1],h=r[a-c],f=i[c]/(u+h);i[c]=l+u*f,l=h*f}i[a]=l}return i}function zD(s,e,t,n){const i=Aw(s,n,e),r=DD(i,n,s,e),o=new Je(0,0,0,0);for(let a=0;a<=s;++a){const l=t[i-s+a],c=r[a],u=l.w*c;o.x+=l.x*u,o.y+=l.y*u,o.z+=l.z*u,o.w+=l.w*c}return o}function ND(s,e,t,n,i){const r=[];for(let h=0;h<=t;++h)r[h]=0;const o=[];for(let h=0;h<=n;++h)o[h]=r.slice(0);const a=[];for(let h=0;h<=t;++h)a[h]=r.slice(0);a[0][0]=1;const l=r.slice(0),c=r.slice(0);for(let h=1;h<=t;++h){l[h]=e-i[s+1-h],c[h]=i[s+h]-e;let f=0;for(let d=0;d<h;++d){const p=c[d+1],g=l[h-d];a[h][d]=p+g;const m=a[d][h-1]/a[h][d];a[d][h]=f+p*m,f=g*m}a[h][h]=f}for(let h=0;h<=t;++h)o[0][h]=a[h][t];for(let h=0;h<=t;++h){let f=0,d=1;const p=[];for(let g=0;g<=t;++g)p[g]=r.slice(0);p[0][0]=1;for(let g=1;g<=n;++g){let m=0;const v=h-g,y=t-g;h>=g&&(p[d][0]=p[f][0]/a[y+1][v],m=p[d][0]*a[v][y]);const x=v>=-1?1:-v,_=h-1<=y?g-1:t-h;for(let S=x;S<=_;++S)p[d][S]=(p[f][S]-p[f][S-1])/a[y+1][v+S],m+=p[d][S]*a[v+S][y];h<=y&&(p[d][g]=-p[f][g-1]/a[y+1][h],m+=p[d][g]*a[h][y]),o[g][h]=m;const b=f;f=d,d=b}}let u=t;for(let h=1;h<=n;++h){for(let f=0;f<=t;++f)o[h][f]*=u;u*=t-h}return o}function OD(s,e,t,n,i){const r=i<s?i:s,o=[],a=Aw(s,n,e),l=ND(a,n,s,r,e),c=[];for(let u=0;u<t.length;++u){const h=t[u].clone(),f=h.w;h.x*=f,h.y*=f,h.z*=f,c[u]=h}for(let u=0;u<=r;++u){const h=c[a-s].clone().multiplyScalar(l[u][0]);for(let f=1;f<=s;++f)h.add(c[a-s+f].clone().multiplyScalar(l[u][f]));o[u]=h}for(let u=r+1;u<=i+1;++u)o[u]=new Je(0,0,0);return o}function UD(s,e){let t=1;for(let i=2;i<=s;++i)t*=i;let n=1;for(let i=2;i<=e;++i)n*=i;for(let i=2;i<=s-e;++i)n*=i;return t/n}function kD(s){const e=s.length,t=[],n=[];for(let r=0;r<e;++r){const o=s[r];t[r]=new P(o.x,o.y,o.z),n[r]=o.w}const i=[];for(let r=0;r<e;++r){const o=t[r].clone();for(let a=1;a<=r;++a)o.sub(i[r-a].clone().multiplyScalar(UD(r,a)*n[a]));i[r]=o.divideScalar(n[0])}return i}function HD(s,e,t,n,i){const r=OD(s,e,t,n,i);return kD(r)}class Q0 extends hn{constructor(e,t,n,i,r){super(),this.degree=e,this.knots=t,this.controlPoints=[],this.startKnot=i||0,this.endKnot=r||this.knots.length-1;for(let o=0;o<n.length;++o){const a=n[o];this.controlPoints[o]=new Je(a.x,a.y,a.z,a.w)}}getPoint(e,t=new P){const n=t,i=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),r=zD(this.degree,this.knots,this.controlPoints,i);return r.w!==1&&r.divideScalar(r.w),n.set(r.x,r.y,r.z)}getTangent(e,t=new P){const n=t,i=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),r=HD(this.degree,this.knots,this.controlPoints,i,1);return n.copy(r[1]).normalize(),n}}let je,bt,on;class ey extends Yt{constructor(e){super(e)}load(e,t,n,i){const r=this,o=r.path===""?xr.extractUrlBase(e):r.path,a=new Gn(this.manager);a.setPath(r.path),a.setResponseType("arraybuffer"),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(l){try{t(r.parse(l,o))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e,t){if(XD(e))je=new jD().parse(e);else{const i=Pw(e);if(!$D(i))throw new Error("THREE.FBXLoader: Unknown format.");if(ny(i)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+ny(i));je=new qD().parse(i)}const n=new eh(this.manager).setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);return new VD(n,this.manager).parse(je)}}class VD{constructor(e,t){this.textureLoader=e,this.manager=t}parse(){bt=this.parseConnections();const e=this.parseImages(),t=this.parseTextures(e),n=this.parseMaterials(t),i=this.parseDeformers(),r=new GD().parse(i);return this.parseScene(i,r,n),on}parseConnections(){const e=new Map;return"Connections"in je&&je.Connections.connections.forEach(function(n){const i=n[0],r=n[1],o=n[2];e.has(i)||e.set(i,{parents:[],children:[]});const a={ID:r,relationship:o};e.get(i).parents.push(a),e.has(r)||e.set(r,{parents:[],children:[]});const l={ID:i,relationship:o};e.get(r).children.push(l)}),e}parseImages(){const e={},t={};if("Video"in je.Objects){const n=je.Objects.Video;for(const i in n){const r=n[i],o=parseInt(i);if(e[o]=r.RelativeFilename||r.Filename,"Content"in r){const a=r.Content instanceof ArrayBuffer&&r.Content.byteLength>0,l=typeof r.Content=="string"&&r.Content!=="";if(a||l){const c=this.parseImage(n[i]);t[r.RelativeFilename||r.Filename]=c}}}}for(const n in e){const i=e[n];t[i]!==void 0?e[n]=t[i]:e[n]=e[n].split("\\").pop()}return e}parseImage(e){const t=e.Content,n=e.RelativeFilename||e.Filename,i=n.slice(n.lastIndexOf(".")+1).toLowerCase();let r;switch(i){case"bmp":r="image/bmp";break;case"jpg":case"jpeg":r="image/jpeg";break;case"png":r="image/png";break;case"tif":r="image/tiff";break;case"tga":this.manager.getHandler(".tga")===null&&console.warn("FBXLoader: TGA loader not found, skipping ",n),r="image/tga";break;default:console.warn('FBXLoader: Image type "'+i+'" is not supported.');return}if(typeof t=="string")return"data:"+r+";base64,"+t;{const o=new Uint8Array(t);return window.URL.createObjectURL(new Blob([o],{type:r}))}}parseTextures(e){const t=new Map;if("Texture"in je.Objects){const n=je.Objects.Texture;for(const i in n){const r=this.parseTexture(n[i],e);t.set(parseInt(i),r)}}return t}parseTexture(e,t){const n=this.loadTexture(e,t);n.ID=e.id,n.name=e.attrName;const i=e.WrapModeU,r=e.WrapModeV,o=i!==void 0?i.value:0,a=r!==void 0?r.value:0;if(n.wrapS=o===0?hr:qt,n.wrapT=a===0?hr:qt,"Scaling"in e){const l=e.Scaling.value;n.repeat.x=l[0],n.repeat.y=l[1]}if("Translation"in e){const l=e.Translation.value;n.offset.x=l[0],n.offset.y=l[1]}return n}loadTexture(e,t){let n;const i=this.textureLoader.path,r=bt.get(e.id).children;r!==void 0&&r.length>0&&t[r[0].ID]!==void 0&&(n=t[r[0].ID],(n.indexOf("blob:")===0||n.indexOf("data:")===0)&&this.textureLoader.setPath(void 0));let o;const a=e.FileName.slice(-3).toLowerCase();if(a==="tga"){const l=this.manager.getHandler(".tga");l===null?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),o=new _t):(l.setPath(this.textureLoader.path),o=l.load(n))}else a==="psd"?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),o=new _t):o=this.textureLoader.load(n);return this.textureLoader.setPath(i),o}parseMaterials(e){const t=new Map;if("Material"in je.Objects){const n=je.Objects.Material;for(const i in n){const r=this.parseMaterial(n[i],e);r!==null&&t.set(parseInt(i),r)}}return t}parseMaterial(e,t){const n=e.id,i=e.attrName;let r=e.ShadingModel;if(typeof r=="object"&&(r=r.value),!bt.has(n))return null;const o=this.parseParameters(e,t,n);let a;switch(r.toLowerCase()){case"phong":a=new po;break;case"lambert":a=new Ju;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',r),a=new po;break}return a.setValues(o),a.name=i,a}parseParameters(e,t,n){const i={};e.BumpFactor&&(i.bumpScale=e.BumpFactor.value),e.Diffuse?i.color=new Me().fromArray(e.Diffuse.value):e.DiffuseColor&&(e.DiffuseColor.type==="Color"||e.DiffuseColor.type==="ColorRGB")&&(i.color=new Me().fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(i.displacementScale=e.DisplacementFactor.value),e.Emissive?i.emissive=new Me().fromArray(e.Emissive.value):e.EmissiveColor&&(e.EmissiveColor.type==="Color"||e.EmissiveColor.type==="ColorRGB")&&(i.emissive=new Me().fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(i.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(i.opacity=parseFloat(e.Opacity.value)),i.opacity<1&&(i.transparent=!0),e.ReflectionFactor&&(i.reflectivity=e.ReflectionFactor.value),e.Shininess&&(i.shininess=e.Shininess.value),e.Specular?i.specular=new Me().fromArray(e.Specular.value):e.SpecularColor&&e.SpecularColor.type==="Color"&&(i.specular=new Me().fromArray(e.SpecularColor.value));const r=this;return bt.get(n).children.forEach(function(o){const a=o.relationship;switch(a){case"Bump":i.bumpMap=r.getTexture(t,o.ID);break;case"Maya|TEX_ao_map":i.aoMap=r.getTexture(t,o.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":i.map=r.getTexture(t,o.ID),i.map!==void 0&&(i.map.encoding=it);break;case"DisplacementColor":i.displacementMap=r.getTexture(t,o.ID);break;case"EmissiveColor":i.emissiveMap=r.getTexture(t,o.ID),i.emissiveMap!==void 0&&(i.emissiveMap.encoding=it);break;case"NormalMap":case"Maya|TEX_normal_map":i.normalMap=r.getTexture(t,o.ID);break;case"ReflectionColor":i.envMap=r.getTexture(t,o.ID),i.envMap!==void 0&&(i.envMap.mapping=vo,i.envMap.encoding=it);break;case"SpecularColor":i.specularMap=r.getTexture(t,o.ID),i.specularMap!==void 0&&(i.specularMap.encoding=it);break;case"TransparentColor":case"TransparencyFactor":i.alphaMap=r.getTexture(t,o.ID),i.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",a);break}}),i}getTexture(e,t){return"LayeredTexture"in je.Objects&&t in je.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),t=bt.get(t).children[0].ID),e.get(t)}parseDeformers(){const e={},t={};if("Deformer"in je.Objects){const n=je.Objects.Deformer;for(const i in n){const r=n[i],o=bt.get(parseInt(i));if(r.attrType==="Skin"){const a=this.parseSkeleton(o,n);a.ID=i,o.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),a.geometryID=o.parents[0].ID,e[i]=a}else if(r.attrType==="BlendShape"){const a={id:i};a.rawTargets=this.parseMorphTargets(o,n),a.id=i,o.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),t[i]=a}}}return{skeletons:e,morphTargets:t}}parseSkeleton(e,t){const n=[];return e.children.forEach(function(i){const r=t[i.ID];if(r.attrType!=="Cluster")return;const o={ID:i.ID,indices:[],weights:[],transformLink:new we().fromArray(r.TransformLink.a)};"Indexes"in r&&(o.indices=r.Indexes.a,o.weights=r.Weights.a),n.push(o)}),{rawBones:n,bones:[]}}parseMorphTargets(e,t){const n=[];for(let i=0;i<e.children.length;i++){const r=e.children[i],o=t[r.ID],a={name:o.attrName,initialWeight:o.DeformPercent,id:o.id,fullWeights:o.FullWeights.a};if(o.attrType!=="BlendShapeChannel")return;a.geoID=bt.get(parseInt(r.ID)).children.filter(function(l){return l.relationship===void 0})[0].ID,n.push(a)}return n}parseScene(e,t,n){on=new Pi;const i=this.parseModels(e.skeletons,t,n),r=je.Objects.Model,o=this;i.forEach(function(l){const c=r[l.ID];o.setLookAtProperties(l,c),bt.get(l.ID).parents.forEach(function(h){const f=i.get(h.ID);f!==void 0&&f.add(l)}),l.parent===null&&on.add(l)}),this.bindSkeleton(e.skeletons,t,i),this.createAmbientLight(),on.traverse(function(l){if(l.userData.transformData){l.parent&&(l.userData.transformData.parentMatrix=l.parent.matrix,l.userData.transformData.parentMatrixWorld=l.parent.matrixWorld);const c=Rw(l.userData.transformData);l.applyMatrix4(c),l.updateWorldMatrix()}});const a=new WD().parse();on.children.length===1&&on.children[0].isGroup&&(on.children[0].animations=a,on=on.children[0]),on.animations=a}parseModels(e,t,n){const i=new Map,r=je.Objects.Model;for(const o in r){const a=parseInt(o),l=r[o],c=bt.get(a);let u=this.buildSkeleton(c,e,a,l.attrName);if(!u){switch(l.attrType){case"Camera":u=this.createCamera(c);break;case"Light":u=this.createLight(c);break;case"Mesh":u=this.createMesh(c,t,n);break;case"NurbsCurve":u=this.createCurve(c,t);break;case"LimbNode":case"Root":u=new So;break;case"Null":default:u=new Pi;break}u.name=l.attrName?Xe.sanitizeNodeName(l.attrName):"",u.ID=a}this.getTransformData(u,l),i.set(a,u)}return i}buildSkeleton(e,t,n,i){let r=null;return e.parents.forEach(function(o){for(const a in t){const l=t[a];l.rawBones.forEach(function(c,u){if(c.ID===o.ID){const h=r;r=new So,r.matrixWorld.copy(c.transformLink),r.name=i?Xe.sanitizeNodeName(i):"",r.ID=n,l.bones[u]=r,h!==null&&r.add(h)}})}}),r}createCamera(e){let t,n;if(e.children.forEach(function(i){const r=je.Objects.NodeAttribute[i.ID];r!==void 0&&(n=r)}),n===void 0)t=new Ve;else{let i=0;n.CameraProjectionType!==void 0&&n.CameraProjectionType.value===1&&(i=1);let r=1;n.NearPlane!==void 0&&(r=n.NearPlane.value/1e3);let o=1e3;n.FarPlane!==void 0&&(o=n.FarPlane.value/1e3);let a=window.innerWidth,l=window.innerHeight;n.AspectWidth!==void 0&&n.AspectHeight!==void 0&&(a=n.AspectWidth.value,l=n.AspectHeight.value);const c=a/l;let u=45;n.FieldOfView!==void 0&&(u=n.FieldOfView.value);const h=n.FocalLength?n.FocalLength.value:null;switch(i){case 0:t=new Ft(u,c,r,o),h!==null&&t.setFocalLength(h);break;case 1:t=new Yo(-a/2,a/2,l/2,-l/2,r,o);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+i+"."),t=new Ve;break}}return t}createLight(e){let t,n;if(e.children.forEach(function(i){const r=je.Objects.NodeAttribute[i.ID];r!==void 0&&(n=r)}),n===void 0)t=new Ve;else{let i;n.LightType===void 0?i=0:i=n.LightType.value;let r=16777215;n.Color!==void 0&&(r=new Me().fromArray(n.Color.value));let o=n.Intensity===void 0?1:n.Intensity.value/100;n.CastLightOnObject!==void 0&&n.CastLightOnObject.value===0&&(o=0);let a=0;n.FarAttenuationEnd!==void 0&&(n.EnableFarAttenuation!==void 0&&n.EnableFarAttenuation.value===0?a=0:a=n.FarAttenuationEnd.value);const l=1;switch(i){case 0:t=new nl(r,o,a,l);break;case 1:t=new Ml(r,o);break;case 2:let c=Math.PI/3;n.InnerAngle!==void 0&&(c=En.degToRad(n.InnerAngle.value));let u=0;n.OuterAngle!==void 0&&(u=En.degToRad(n.OuterAngle.value),u=Math.max(u,1)),t=new th(r,o,a,c,u,l);break;default:console.warn("THREE.FBXLoader: Unknown light type "+n.LightType.value+", defaulting to a PointLight."),t=new nl(r,o);break}n.CastShadows!==void 0&&n.CastShadows.value===1&&(t.castShadow=!0)}return t}createMesh(e,t,n){let i,r=null,o=null;const a=[];return e.children.forEach(function(l){t.has(l.ID)&&(r=t.get(l.ID)),n.has(l.ID)&&a.push(n.get(l.ID))}),a.length>1?o=a:a.length>0?o=a[0]:(o=new po({color:13421772}),a.push(o)),"color"in r.attributes&&a.forEach(function(l){l.vertexColors=!0}),r.FBX_Deformer?(i=new yl(r,o),i.normalizeSkinWeights()):i=new xt(r,o),i}createCurve(e,t){const n=e.children.reduce(function(r,o){return t.has(o.ID)&&(r=t.get(o.ID)),r},null),i=new Ot({color:3342591,linewidth:1});return new fi(n,i)}getTransformData(e,t){const n={};"InheritType"in t&&(n.inheritType=parseInt(t.InheritType.value)),"RotationOrder"in t?n.eulerOrder=Lw(t.RotationOrder.value):n.eulerOrder="ZYX","Lcl_Translation"in t&&(n.translation=t.Lcl_Translation.value),"PreRotation"in t&&(n.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(n.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(n.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(n.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(n.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(n.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(n.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(n.rotationPivot=t.RotationPivot.value),e.userData.transformData=n}setLookAtProperties(e,t){"LookAtProperty"in t&&bt.get(e.ID).children.forEach(function(i){if(i.relationship==="LookAtProperty"){const r=je.Objects.Model[i.ID];if("Lcl_Translation"in r){const o=r.Lcl_Translation.value;e.target!==void 0?(e.target.position.fromArray(o),on.add(e.target)):e.lookAt(new P().fromArray(o))}}})}bindSkeleton(e,t,n){const i=this.parsePoseNodes();for(const r in e){const o=e[r];bt.get(parseInt(o.ID)).parents.forEach(function(l){if(t.has(l.ID)){const c=l.ID;bt.get(c).parents.forEach(function(h){n.has(h.ID)&&n.get(h.ID).bind(new vl(o.bones),i[h.ID])})}})}}parsePoseNodes(){const e={};if("Pose"in je.Objects){const t=je.Objects.Pose;for(const n in t)if(t[n].attrType==="BindPose"&&t[n].NbPoseNodes>0){const i=t[n].PoseNode;Array.isArray(i)?i.forEach(function(r){e[r.Node]=new we().fromArray(r.Matrix.a)}):e[i.Node]=new we().fromArray(i.Matrix.a)}}return e}createAmbientLight(){if("GlobalSettings"in je&&"AmbientColor"in je.GlobalSettings){const e=je.GlobalSettings.AmbientColor.value,t=e[0],n=e[1],i=e[2];if(t!==0||n!==0||i!==0){const r=new Me(t,n,i);on.add(new Sl(r,1))}}}}class GD{parse(e){const t=new Map;if("Geometry"in je.Objects){const n=je.Objects.Geometry;for(const i in n){const r=bt.get(parseInt(i)),o=this.parseGeometry(r,n[i],e);t.set(parseInt(i),o)}}return t}parseGeometry(e,t,n){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,n);case"NurbsCurve":return this.parseNurbsGeometry(t)}}parseMeshGeometry(e,t,n){const i=n.skeletons,r=[],o=e.parents.map(function(h){return je.Objects.Model[h.ID]});if(o.length===0)return;const a=e.children.reduce(function(h,f){return i[f.ID]!==void 0&&(h=i[f.ID]),h},null);e.children.forEach(function(h){n.morphTargets[h.ID]!==void 0&&r.push(n.morphTargets[h.ID])});const l=o[0],c={};"RotationOrder"in l&&(c.eulerOrder=Lw(l.RotationOrder.value)),"InheritType"in l&&(c.inheritType=parseInt(l.InheritType.value)),"GeometricTranslation"in l&&(c.translation=l.GeometricTranslation.value),"GeometricRotation"in l&&(c.rotation=l.GeometricRotation.value),"GeometricScaling"in l&&(c.scale=l.GeometricScaling.value);const u=Rw(c);return this.genGeometry(t,a,r,u)}genGeometry(e,t,n,i){const r=new ze;e.attrName&&(r.name=e.attrName);const o=this.parseGeoNode(e,t),a=this.genBuffers(o),l=new Le(a.vertex,3);if(l.applyMatrix4(i),r.setAttribute("position",l),a.colors.length>0&&r.setAttribute("color",new Le(a.colors,3)),t&&(r.setAttribute("skinIndex",new hl(a.weightsIndices,4)),r.setAttribute("skinWeight",new Le(a.vertexWeights,4)),r.FBX_Deformer=t),a.normal.length>0){const c=new Bt().getNormalMatrix(i),u=new Le(a.normal,3);u.applyNormalMatrix(c),r.setAttribute("normal",u)}if(a.uvs.forEach(function(c,u){let h="uv"+(u+1).toString();u===0&&(h="uv"),r.setAttribute(h,new Le(a.uvs[u],2))}),o.material&&o.material.mappingType!=="AllSame"){let c=a.materialIndex[0],u=0;if(a.materialIndex.forEach(function(h,f){h!==c&&(r.addGroup(u,f-u,c),c=h,u=f)}),r.groups.length>0){const h=r.groups[r.groups.length-1],f=h.start+h.count;f!==a.materialIndex.length&&r.addGroup(f,a.materialIndex.length-f,c)}r.groups.length===0&&r.addGroup(0,a.materialIndex.length,a.materialIndex[0])}return this.addMorphTargets(r,e,n,i),r}parseGeoNode(e,t){const n={};if(n.vertexPositions=e.Vertices!==void 0?e.Vertices.a:[],n.vertexIndices=e.PolygonVertexIndex!==void 0?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(n.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(n.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(n.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){n.uv=[];let i=0;for(;e.LayerElementUV[i];)e.LayerElementUV[i].UV&&n.uv.push(this.parseUVs(e.LayerElementUV[i])),i++}return n.weightTable={},t!==null&&(n.skeleton=t,t.rawBones.forEach(function(i,r){i.indices.forEach(function(o,a){n.weightTable[o]===void 0&&(n.weightTable[o]=[]),n.weightTable[o].push({id:r,weight:i.weights[a]})})})),n}genBuffers(e){const t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let n=0,i=0,r=!1,o=[],a=[],l=[],c=[],u=[],h=[];const f=this;return e.vertexIndices.forEach(function(d,p){let g,m=!1;d<0&&(d=d^-1,m=!0);let v=[],y=[];if(o.push(d*3,d*3+1,d*3+2),e.color){const x=Uc(p,n,d,e.color);l.push(x[0],x[1],x[2])}if(e.skeleton){if(e.weightTable[d]!==void 0&&e.weightTable[d].forEach(function(x){y.push(x.weight),v.push(x.id)}),y.length>4){r||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),r=!0);const x=[0,0,0,0],_=[0,0,0,0];y.forEach(function(b,S){let E=b,w=v[S];_.forEach(function(A,L,N){if(E>A){N[L]=E,E=A;const k=x[L];x[L]=w,w=k}})}),v=x,y=_}for(;y.length<4;)y.push(0),v.push(0);for(let x=0;x<4;++x)u.push(y[x]),h.push(v[x])}if(e.normal){const x=Uc(p,n,d,e.normal);a.push(x[0],x[1],x[2])}e.material&&e.material.mappingType!=="AllSame"&&(g=Uc(p,n,d,e.material)[0]),e.uv&&e.uv.forEach(function(x,_){const b=Uc(p,n,d,x);c[_]===void 0&&(c[_]=[]),c[_].push(b[0]),c[_].push(b[1])}),i++,m&&(f.genFace(t,e,o,g,a,l,c,u,h,i),n++,i=0,o=[],a=[],l=[],c=[],u=[],h=[])}),t}genFace(e,t,n,i,r,o,a,l,c,u){for(let h=2;h<u;h++)e.vertex.push(t.vertexPositions[n[0]]),e.vertex.push(t.vertexPositions[n[1]]),e.vertex.push(t.vertexPositions[n[2]]),e.vertex.push(t.vertexPositions[n[(h-1)*3]]),e.vertex.push(t.vertexPositions[n[(h-1)*3+1]]),e.vertex.push(t.vertexPositions[n[(h-1)*3+2]]),e.vertex.push(t.vertexPositions[n[h*3]]),e.vertex.push(t.vertexPositions[n[h*3+1]]),e.vertex.push(t.vertexPositions[n[h*3+2]]),t.skeleton&&(e.vertexWeights.push(l[0]),e.vertexWeights.push(l[1]),e.vertexWeights.push(l[2]),e.vertexWeights.push(l[3]),e.vertexWeights.push(l[(h-1)*4]),e.vertexWeights.push(l[(h-1)*4+1]),e.vertexWeights.push(l[(h-1)*4+2]),e.vertexWeights.push(l[(h-1)*4+3]),e.vertexWeights.push(l[h*4]),e.vertexWeights.push(l[h*4+1]),e.vertexWeights.push(l[h*4+2]),e.vertexWeights.push(l[h*4+3]),e.weightsIndices.push(c[0]),e.weightsIndices.push(c[1]),e.weightsIndices.push(c[2]),e.weightsIndices.push(c[3]),e.weightsIndices.push(c[(h-1)*4]),e.weightsIndices.push(c[(h-1)*4+1]),e.weightsIndices.push(c[(h-1)*4+2]),e.weightsIndices.push(c[(h-1)*4+3]),e.weightsIndices.push(c[h*4]),e.weightsIndices.push(c[h*4+1]),e.weightsIndices.push(c[h*4+2]),e.weightsIndices.push(c[h*4+3])),t.color&&(e.colors.push(o[0]),e.colors.push(o[1]),e.colors.push(o[2]),e.colors.push(o[(h-1)*3]),e.colors.push(o[(h-1)*3+1]),e.colors.push(o[(h-1)*3+2]),e.colors.push(o[h*3]),e.colors.push(o[h*3+1]),e.colors.push(o[h*3+2])),t.material&&t.material.mappingType!=="AllSame"&&(e.materialIndex.push(i),e.materialIndex.push(i),e.materialIndex.push(i)),t.normal&&(e.normal.push(r[0]),e.normal.push(r[1]),e.normal.push(r[2]),e.normal.push(r[(h-1)*3]),e.normal.push(r[(h-1)*3+1]),e.normal.push(r[(h-1)*3+2]),e.normal.push(r[h*3]),e.normal.push(r[h*3+1]),e.normal.push(r[h*3+2])),t.uv&&t.uv.forEach(function(f,d){e.uvs[d]===void 0&&(e.uvs[d]=[]),e.uvs[d].push(a[d][0]),e.uvs[d].push(a[d][1]),e.uvs[d].push(a[d][(h-1)*2]),e.uvs[d].push(a[d][(h-1)*2+1]),e.uvs[d].push(a[d][h*2]),e.uvs[d].push(a[d][h*2+1])})}addMorphTargets(e,t,n,i){if(n.length===0)return;e.morphTargetsRelative=!0,e.morphAttributes.position=[];const r=this;n.forEach(function(o){o.rawTargets.forEach(function(a){const l=je.Objects.Geometry[a.geoID];l!==void 0&&r.genMorphGeometry(e,t,l,i,a.name)})})}genMorphGeometry(e,t,n,i,r){const o=t.PolygonVertexIndex!==void 0?t.PolygonVertexIndex.a:[],a=n.Vertices!==void 0?n.Vertices.a:[],l=n.Indexes!==void 0?n.Indexes.a:[],c=e.attributes.position.count*3,u=new Float32Array(c);for(let p=0;p<l.length;p++){const g=l[p]*3;u[g]=a[p*3],u[g+1]=a[p*3+1],u[g+2]=a[p*3+2]}const h={vertexIndices:o,vertexPositions:u},f=this.genBuffers(h),d=new Le(f.vertex,3);d.name=r||n.attrName,d.applyMatrix4(i),e.morphAttributes.position.push(d)}parseNormals(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Normals.a;let r=[];return n==="IndexToDirect"&&("NormalIndex"in e?r=e.NormalIndex.a:"NormalsIndex"in e&&(r=e.NormalsIndex.a)),{dataSize:3,buffer:i,indices:r,mappingType:t,referenceType:n}}parseUVs(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.UV.a;let r=[];return n==="IndexToDirect"&&(r=e.UVIndex.a),{dataSize:2,buffer:i,indices:r,mappingType:t,referenceType:n}}parseVertexColors(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Colors.a;let r=[];return n==="IndexToDirect"&&(r=e.ColorIndex.a),{dataSize:4,buffer:i,indices:r,mappingType:t,referenceType:n}}parseMaterialIndices(e){const t=e.MappingInformationType,n=e.ReferenceInformationType;if(t==="NoMappingInformation")return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:n};const i=e.Materials.a,r=[];for(let o=0;o<i.length;++o)r.push(o);return{dataSize:1,buffer:i,indices:r,mappingType:t,referenceType:n}}parseNurbsGeometry(e){if(Q0===void 0)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new ze;const t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new ze;const n=t-1,i=e.KnotVector.a,r=[],o=e.Points.a;for(let h=0,f=o.length;h<f;h+=4)r.push(new Je().fromArray(o,h));let a,l;if(e.Form==="Closed")r.push(r[0]);else if(e.Form==="Periodic"){a=n,l=i.length-1-a;for(let h=0;h<n;++h)r.push(r[h])}const u=new Q0(n,i,r,a,l).getPoints(r.length*12);return new ze().setFromPoints(u)}}class WD{parse(){const e=[],t=this.parseClips();if(t!==void 0)for(const n in t){const i=t[n],r=this.addClip(i);e.push(r)}return e}parseClips(){if(je.Objects.AnimationCurve===void 0)return;const e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);const t=this.parseAnimationLayers(e);return this.parseAnimStacks(t)}parseAnimationCurveNodes(){const e=je.Objects.AnimationCurveNode,t=new Map;for(const n in e){const i=e[n];if(i.attrName.match(/S|R|T|DeformPercent/)!==null){const r={id:i.id,attr:i.attrName,curves:{}};t.set(r.id,r)}}return t}parseAnimationCurves(e){const t=je.Objects.AnimationCurve;for(const n in t){const i={id:t[n].id,times:t[n].KeyTime.a.map(YD),values:t[n].KeyValueFloat.a},r=bt.get(i.id);if(r!==void 0){const o=r.parents[0].ID,a=r.parents[0].relationship;a.match(/X/)?e.get(o).curves.x=i:a.match(/Y/)?e.get(o).curves.y=i:a.match(/Z/)?e.get(o).curves.z=i:a.match(/d|DeformPercent/)&&e.has(o)&&(e.get(o).curves.morph=i)}}}parseAnimationLayers(e){const t=je.Objects.AnimationLayer,n=new Map;for(const i in t){const r=[],o=bt.get(parseInt(i));o!==void 0&&(o.children.forEach(function(l,c){if(e.has(l.ID)){const u=e.get(l.ID);if(u.curves.x!==void 0||u.curves.y!==void 0||u.curves.z!==void 0){if(r[c]===void 0){const h=bt.get(l.ID).parents.filter(function(f){return f.relationship!==void 0})[0].ID;if(h!==void 0){const f=je.Objects.Model[h.toString()];if(f===void 0){console.warn("THREE.FBXLoader: Encountered a unused curve.",l);return}const d={modelName:f.attrName?Xe.sanitizeNodeName(f.attrName):"",ID:f.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};on.traverse(function(p){p.ID===f.id&&(d.transform=p.matrix,p.userData.transformData&&(d.eulerOrder=p.userData.transformData.eulerOrder))}),d.transform||(d.transform=new we),"PreRotation"in f&&(d.preRotation=f.PreRotation.value),"PostRotation"in f&&(d.postRotation=f.PostRotation.value),r[c]=d}}r[c]&&(r[c][u.attr]=u)}else if(u.curves.morph!==void 0){if(r[c]===void 0){const h=bt.get(l.ID).parents.filter(function(v){return v.relationship!==void 0})[0].ID,f=bt.get(h).parents[0].ID,d=bt.get(f).parents[0].ID,p=bt.get(d).parents[0].ID,g=je.Objects.Model[p],m={modelName:g.attrName?Xe.sanitizeNodeName(g.attrName):"",morphName:je.Objects.Deformer[h].attrName};r[c]=m}r[c][u.attr]=u}}}),n.set(parseInt(i),r))}return n}parseAnimStacks(e){const t=je.Objects.AnimationStack,n={};for(const i in t){const r=bt.get(parseInt(i)).children;r.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const o=e.get(r[0].ID);n[i]={name:t[i].attrName,layer:o}}return n}addClip(e){let t=[];const n=this;return e.layer.forEach(function(i){t=t.concat(n.generateTracks(i))}),new Oo(e.name,-1,t)}generateTracks(e){const t=[];let n=new P,i=new gt,r=new P;if(e.transform&&e.transform.decompose(n,i,r),n=n.toArray(),i=new ln().setFromQuaternion(i,e.eulerOrder).toArray(),r=r.toArray(),e.T!==void 0&&Object.keys(e.T.curves).length>0){const o=this.generateVectorTrack(e.modelName,e.T.curves,n,"position");o!==void 0&&t.push(o)}if(e.R!==void 0&&Object.keys(e.R.curves).length>0){const o=this.generateRotationTrack(e.modelName,e.R.curves,i,e.preRotation,e.postRotation,e.eulerOrder);o!==void 0&&t.push(o)}if(e.S!==void 0&&Object.keys(e.S.curves).length>0){const o=this.generateVectorTrack(e.modelName,e.S.curves,r,"scale");o!==void 0&&t.push(o)}if(e.DeformPercent!==void 0){const o=this.generateMorphTrack(e);o!==void 0&&t.push(o)}return t}generateVectorTrack(e,t,n,i){const r=this.getTimesForAllAxes(t),o=this.getKeyframeTrackValues(r,t,n);return new No(e+"."+i,r,o)}generateRotationTrack(e,t,n,i,r,o){t.x!==void 0&&(this.interpolateRotations(t.x),t.x.values=t.x.values.map(En.degToRad)),t.y!==void 0&&(this.interpolateRotations(t.y),t.y.values=t.y.values.map(En.degToRad)),t.z!==void 0&&(this.interpolateRotations(t.z),t.z.values=t.z.values.map(En.degToRad));const a=this.getTimesForAllAxes(t),l=this.getKeyframeTrackValues(a,t,n);i!==void 0&&(i=i.map(En.degToRad),i.push(o),i=new ln().fromArray(i),i=new gt().setFromEuler(i)),r!==void 0&&(r=r.map(En.degToRad),r.push(o),r=new ln().fromArray(r),r=new gt().setFromEuler(r).invert());const c=new gt,u=new ln,h=[];for(let f=0;f<l.length;f+=3)u.set(l[f],l[f+1],l[f+2],o),c.setFromEuler(u),i!==void 0&&c.premultiply(i),r!==void 0&&c.multiply(r),c.toArray(h,f/3*4);return new Tr(e+".quaternion",a,h)}generateMorphTrack(e){const t=e.DeformPercent.curves.morph,n=t.values.map(function(r){return r/100}),i=on.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new zo(e.modelName+".morphTargetInfluences["+i+"]",t.times,n)}getTimesForAllAxes(e){let t=[];if(e.x!==void 0&&(t=t.concat(e.x.times)),e.y!==void 0&&(t=t.concat(e.y.times)),e.z!==void 0&&(t=t.concat(e.z.times)),t=t.sort(function(n,i){return n-i}),t.length>1){let n=1,i=t[0];for(let r=1;r<t.length;r++){const o=t[r];o!==i&&(t[n]=o,i=o,n++)}t=t.slice(0,n)}return t}getKeyframeTrackValues(e,t,n){const i=n,r=[];let o=-1,a=-1,l=-1;return e.forEach(function(c){if(t.x&&(o=t.x.times.indexOf(c)),t.y&&(a=t.y.times.indexOf(c)),t.z&&(l=t.z.times.indexOf(c)),o!==-1){const u=t.x.values[o];r.push(u),i[0]=u}else r.push(i[0]);if(a!==-1){const u=t.y.values[a];r.push(u),i[1]=u}else r.push(i[1]);if(l!==-1){const u=t.z.values[l];r.push(u),i[2]=u}else r.push(i[2])}),r}interpolateRotations(e){for(let t=1;t<e.values.length;t++){const n=e.values[t-1],i=e.values[t]-n,r=Math.abs(i);if(r>=180){const o=r/180,a=i/o;let l=n+a;const c=e.times[t-1],h=(e.times[t]-c)/o;let f=c+h;const d=[],p=[];for(;f<e.times[t];)d.push(f),f+=h,p.push(l),l+=a;e.times=iy(e.times,t,d),e.values=iy(e.values,t,p)}}}}class qD{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(e){this.nodeStack.push(e),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(e,t){this.currentProp=e,this.currentPropName=t}parse(e){this.currentIndent=0,this.allNodes=new Cw,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const t=this,n=e.split(/[\r\n]+/);return n.forEach(function(i,r){const o=i.match(/^[\s\t]*;/),a=i.match(/^[\s\t]*$/);if(o||a)return;const l=i.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),c=i.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),u=i.match("^\\t{"+(t.currentIndent-1)+"}}");l?t.parseNodeBegin(i,l):c?t.parseNodeProperty(i,c,n[++r]):u?t.popStack():i.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(i)}),this.allNodes}parseNodeBegin(e,t){const n=t[1].trim().replace(/^"/,"").replace(/"$/,""),i=t[2].split(",").map(function(l){return l.trim().replace(/^"/,"").replace(/"$/,"")}),r={name:n},o=this.parseNodeAttr(i),a=this.getCurrentNode();this.currentIndent===0?this.allNodes.add(n,r):n in a?(n==="PoseNode"?a.PoseNode.push(r):a[n].id!==void 0&&(a[n]={},a[n][a[n].id]=a[n]),o.id!==""&&(a[n][o.id]=r)):typeof o.id=="number"?(a[n]={},a[n][o.id]=r):n!=="Properties70"&&(n==="PoseNode"?a[n]=[r]:a[n]=r),typeof o.id=="number"&&(r.id=o.id),o.name!==""&&(r.attrName=o.name),o.type!==""&&(r.attrType=o.type),this.pushStack(r)}parseNodeAttr(e){let t=e[0];e[0]!==""&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));let n="",i="";return e.length>1&&(n=e[1].replace(/^(\w+)::/,""),i=e[2]),{id:t,name:n,type:i}}parseNodeProperty(e,t,n){let i=t[1].replace(/^"/,"").replace(/"$/,"").trim(),r=t[2].replace(/^"/,"").replace(/"$/,"").trim();i==="Content"&&r===","&&(r=n.replace(/"/g,"").replace(/,$/,"").trim());const o=this.getCurrentNode();if(o.name==="Properties70"){this.parseNodeSpecialProperty(e,i,r);return}if(i==="C"){const l=r.split(",").slice(1),c=parseInt(l[0]),u=parseInt(l[1]);let h=r.split(",").slice(3);h=h.map(function(f){return f.trim().replace(/^"/,"")}),i="connections",r=[c,u],KD(r,h),o[i]===void 0&&(o[i]=[])}i==="Node"&&(o.id=r),i in o&&Array.isArray(o[i])?o[i].push(r):i!=="a"?o[i]=r:o.a=r,this.setCurrentProp(o,i),i==="a"&&r.slice(-1)!==","&&(o.a=mf(r))}parseNodePropertyContinued(e){const t=this.getCurrentNode();t.a+=e,e.slice(-1)!==","&&(t.a=mf(t.a))}parseNodeSpecialProperty(e,t,n){const i=n.split('",').map(function(u){return u.trim().replace(/^\"/,"").replace(/\s/,"_")}),r=i[0],o=i[1],a=i[2],l=i[3];let c=i[4];switch(o){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":c=parseFloat(c);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":c=mf(c);break}this.getPrevNode()[r]={type:o,type2:a,flag:l,value:c},this.setCurrentProp(this.getPrevNode(),r)}}class jD{parse(e){const t=new ty(e);t.skip(23);const n=t.getUint32();if(n<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+n);const i=new Cw;for(;!this.endOfContent(t);){const r=this.parseNode(t,n);r!==null&&i.add(r.name,r)}return i}endOfContent(e){return e.size()%16===0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}parseNode(e,t){const n={},i=t>=7500?e.getUint64():e.getUint32(),r=t>=7500?e.getUint64():e.getUint32();t>=7500?e.getUint64():e.getUint32();const o=e.getUint8(),a=e.getString(o);if(i===0)return null;const l=[];for(let f=0;f<r;f++)l.push(this.parseProperty(e));const c=l.length>0?l[0]:"",u=l.length>1?l[1]:"",h=l.length>2?l[2]:"";for(n.singleProperty=r===1&&e.getOffset()===i;i>e.getOffset();){const f=this.parseNode(e,t);f!==null&&this.parseSubNode(a,n,f)}return n.propertyList=l,typeof c=="number"&&(n.id=c),u!==""&&(n.attrName=u),h!==""&&(n.attrType=h),a!==""&&(n.name=a),n}parseSubNode(e,t,n){if(n.singleProperty===!0){const i=n.propertyList[0];Array.isArray(i)?(t[n.name]=n,n.a=i):t[n.name]=i}else if(e==="Connections"&&n.name==="C"){const i=[];n.propertyList.forEach(function(r,o){o!==0&&i.push(r)}),t.connections===void 0&&(t.connections=[]),t.connections.push(i)}else if(n.name==="Properties70")Object.keys(n).forEach(function(r){t[r]=n[r]});else if(e==="Properties70"&&n.name==="P"){let i=n.propertyList[0],r=n.propertyList[1];const o=n.propertyList[2],a=n.propertyList[3];let l;i.indexOf("Lcl ")===0&&(i=i.replace("Lcl ","Lcl_")),r.indexOf("Lcl ")===0&&(r=r.replace("Lcl ","Lcl_")),r==="Color"||r==="ColorRGB"||r==="Vector"||r==="Vector3D"||r.indexOf("Lcl_")===0?l=[n.propertyList[4],n.propertyList[5],n.propertyList[6]]:l=n.propertyList[4],t[i]={type:r,type2:o,flag:a,value:l}}else t[n.name]===void 0?typeof n.id=="number"?(t[n.name]={},t[n.name][n.id]=n):t[n.name]=n:n.name==="PoseNode"?(Array.isArray(t[n.name])||(t[n.name]=[t[n.name]]),t[n.name].push(n)):t[n.name][n.id]===void 0&&(t[n.name][n.id]=n)}parseProperty(e){const t=e.getString(1);let n;switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return n=e.getUint32(),e.getArrayBuffer(n);case"S":return n=e.getUint32(),e.getString(n);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const i=e.getUint32(),r=e.getUint32(),o=e.getUint32();if(r===0)switch(t){case"b":case"c":return e.getBooleanArray(i);case"d":return e.getFloat64Array(i);case"f":return e.getFloat32Array(i);case"i":return e.getInt32Array(i);case"l":return e.getInt64Array(i)}typeof BD=="undefined"&&console.error("THREE.FBXLoader: External library fflate.min.js required.");const a=rl(new Uint8Array(e.getArrayBuffer(o))),l=new ty(a.buffer);switch(t){case"b":case"c":return l.getBooleanArray(i);case"d":return l.getFloat64Array(i);case"f":return l.getFloat32Array(i);case"i":return l.getInt32Array(i);case"l":return l.getInt64Array(i)}default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}class ty{constructor(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=t!==void 0?t:!0}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(e){this.offset+=e}getBoolean(){return(this.getUint8()&1)===1}getBooleanArray(e){const t=[];for(let n=0;n<e;n++)t.push(this.getBoolean());return t}getUint8(){const e=this.dv.getUint8(this.offset);return this.offset+=1,e}getInt16(){const e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}getInt32(){const e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}getInt32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt32());return t}getUint32(){const e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}getInt64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t&2147483648?(t=~t&4294967295,e=~e&4294967295,e===4294967295&&(t=t+1&4294967295),e=e+1&4294967295,-(t*4294967296+e)):t*4294967296+e}getInt64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt64());return t}getUint64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t*4294967296+e}getFloat32(){const e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}getFloat32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat32());return t}getFloat64(){const e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}getFloat64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat64());return t}getArrayBuffer(e){const t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}getString(e){let t=[];for(let i=0;i<e;i++)t[i]=this.getUint8();const n=t.indexOf(0);return n>=0&&(t=t.slice(0,n)),xr.decodeText(new Uint8Array(t))}}class Cw{add(e,t){this[e]=t}}function XD(s){const e="Kaydara FBX Binary  \0";return s.byteLength>=e.length&&e===Pw(s,0,e.length)}function $D(s){const e=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let t=0;function n(i){const r=s[i-1];return s=s.slice(t+i),t++,r}for(let i=0;i<e.length;++i)if(n(1)===e[i])return!1;return!0}function ny(s){const e=/FBXVersion: (\d+)/,t=s.match(e);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function YD(s){return s/46186158e3}const ZD=[];function Uc(s,e,t,n){let i;switch(n.mappingType){case"ByPolygonVertex":i=s;break;case"ByPolygon":i=e;break;case"ByVertice":i=t;break;case"AllSame":i=n.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+n.mappingType)}n.referenceType==="IndexToDirect"&&(i=n.indices[i]);const r=i*n.dataSize,o=r+n.dataSize;return JD(ZD,n.buffer,r,o)}const pf=new ln,Jr=new P;function Rw(s){const e=new we,t=new we,n=new we,i=new we,r=new we,o=new we,a=new we,l=new we,c=new we,u=new we,h=new we,f=new we,d=s.inheritType?s.inheritType:0;if(s.translation&&e.setPosition(Jr.fromArray(s.translation)),s.preRotation){const L=s.preRotation.map(En.degToRad);L.push(s.eulerOrder),t.makeRotationFromEuler(pf.fromArray(L))}if(s.rotation){const L=s.rotation.map(En.degToRad);L.push(s.eulerOrder),n.makeRotationFromEuler(pf.fromArray(L))}if(s.postRotation){const L=s.postRotation.map(En.degToRad);L.push(s.eulerOrder),i.makeRotationFromEuler(pf.fromArray(L)),i.invert()}s.scale&&r.scale(Jr.fromArray(s.scale)),s.scalingOffset&&a.setPosition(Jr.fromArray(s.scalingOffset)),s.scalingPivot&&o.setPosition(Jr.fromArray(s.scalingPivot)),s.rotationOffset&&l.setPosition(Jr.fromArray(s.rotationOffset)),s.rotationPivot&&c.setPosition(Jr.fromArray(s.rotationPivot)),s.parentMatrixWorld&&(h.copy(s.parentMatrix),u.copy(s.parentMatrixWorld));const p=t.clone().multiply(n).multiply(i),g=new we;g.extractRotation(u);const m=new we;m.copyPosition(u);const v=m.clone().invert().multiply(u),y=g.clone().invert().multiply(v),x=r,_=new we;if(d===0)_.copy(g).multiply(p).multiply(y).multiply(x);else if(d===1)_.copy(g).multiply(y).multiply(p).multiply(x);else{const N=new we().scale(new P().setFromMatrixScale(h)).clone().invert(),k=y.clone().multiply(N);_.copy(g).multiply(p).multiply(k).multiply(x)}const b=c.clone().invert(),S=o.clone().invert();let E=e.clone().multiply(l).multiply(c).multiply(t).multiply(n).multiply(i).multiply(b).multiply(a).multiply(o).multiply(r).multiply(S);const w=new we().copyPosition(E),A=u.clone().multiply(w);return f.copyPosition(A),E=f.clone().multiply(_),E.premultiply(u.invert()),E}function Lw(s){s=s||0;const e=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return s===6?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),e[0]):e[s]}function mf(s){return s.split(",").map(function(t){return parseFloat(t)})}function Pw(s,e,t){return e===void 0&&(e=0),t===void 0&&(t=s.byteLength),xr.decodeText(new Uint8Array(s,e,t))}function KD(s,e){for(let t=0,n=s.length,i=e.length;t<i;t++,n++)s[n]=e[t]}function JD(s,e,t,n){for(let i=t,r=0;i<n;i++,r++)s[r]=e[i];return s}function iy(s,e,t){return s.slice(0,e).concat(t).concat(s.slice(e))}class QD{constructor(){this._states={},this._currentState=null}_AddState(e,t){this._states[e]=t}SetState(e){const t=this._currentState;if(t){if(t.Name==e)return;t.Exit()}const n=new this._states[e](this);this._currentState=n,n.Enter(t)}Update(e,t){this._currentState&&this._currentState.Update(e,t)}}class Iw{constructor(e){this._parent=e}Enter(){}Exit(){}Update(){}}class ez extends Iw{constructor(e){super(e)}get Name(){return"walk"}Enter(e){const t=this._parent._proxy._animations.walk.action;if(e){const n=this._parent._proxy._animations[e.Name].action;if(t.enabled=!0,e.Name=="run"){const i=t.getClip().duration/n.getClip().duration;t.time=n.time*i}else t.time=0,t.setEffectiveTimeScale(1),t.setEffectiveWeight(1);t.crossFadeFrom(n,.5,!0),t.play()}else t.play()}Exit(){}Update(e,t){t||this._parent.SetState("idle")}}class tz extends Iw{constructor(e){super(e)}get Name(){return"idle"}Enter(e){const t=this._parent._proxy._animations.idle.action;if(e){const n=this._parent._proxy._animations[e.Name].action;t.time=0,t.enabled=!0,t.setEffectiveTimeScale(1),t.setEffectiveWeight(1),t.crossFadeFrom(n,.5,!0),t.play()}else t.play()}Exit(){}Update(e,t){t&&this._parent.SetState("walk")}}class nz extends QD{constructor(e){super(),this._proxy=e,this._Init()}_Init(){this._AddState("idle",tz),this._AddState("walk",ez)}}class iz{constructor(e){this._animations=e}get animations(){return this._animations}}class sy{constructor(e){this._body=new Re({mass:5}),this._Init(e)}_Init(e){this._params=e,this._point=null,this._animations={},this._stateMachine=new nz(new iz(this._animations)),this._LoadModels()}_LoadModels(){const t=new eh().load("./assets/VoxelRPGCharacters/Content/Textures/DungeonCrawler_Character.png",i=>i),n=new ey;n.setPath("./assets/VoxelRPGCharacters/Content/Characters/"),n.load("DungeonCrawler_Character.fbx",i=>{i.scale.setScalar(.1),i.traverse(a=>{if(a.isMesh&&(a.material.map=t),a.geometry){let l=[],c=a.geometry.getAttribute("position");for(let u=0;u<c.count;u+=3)l.push(new M(c.array[u],c.array[u+1],c.array[u+2]));this._body.addShape(new ci({vertices:l}))}a.castShadow=!0}),this._body.position.set(0,5,0),this._params.world.addBody(this._body),this._target=i,this._params.scene.add(this._target),this._mixer=new kp(this._target),this._manager=new Qu,this._manager.onLoad=()=>{this._stateMachine.SetState("idle")};const r=(a,l)=>{const c=l.animations[0],u=this._mixer.clipAction(c);this._animations[a]={clip:c,action:u}},o=new ey(this._manager);o.setPath("assets/Animations/"),o.load("Standard_Walk.fbx",a=>{r("walk",a)}),o.load("Standing_Idle.fbx",a=>{r("idle",a)})})}Update(e){!this._target||(this._target.position.copy(this._body.position),this._stateMachine.Update(e,this._point),this._mixer&&this._mixer.update(e))}}class ry{constructor(){this.raycaster=new x_,this.pickedObject=null}pick(e,t,n){this.pickedObject&&(this.pickedObject=null),this.raycaster.setFromCamera(e,n);const i=this.raycaster.intersectObjects(t.children);if(i.length){console.log(i[0].point),this.pickedObject=i[0].object;const r=new P().copy(i[0].point);return r.y=0,r}}}const sz={setup(s,{expose:e}){e();class t{constructor(){this._Initialize()}_Initialize(){this._world=new X_({gravity:new M(0,-9.82,0)}),this._threejs=new ot({antialias:!0}),this._threejs.outputEncoding=it,this._threejs.shadowMap.enabled=!0,this._threejs.shadowMap.type=np,this._threejs.setPixelRatio(window.devicePixelRatio),this._threejs.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(this._threejs.domElement),this._pickHelper=new ry,window.addEventListener("resize",()=>{this._OnWindowResize()},!1),window.addEventListener("click",p=>{const g=this._threejs.domElement.getBoundingClientRect(),m=this._pickHelper.pick({x:(p.clientX-g.left)/this._threejs.domElement.clientWidth*2-1,y:(p.clientY-g.top)/this._threejs.domElement.clientHeight*-2+1},this._scene,this._camera);this._controls._point=m});const o=60,a=1920/1080,l=1,c=1e3;this._camera=new Ft(o,a,l,c),this._camera.position.set(25,10,25),this._scene=new gl;let u=new Ml(16777215,1);u.position.set(-100,100,100),u.target.position.set(0,0,0),u.castShadow=!0,u.shadow.bias=-.001,u.shadow.mapSize.width=4096,u.shadow.mapSize.height=4096,u.shadow.camera.near=.5,u.shadow.camera.far=500,u.shadow.camera.left=50,u.shadow.camera.right=-50,u.shadow.camera.top=50,u.shadow.camera.bottom=-50,this._scene.add(u),u=new Sl(16777215,.25),this._scene.add(u);const h=new X0(this._camera,this._threejs.domElement);h.target.set(0,10,0),h.update();const f=new xt(new _s(100,100,10,10),new bl({color:8421504}));f.castShadow=!1,f.receiveShadow=!0,f.quaternion.setFromEuler(new ln(-Math.PI/2,0,0),"XYZ"),this._scene.add(f);const d=new Re({type:Re.STATIC,shape:new H_});d.quaternion.setFromEuler(-Math.PI/2,0,0),f.position.copy(d.position),this._world.addBody(d),this._mixers=[],this._previousRAF=null,this._LoadAnimatedModel(),this._RAF()}_LoadAnimatedModel(){const o={camera:this._camera,scene:this._scene,world:this._world};this._controls=new sy(o)}_OnWindowResize(){this._camera.aspect=window.innerWidth/window.innerHeight,this._camera.updateProjectionMatrix(),this._threejs.setSize(window.innerWidth,window.innerHeight)}_RAF(){requestAnimationFrame(o=>{this._previousRAF===null&&(this._previousRAF=o),this._RAF(),this._threejs.render(this._scene,this._camera),this._Step(o-this._previousRAF),this._previousRAF=o}),this._world.fixedStep()}_Step(o){const a=o*.001;this._mixers&&this._mixers.map(l=>l.update(a)),this._controls&&this._controls.Update(a)}}let n=null;bf(()=>{window.addEventListener("DOMContentLoaded",()=>{n=new t})});const i={CharacterControllerDemo:t,_APP:n,onMounted:bf,THREE:g3,CANNON:pD,OrbitControls:X0,BasicCharacterController:sy,PickHelper:ry};return Object.defineProperty(i,"__isScriptSetup",{enumerable:!1,value:!0}),i}};function rz(s,e,t,n,i,r){return Fi(),Fu("div")}var oz=qo(sz,[["render",rz]]);globalThis.$fetch||(globalThis.$fetch=nS.create({baseURL:rS()}));let oy;const az=MS(cE);oy=async function(){var i;const t=Boolean((i=window.__NUXT__)==null?void 0:i.serverRendered)?f1(Xm):h1(Xm);t.component("App",oz);const n=_S({vueApp:t});n.hooks.hookOnce("app:suspense:resolve",()=>{n.isHydrating=!1});try{await bS(n,az)}catch(r){await n.callHook("app:error",r),n.payload.error=n.payload.error||r}try{await n.hooks.callHook("app:created",t),await n.hooks.callHook("app:beforeMount",t),t.mount("#__nuxt"),await n.hooks.callHook("app:mounted",t),await Iy()}catch(r){await n.callHook("app:error",r),n.payload.error=n.payload.error||r}},oy().catch(s=>{console.error("Error while mounting app:",s)});
